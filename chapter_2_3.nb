(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    286209,       6357]
NotebookOptionsPosition[    274994,       5970]
NotebookOutlinePosition[    275341,       5985]
CellTagsIndexPosition[    275298,       5982]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["\<\
Chapter 2 /3
Linear ODEs of Second And Higher Order\
\>", "Section",
 CellChangeTimes->{
  3.8158243602670217`*^9, {3.815824420872363*^9, 3.8158244345971684`*^9}, {
   3.815824513857443*^9, 3.815824576444313*^9}}],

Cell[CellGroupData[{

Cell["General Solution,Initial Value Problem:\[LineSeparator]", "Subsection",
 CellChangeTimes->{{3.8158246422560625`*^9, 3.8158247072678013`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ode", " ", "=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"y", "''"}], "[", "x", "]"}], " ", "+", " ", 
    RowBox[{
     RowBox[{"y", "'"}], "[", "x", "]"}], " ", "-", 
    RowBox[{"2", 
     RowBox[{"y", "[", "x", "]"}]}]}], " ", "\[Equal]", " ", "0"}]}]], "Input",
 CellChangeTimes->{{3.8158247347972918`*^9, 3.815824782856825*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"-", "2"}], " ", 
    RowBox[{"y", "[", "x", "]"}]}], "+", 
   RowBox[{
    SuperscriptBox["y", "\[Prime]",
     MultilineFunction->None], "[", "x", "]"}], "+", 
   RowBox[{
    SuperscriptBox["y", "\[Prime]\[Prime]",
     MultilineFunction->None], "[", "x", "]"}]}], "\[Equal]", "0"}]], "Output",
 CellChangeTimes->{3.8158247920390224`*^9, 3.816001870495371*^9, 
  3.816078835299204*^9, 3.8160794910040226`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ode2", " ", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{"y", "[", "x", "]"}], ",", "x", ",", "x"}], "]"}], " ", "+", 
    " ", 
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{"y", "[", "x", "]"}], ",", "x"}], "]"}], "-", 
    RowBox[{"2", 
     RowBox[{"y", "[", "x", "]"}]}]}], "\[Equal]", " ", "0"}]}]], "Input",
 CellChangeTimes->{{3.8158248042542276`*^9, 3.815824826206874*^9}, {
  3.8158248606571913`*^9, 3.8158249325554085`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"-", "2"}], " ", 
    RowBox[{"y", "[", "x", "]"}]}], "+", 
   RowBox[{
    SuperscriptBox["y", "\[Prime]",
     MultilineFunction->None], "[", "x", "]"}], "+", 
   RowBox[{
    SuperscriptBox["y", "\[Prime]\[Prime]",
     MultilineFunction->None], "[", "x", "]"}]}], "\[Equal]", "0"}]], "Output",
 CellChangeTimes->{3.8158249416424685`*^9, 3.8160018805695305`*^9, 
  3.8160788372924047`*^9, 3.8160794939624043`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sol", " ", "=", 
  RowBox[{"DSolve", "[", 
   RowBox[{"ode", ",", 
    RowBox[{"y", "[", "x", "]"}], ",", "x"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8158249516463575`*^9, 3.81582498979257*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"y", "[", "x", "]"}], "\[Rule]", 
    RowBox[{
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "2"}], " ", "x"}]], " ", 
      RowBox[{"C", "[", "1", "]"}]}], "+", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", "x"], " ", 
      RowBox[{"C", "[", "2", "]"}]}]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.815824992682293*^9, 3.8160018854882407`*^9, 
  3.816078842411639*^9, 3.8160794961365423`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sol2", " ", "=", " ", 
  RowBox[{"DSolve", "[", 
   RowBox[{"ode2", ",", 
    RowBox[{"y", "[", "x", "]"}], ",", "x"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8158250075205207`*^9, 3.815825022560403*^9}, {
  3.81600193945603*^9, 3.816001941260067*^9}, {3.8160019960439777`*^9, 
  3.81600202172799*^9}, {3.8160020579720893`*^9, 3.8160021358637*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"y", "[", "x", "]"}], "\[Rule]", 
    RowBox[{
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "2"}], " ", "x"}]], " ", 
      RowBox[{"C", "[", "1", "]"}]}], "+", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", "x"], " ", 
      RowBox[{"C", "[", "2", "]"}]}]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.816002142117812*^9, 3.8160788449042864`*^9, 
  3.816078892783635*^9, 3.8160794983624086`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ypartic", " ", "=", " ", 
  RowBox[{"DSolve", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"ode", ",", 
      RowBox[{
       RowBox[{"y", "[", "0", "]"}], "\[Equal]", "4"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"y", "'"}], "[", "0", "]"}], "\[Equal]", 
       RowBox[{"-", "5"}]}]}], "}"}], ",", 
    RowBox[{"y", "[", "x", "]"}], ",", "x"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.816002159690502*^9, 3.8160021790896893`*^9}, {
  3.8160022895730586`*^9, 3.8160023471860085`*^9}, {3.8160024025035467`*^9, 
  3.8160024137839518`*^9}, {3.816002467727897*^9, 3.816002493835576*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"y", "[", "x", "]"}], "\[Rule]", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "2"}], " ", "x"}]], " ", 
     RowBox[{"(", 
      RowBox[{"3", "+", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"3", " ", "x"}]]}], ")"}]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.8160024703155165`*^9, 3.816002499226887*^9}, 
   3.8160788479441533`*^9, 3.8160788954762135`*^9, 3.816079501771084*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.816002524188342*^9, 3.816002539578924*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"y", "[", "x", "]"}], "\[Rule]", 
    RowBox[{
     RowBox[{"3", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "2"}], " ", "x"}]]}], "+", 
     SuperscriptBox["\[ExponentialE]", "x"]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.816002541285342*^9, 3.8160788978474674`*^9, 
  3.816079504372016*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"yprime", " ", "=", 
  RowBox[{"D", "[", 
   RowBox[{"sol", ",", "x"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.816002623652532*^9, 3.816002654043545*^9}, {
  3.81600268754412*^9, 3.8160027015102777`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     SuperscriptBox["y", "\[Prime]",
      MultilineFunction->None], "[", "x", "]"}], "\[Rule]", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "2"}], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "2"}], " ", "x"}]], " ", 
      RowBox[{"C", "[", "1", "]"}]}], "+", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", "x"], " ", 
      RowBox[{"C", "[", "2", "]"}]}]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.8160026565375013`*^9, {3.8160026911917086`*^9, 3.8160027034076653`*^9}, {
   3.8160794816173105`*^9, 3.816079510224499*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"y0", " ", "=", 
  RowBox[{
   RowBox[{"sol", "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", "1", ",", "2"}], "]"}], "]"}], "/.", 
   RowBox[{"x", "\[Rule]", " ", "0"}]}]}]], "Input",
 CellChangeTimes->{{3.816002759289507*^9, 3.816002794314271*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"C", "[", "1", "]"}], "+", 
  RowBox[{"C", "[", "2", "]"}]}]], "Output",
 CellChangeTimes->{3.8160027973161755`*^9, 3.8160795127103343`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"yprime0", " ", "=", 
  RowBox[{
   RowBox[{"yprime", " ", "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", "1", ",", "2"}], "]"}], "]"}], "/.", 
   RowBox[{"x", "\[Rule]", " ", "0"}]}]}]], "Input",
 CellChangeTimes->{{3.816002816508092*^9, 3.816002854545704*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", "2"}], " ", 
   RowBox[{"C", "[", "1", "]"}]}], "+", 
  RowBox[{"C", "[", "2", "]"}]}]], "Output",
 CellChangeTimes->{3.816002859759385*^9, 3.816079515569275*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"s", " ", "=", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"y0", ",", "yprime0"}], " ", "}"}], "\[Equal]", " ", 
     RowBox[{"{", 
      RowBox[{"4", ",", "5"}], "}"}]}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"C", "[", "1", "]"}], ",", 
      RowBox[{"C", "[", "2", "]"}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8160028803562565`*^9, 3.8160029512883883`*^9}, {
  3.8160030046677723`*^9, 3.8160030110195713`*^9}, {3.816003069344174*^9, 
  3.8160030759215236`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"C", "[", "1", "]"}], "\[Rule]", 
     RowBox[{"-", 
      FractionBox["1", "3"]}]}], ",", 
    RowBox[{
     RowBox[{"C", "[", "2", "]"}], "\[Rule]", 
     FractionBox["13", "3"]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.8160030136386156`*^9, 3.8160030793451815`*^9, 
  3.8160795218162427`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"sol", "[", 
   RowBox[{"[", 
    RowBox[{"1", ",", "1", ",", "2"}], "]"}], "]"}], "/.", "s"}]], "Input",
 CellChangeTimes->{{3.8160036100682087`*^9, 3.816003626710287*^9}, {
  3.8160038756463647`*^9, 3.816003876345207*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     FractionBox["1", "3"]}], " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "2"}], " ", "x"}]]}], "+", 
   FractionBox[
    RowBox[{"13", " ", 
     SuperscriptBox["\[ExponentialE]", "x"]}], "3"]}], "}"}]], "Output",
 CellChangeTimes->{3.81600362866918*^9, 3.816003878509657*^9, 
  3.816079524193323*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"A", " ", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "2"}], ",", "1"}], "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.816003907519396*^9, 3.8160039263866835`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2"}], ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8160039299938927`*^9, 3.816079526157591*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"b", " ", "=", 
   RowBox[{"{", 
    RowBox[{"4", ",", 
     RowBox[{"-", "5"}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8160039383379755`*^9, 3.816003959067175*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"c", " ", "=", 
  RowBox[{"LinearSolve", "[", 
   RowBox[{"A", ",", "b"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8160040409360867`*^9, 3.8160040632553034`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3", ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{3.8160040656495304`*^9, 3.8160795355328484`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Y", " ", "=", 
  RowBox[{"ypartic", "[", 
   RowBox[{"[", 
    RowBox[{"1", ",", "1", ",", "2"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8160040906027155`*^9, 3.816004106576475*^9}}],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{
    RowBox[{"-", "2"}], " ", "x"}]], " ", 
  RowBox[{"(", 
   RowBox[{"3", "+", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"3", " ", "x"}]]}], ")"}]}]], "Output",
 CellChangeTimes->{3.8160041085371103`*^9, 3.816079537760388*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{"Y", " ", ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "2"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "9"}], "}"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"x", ",", "y"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8160041277008786`*^9, 3.816004214591447*^9}, {
  3.8160043408218565`*^9, 3.81600434152908*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwV13k8VN8bB3Bi7tiyJ2IoVCpljSg9h2RLhcgSihZRIZQUZf+mbMW3yJKt
QhFF+UaEiiRkX8Yyd8ZaSIlkmd/5/TWv9+ueua97zj3Pcz53g6uX1elVHBwc
spwcHP//NTs99vXd+Om9Is0pLDZbCHHvW+c9KGUIV+Pt1f9bEEIaD5NSX0pZ
A8+zIaFLv4TQgS9dL9KkTsGv1b7+syNCyPbU/Nu7Un4QGN/EEmkSQv0q/+yL
kQoHYtz2wcdUIZSx5nDkLalEENeujRbdI4RCeF5ujpLKgdD5ATXBUEFkZ5/5
/MdMCahI3zihKrQa8bNDHI1lq4A7ZM2hil5+tNFyaqz29ntoX/Fl+37hQ/5N
OpA0+wlKGKmXiUZetLZEZICTsxnW8pQlG/3lQa/IfY3Ne1phfqzQaZ0WD+o0
CZmJMW4Fr3L3bhsNHjRXWClhbtUKo7I8mxNUeZD2NR2XerdWiAqS2Cu2jQeV
ianMvbvbCldnEoy2rOdB/xmuW/9irBW0da45POPjQRWPf/gmJrbBs9JMV34G
FdV4pEnbf2+HnwETyuIJVPRy/Nw557l2qDKy4huPp6Kcs7rlJzk6QBJZn6mK
paKIM10OnuIdkF3VkOR9i4pMXEUehO3pgIdalAFWCBU120dIFkZ3gFeHRrr4
RSqim1xYw7W9E/74bcyItaCi35v0hAoudIH2zH63XjEq2ksa1N260gXmDvfd
hkWoKDLN5MbZsC54bmIp8lOIiiTEracVkruA+tPjuLAAFWlxnmt+8L4Lindp
9p3gpqIrfUlxN6W7ISA2dcHiN4GW4maFTn3qBrGn8rLnuglkeOBvnX57N3hk
LN/K7yRQNMERLDfYDTS3mcRv7QSiBfH/6J3tBn/RnOs+Xwm010O+xXJ9DxQZ
1aYnNBDohqFFPPj3QP26rkr5twRatfBUWHpjLwgqMiYvZhNI+ovBL1DpheJD
lY9XMgmkmdnTcUqnF4y7/d9GZxDotCk1pfBgL3iJ23EVpBGoPtl1o8HlXoj7
Vj62fJ9AcbpSuu51vUAkjPQMRRNIJjDy5Gv3PihPOumQ50+gnRY0I7ovttp9
fZfLBDqkWKLEeb0P9lamB627hJ+vkTFpdrcPqjcI/4r3IRApo3dl4E0fbDnc
/DnmAoHy3v6KpgjQgXG5dP7jSQJpsU+8OlJIB+OAmKM7LQlkfvBd6P4yOpBh
m6ZlLAh0MkXusHYNHTgkBeoohwkUrz0wuq6TDp/y3mn0mRNo3OuYFLlMByJ+
eiHRhECpQzaB3gf7QTDl9SpDRCDOGjODmO/9cDTqsU2sKoEkhfMFb8z1ww3z
4ONpKgTa4czb580xAJ3hsxkFOwjk8LfO11p8AEIiKj59VSZQifr+R9J7BoB+
Tv+Z0hYCnckGnvzbA3A/SCFEWJ5AjeGaTR+3DoKcrXPzR3EC6Qp9XnVn5yBo
5LurfxMjUG6yi/YxNAhl8U8WhbHDCmMzpm0G4ZxiUtUJETy+e8xHMmQQAujO
FBFBPH5b2lqPrkFY8yrYtIRKIIlXGuaa5CAMTw5OThEECkcNwSvfByE6ZfbX
Vuyi/EU/U84h+HRFQfEJN4FuVykN9EsMQbwMKVDESSCD8dAiwmAIYlOyariW
KChgR1PDOeMhmGD7uVgvUlCRr9Rwi/kQnKx/6PT4LwXJrjyXSrEdgsTEb+cP
LVDQgmh/qMqFIeA9MTBYOIfH79G2sUsaArnEvL6iGQqSi/+2kDc1BIPui9av
xyio0uVG3otf+P96dhO7sZ01xOzL/wxB8cXk3OpRCkrt1C1rXMWAe7S59JYR
CpKk3bo8LcHA9W5/YYlFQaL5Sr80gQGvOKRP3mZQUPG1iiw9QwaMG2l7ymNb
HLSwMjJlQGDrXPqbIQqK++FfbHuEAUGxd72nBilIQLvO66obA2IdHjWdHKAg
yvvT36viGJAjWm8a0UdBOf8upNQnMmDjzj33d2AbusUc+JrMAJbsFmpPLwWF
8pXmk9kM+PTq0UE17BULbndKGQMce/7zmu6moDT5JEnBtwzQuBb2ORN7z+y2
eokaBjRx6pjYYF+7f2SzUiMDVqazsqu6KOhPf9aw2RADpkPX9Gd2UtD951r/
HhlmwA7mkK4TtlZIg6HjBAOY9cJlUtiXFH9mX5hlgP8autC9Dgr66aHvGs9D
wjHBLpXUdgq6s6dDJHk1CYaOgWEnsFUF3aszRUmoN+b+vRHbszh+/UsZElIy
llRL2ijo2/zgQIcqCaoldtSBVgp65RZXY6ZFQtDiG8En2MFdex9X7SZh/V6D
UxexJV6nXcgzIsE/tPkPLzZj00FLWXN8/xIn7e6vFPTs3pJmgiUJqfs21D7B
Nrh8bCnQkQR7mkO1GfbqEb6hGRcSTCPsNGSxu23e1J5xI+FdWPrMzxb8fDul
blv4kLC9RtwqA/vBbKeU4k0SnOR1UvmwT5+KXE6KISH/4CqPsWY8v/adjNUJ
JNyh6IXWYX98mZg7n0ZCvL7snSjsOwqG0eezScjItPjnPLZjwi8vRi4JSkYC
dRbYMz5W2p9fkiBhvUuehl1Bckqj//D9Q3bqUbAjrYpXSipJ4A7syJhqoiDL
mhPklvckRE0OmPdgy6gLf0z/hNcrTVL/A/ZoZlWeWDMJC16mQS+wX4h4xdxs
J4E8vYszEzsoRPbicg8JY6nPGuOxTWa+WPsMkuB2+MJgCLaYS9CuURYJEe36
On7YAy3KMo4TJFAzZnrcsPMQnd0yTYKdgWG1I7Zf0W3m/t8kXD/LOW2FDet3
1735S8Ja+g9XM2y++Il8FQ4mmIb1yuzDbmcnx+ZQmPDuRKSMHvZDL1MfKX4m
ZCZUuOzC9hj8YxMrzIRQ2/3fNbE1D+fqcEkw4Tz3eLk6NrvSlnZFmgk1gt4t
atgNO6ick+uZYELN3vL/6/+mv2K5bGKCWIpZnQb2CcEz9Z3bmBCWoJKnhb3t
+ppnB9SYoNu5rlkXe27yfdw7LSZInO7YhbCrnfx8d+5hgpKz0ogRdvQXBdt8
fSbkL9I7D2Hb6rXpyhkzYTGhgs8OW74gVDbRnAmJyfEhrtiTMuqreK2YwJki
v9sTuyyaMRxky4ROgz3a17BDl+I//XRkwnPbJ5eisA+eRwVurkyQr9g+l4Qt
SZ+Op7sxocQzuSwPmzzw0M/yAhN6o0oqyrGvbFvZvfsKEySnN0QxsfelFMgV
BTHBbYHHcgFbkN+Ja2MYE55+r7cXxvsnZ6K8QTCWCbJoRdkA2/P+YQWPBCbA
VPVlR2xtQ+a1D0lMWP9nZtYfuyGNb3tgNhP4pppiXmAnmqVHdOUyIZlTMvcr
tvO82oB6IROmqyhzM//fvxb2ceNlTHB/xKOshevjzfL3UcNKJqS8eyPmgB2e
H4wyapnw2PPAjhvYkty5M0ebmHA/bN9iI/be13NH3jOZULBBbfoyrkeeU7ee
yY3j9XsRcDYHu1VYlnJtigne7lJibdinPfa/UltgwukrqYsauP6jaYmSDwVZ
oPveXZwb95OjDZsv/hVjgdItBbHd2HL+5Z9spFiQ7/BS3xf7RQt5VUCRBQXu
97aPYveEqfUH6LDgWc+u3f24P2WpftjZsZcFrAHvlzTc387328WqGrIgTozb
4Tg2h3YwjB5iwabLwWoj2JsmmjKtT7Gg7XIp9yrcT/0szp9RiWNB7+pwMZ8e
PL9lduWtRBaYP3987AM2NT9h7UgyC17a6jdL4f79gKu8PjWHBXBwy66P2NWv
eLfxvWFB0Oo2/u10/D5pT6ZZLBZY37JNUMfnBzoa1s8cZ8HXjYfv3cH2iTv+
mZxigcqgVcoMdien5JOhPywocvyRX4LPn/SRm850gWHosMimG5EUtKPI40ub
5jCI1cmfSxnG9TFuVN6qMwz+Z62v8+Hz7q68Qt7XvcNQK+ly5yr2XGJfeLPJ
MLh2hrxywudjZYD5ns+OwzC+LLegMo73774dT2vCh0F9NZcB9yQFXQ/kS66O
GgZTCZZBGHZR6Ujku9hhcFwM1ueaoiBxpYeulUnDwJ47q01MUxBdQHjdm2fD
MNJzeJUkPq/Pd87cLG4fhggye97jN36/7qVnMhRH4Po9s6AvKxQ0gQpu8m8d
AQ2R9R4BbAoylnyUf1llBNQUCgM3ceC8WZc4Za47Auqz1qLhOF8EKPpdXjg8
Altrriya4/xxZlA90uraCCQ3VGet4SOQvk3RI+7WEfju5KYdIkGgdOXcOq+u
EVDyXYizXIvzMVfGeC99BPQa/XkVJAlU9iJue/HoCJTXP3L+JIXzmbBXqdPy
CIQ618Yo0HAe/bz9wyulUbgroTG4WpFAc+gp6+yNUdBj/bb+T51AFTnfUvzD
R+G0apJ2mgaBQnmUj0RGjcKxTlHRUE0CCbY8q85OGAVbG/nCQ1oE2nS8MH3g
ySi0tDy68UuHQEeDiu2sW0bBk+eI9zl9ApX+97oRNoyBcd/hRjGcT/3U35dI
1I6BnuL0e+SL56u5PuNO/Rhk9kdxXPUjkJ1W4G2BpjHQ3XHftgTn4d26mq6r
esZgyOyOrfIVvH4GOUJTU2NAKlembAnCedsy3OPDunHgubVW2v4fAuV7G673
8xmHal/pbbdTCTRY+P721w0TkCXaFbwT5/+WSe7v6psnwJSP723BZwK9U95v
nqg8ARdUu7g2fyFQRv4HAVvtCWhQIotkWgjk+vhjDN18Aoo6tkeK4++NkbT6
uFH/CRDO8uHVIgk0Gd2YsPxlAq6kG3TAIoEWPdpTtlz9BsLse23uqlS0TZ+6
cqb8O2QtGy/dSKci46wNbsVrp2D4wWu7go08yJ92XJ7hOA3HjcPs77zgQcrf
bfi7Dv6AXo5/Q4+a8SIxoR887//+gHciwVWqK7yIuyrluULqDPisXbY0LuFD
5zTLe3gP/IQa5jcZtSh+9NTUNaNy7ifoH6sc5/cQQL+/rRMeufcLdHZvXaSY
rUalR4y5Eg1ngbq2dj7TXBDdMIl4WDIyC/0FS/lscyG0od+sOzviN9iEh4Ua
bxNGutrhiVLqc3Bp5TrXtVph5CjbvMDZNgeaZFnCPnsR9LshhvQOmYc/j5zt
LLhFURK3s5+V4h9oCcwycn0misQGSrNWvf8DR5KsklXtxRAlKMRa5+ICRHgn
PxigiSOOPOfnpOhfyEhU/+AwII58HjyPEa35C+nr++h/ytagt9tu8oh4LsJR
UvqU+AMJJGLmoxwquASdp6IWyy+tRfTtLW0BFUsgnKsAzZ6SqCgdFFnOyyAn
yZU+7SKFnJ5ridBWloHjrnVerMM6FByRGULPX4GQJLkLWn7SqGCMliJozobr
Onqv0yNl0M20iBMDh9iQmx7AG3pbBp2ymtxYaMmG8lL+fWfiZZBMRUXRQVs2
BBXXnld7IINuxR37GO3KhtL0f9JbC2TQWa3kGb4ANhitfZiCOmSQfLi4CfUx
GyJLc9mfFWloZVfg6q5cNhSp6Yc3bqGhnklm6+OnbBjc1D77ZQcNxdu+dDIq
ZkPr5uAHbbtoiL3Vyjeigg1is8JL4+Y0RP8al87Vxga2i4bOvks0VBY5f7Kt
gw0/BJXjrK7SUOLu41uyu9mwNySozfUGDR14tKPEYIANvC61myOjaOjNlS+f
QsbZcDSQl6s7jYbubd8ZZ/kdX7891zyVRUMXyVTrDdNsEIr0jCZyaUjJ/Pzg
u1k2SE4mte96QUPcnO058fNscNyXdOLIaxoaKt3tceIvG5wcKuieFTRU4ZGt
orrMBufybaa3q2novhz/bzYbz3de4HHuRxr6H1AhUa0=
       "]]},
     Annotation[#, "Charting`Private`Tag$6307#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["x", TraditionalForm], 
    FormBox["y", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 1.9999999591836735`}, {0, 9}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8160042180845757`*^9, 3.8160043485723333`*^9, 
  3.8160795414343605`*^9}]
}, Open  ]],

Cell[BoxData[""], "Input"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Mass-Spring System,Complex Characteristics Roots,Damped Oscillations::\
\>", "Section",
 CellChangeTimes->{{3.816004412819279*^9, 3.8160044944148397`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ode1", " ", "=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"y", "''"}], "[", "t", "]"}], "+", 
    RowBox[{"0.2", 
     RowBox[{
      RowBox[{"y", "'"}], "[", "t", "]"}]}], " ", "+", " ", 
    RowBox[{"4.01", " ", 
     RowBox[{"y", "[", "t", "]"}]}]}], " ", "\[Equal]", " ", "0"}]}]], "Input",
 CellChangeTimes->{{3.8160045485391254`*^9, 3.8160045827238383`*^9}, {
  3.8160047913071632`*^9, 3.81600482748687*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"4.01`", " ", 
    RowBox[{"y", "[", "t", "]"}]}], "+", 
   RowBox[{"0.2`", " ", 
    RowBox[{
     SuperscriptBox["y", "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}]}], "+", 
   RowBox[{
    SuperscriptBox["y", "\[Prime]\[Prime]",
     MultilineFunction->None], "[", "t", "]"}]}], "\[Equal]", "0"}]], "Output",
 CellChangeTimes->{3.8160048311243954`*^9, 3.816079547555116*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"yp", " ", "=", 
  RowBox[{"DSolve", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"ode1", ",", 
      RowBox[{
       RowBox[{"y", "[", "0", "]"}], " ", "\[Equal]", "0"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"y", "'"}], "[", "0", "]"}], " ", "\[Equal]", " ", "2"}]}], 
     "}"}], ",", 
    RowBox[{"y", "[", "t", "]"}], ",", "t"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.816004902638116*^9, 3.8160049962894588`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"y", "[", "t", "]"}], "\[Rule]", 
    RowBox[{"1.`", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "0.1`"}], " ", "t"}]], " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"2.`", " ", "t"}], "]"}]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.816004998737501*^9, 3.816079550174844*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"yp", "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", "1", ",", "2"}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "20"}], "}"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"t", ",", "y"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8160050272165656`*^9, 3.8160050894906273`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
5LOipqM9qNQvtaBrhyRojHlvJ+b3oPk9/E+f6khCtPy/Eur1HmTf+++S8n5J
sF84rPtRoAep8dIk952UhJpLSpY0zW40Hjl+K+6MJNAehXyLXe9CqWy/JybO
SYJs1ni0Q0UX4tgikv8gUBJW2pqOyFp2oemVEya0GEnQNRM4VubUiTJ6+7w9
KiWByUvG+JEVDTmc+EEtraPj+945dJqThgRo//S4WiShzHert1d1O7rVLM38
oY/OPw+vaeu3o1Plzgl/VyThap2n+Tp/G5LIHsNRSlJwk09ulP1VC2ojrhCH
d0jBPYm0nUN2Lej+c5YILR0p0NzmrC7L2oLWkkjWXXul4LDFWOySKwV1RnpM
yjpIgeWm5a5L6k3o0aU5no8PpaDZ6J7pQ0oNYkPLzr2/pKCP+5LNC4lSFLhH
kfXjmhQc1ytU2vKwBI3v+y83ilEamE4NiJT/K0LlB76t7eWWhpakgSsp/QUo
yCry0SuyNEySnDkzdr5FM2fkqwKcpcH8sarFk0shqOGBjSJvszR4ztkxl0R9
xAZRd5um26XBbJn3/THuYpwdU+pX2SsNb9HGYcvIEhwWT/h2eVoaFLpSQ5TD
PmMpyorKTyYZeGun71in+g3TusqrbKRkoOwVO7tfy3fM+V9vYjlBBhw1JK74
hVTj/b3L53bIy0CY//YGoloNzu9X5NuuIgOzv2mil2/X4ocjD50+68uAwhlJ
IwG5Bmw6Z/9b1kYGeuOQAkMEBacJhFJv2MlAxqnfCktUCl4yfJ3X+58MfC1G
OTySLfhZxPrZeBcZWMhquVT0pgWvkVI6t/vIQLukF6fXt1ZseaSywO2SDMQd
Y2s7toWKMwNmoysCZEBPfl/eYRO6v6syMrt2TQb8TVT3nK+m4jcufSXzETLw
DPO+FSxrw0wRW+MPP5SBkI6TL01X27Dde9WLOTEyoD5zRSxwZzveynCd7Joo
A6/YnqbXp7djp1Sp5I4MGRDexJGMV2m4oNLkstYrGUiR7k6aeUvDbLPex2Le
yEClbXJaxQANFxlg9kMf6PGRVC0d6MA8nSeDy77KAPnfXqHlXx3YbTPcTrxS
BgTWDNclpTrxZ4V3WoHVMnCvqj2YZNqJPfwZ5jSaZKDIdvo5La4Tf01RrH3Y
IgOWUk8eXCntxEKVlhkzbTLQ+Mztxe+BTlzO99wxo0cGzox89wmRp/tTg1p9
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
gtqsN0fjbxqKdxesdz1AhALvC3dj/9GQh2Jg/c1DRFDfuZYasKUDGU1216dZ
ECFV+O+JK9s7EHf2robSo0T4ajzdksTZgYbPPmvotCbC7tIyuR6eDlRIYm5c
Pk6EHzeW/A34O9DdiTONfP/R9YoI/V0s0IEcsmoadzjR9bfpHbAV7EA7zio3
mTsTYV5mxFuAHvd7SF9460oEqa3jf5ro9x948fNwuRMh6q2Wzi3eDmRwYdt7
73NEwKIrT9S4OtCU7/rRZm8ivDUef9FG55fo93Nxx0Ui1Cea9/jR+ZtcHnkU
7U8Ew7aFTm56f0tXOrQWAokwGiK4K3OFhl4G17cfDSaCTr9Lgd4PGrK6gQPy
bxCBzWpspXqUhhhufRDmDyXCFfu/1dbdNJQbllV86Q4R9jIdWRlooiHH8OQT
bfeI8LCz7D/PchriiIha04qk9+tl37dUQEOfHoQmx0UT4dSRI+dCMmlIOPZc
n20CEWYWdqen3aGh749PXi9KIgJB47XbTn8a8ks4Ji2SRgSr81qujS401JJi
6NyVTgSe1ZWPgoY0FPJ0B5NBNh3/sFrQd3kaUnsh9zLpNRFWMv+zvslNQ/ez
2Mf+yydC0RnBNLHBdmSQs3n7cyERqOf/Nq9/b0eTb34pSJYQoVrVPXX2TTsy
zu9x78f0fWnDDMwB7Wjz8+vZU41E+PDvU4faRhvKxU8jv1Ho+3W49H5xbxty
KH+kJttGhOIDNXVOpW2opPqqz0g3Pb4vKc5Kf34vtR5aOjNJfx6oRz2YhqhI
th3FfZ8hgnLF2/j0EiqidOzUIf2kz7tN4sXFGCpS7RMPnFwmAv9KblbSbiqa
mJhZ92SWB5HJ5RTbKPr7ZXogpZ5FHm47/n39yLkV7Z+j7lJhkwdOoQxJrp2t
6Pli6Y05HnngFWK+U0ltQf9t3Gf2kZIHcxprRhAH/X3Gp8Lury8PlSjj69VP
TWj3+fNT9E8maBKyWoixbEK51bnV5UgeWHdn1iSPNaKHwRphPCbycCftrHsK
RyMyH9fZeG0lD4YhPLtaLOpRXcmen8Pn5KGdI01ZNrsaVZ06TrVMk4eM/+RE
ZJ5jpFWa+P7yc3kI+a0eXZpShtIFu6PS0uXhoPMr58CELyiszsF8Nkcefskf
bb4RUYr2arlUhRfJwzDO3j5ztgh93Xa+qIwiD6vbTp9v4stFpbm3klWYFaBy
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
aszrzJiar6YKFfb2IfZ+1dhHLLJaTFMV+sbW7RRyq7FaZLrEjJ4qfGj2LjeR
qsE5F6nf75uoQv7UIYcL8zV4u8rJhV9mqvA0bFbuH6EWu49NizscVoWIX3sb
j1vVYgU7Jl8Va1VQ0h3Nc82rxS92aYg3OqvC9pctDh/t63C5BVvouqsqgCmB
i3ajDg+fHJlWcleF01h5b99Lun+8FffpjrcqnPfwnkudrMP7H3nLFvqqAht1
0slmez12TTeNGPFTBa13eabzivU4/fvqCbiqCq17vi42uNbjyo7Wb97XVYGn
tIOd82Y9Hp18rZR6UxUcswfNVFPqMZHdaXU1XBXii+xc2Jvr8X4JXWfF+6pg
lFg8Xz1Or6/KU2v7UBXyFBbYXTbqccaR8sQPj1Uhy+ZIiwqpAX8/lcwwnKAK
m36jDxwMGvC4r587TzJd3707/5w1b8AsoYcpu9NU4YqadomFYwNWeKygd/65
KugUJ9zkOd+ATTI2nyanq8IJSinX26sN2O1j57a6LHr9igIl4r0GfKf6/YU/
OaqwkWeS5R/XgDM7IzoUclVBO3T07PNndPyp08jmPX3+YW+PZ+XQ8deMskIL
VEHdzdM7/AMdn0OIO7+IPv+Je3l7ShswSfJnwOAner0/EmTatwZ8QK2mn6tM
FUz8W//sr27A7ui5ya5vqvDbcXHPw/oGfNcyKPdcpSpMZtvp5jc14GznY0JJ
1arAmnhB6D2lAddcVLleU6cKImlKivdbGvBk6NbxlUZVuERZ+wr0mDWu/7B8
iyqYj7dAa3MDVswsKjzWpgrPq3j4oZGOXxQteatDFZLTwnIjaun4NR6333Wr
wu04x7j8Sjp+1965/j5V4P4rb1Nc1oBfTYvbcA6pgp5YyZ2UogZct7702XBU
FVzD9ZtO5jXgaY4moucEfR8EtvUwZTZgNqmsB4nTqnDXuODsneQGTN4RsvR9
ThXOOq/rz0Q14INwwmF5XvV/FVdpOJVdF9ZAKYoiGaLQSMdznkdE2EsRr3oV
qciQMURlblIqIhmSZKxkKhkipIz7TJwTpZIpQymk5JU5U/nO93Nda+813Pe9
9rUXaK0oViSDX+OTZiRHaZzPZwjrj7X/a5zj23vnysx2EORF022O8POFVM0+
/bMd7lbOnVM35Oe7G+/UJUCDYr1lMWPka6zy0pjSXkKDrwufXt22/DXe/2pD
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
/gfx/MPh
       "]]},
     Annotation[#, "Charting`Private`Tag$7080#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["t", TraditionalForm], 
    FormBox["y", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 20}, {-0.7910656466530374, 0.9256128797916318}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.816005092054014*^9, 3.8160795523144794`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["The Three Cases Of Damping::", "Section",
 CellChangeTimes->{{3.816005234426091*^9, 3.8160052594905834`*^9}}],

Cell[BoxData[""], "Input"],

Cell[BoxData[
 RowBox[{"Clear", "[", 
  RowBox[{"y1", ",", "y2", ",", "y3"}], "]"}]], "Input",
 CellChangeTimes->{{3.8160053250259314`*^9, 3.816005342554524*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ode3", " ", "=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"y1", "''"}], "[", "t", "]"}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "/", "2"}], ")"}], " ", 
     RowBox[{
      RowBox[{"y1", "'"}], "[", "t", "]"}]}], "+", 
    RowBox[{"y1", "[", "t", "]"}]}], " ", "\[Equal]", "0"}]}]], "Input",
 CellChangeTimes->{{3.8160053544916472`*^9, 3.816005418153982*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"y1", "[", "t", "]"}], "+", 
   FractionBox[
    RowBox[{
     SuperscriptBox["y1", "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}], "2"], "+", 
   RowBox[{
    SuperscriptBox["y1", "\[Prime]\[Prime]",
     MultilineFunction->None], "[", "t", "]"}]}], "\[Equal]", "0"}]], "Output",
 CellChangeTimes->{3.8160796250424*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"y1", "[", "t", "]"}], "+", 
   FractionBox[
    RowBox[{
     SuperscriptBox["y1", "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}], "2"], "+", 
   RowBox[{
    SuperscriptBox["y1", "\[Prime]\[Prime]",
     MultilineFunction->None], "[", "t", "]"}]}], "\[Equal]", "0"}]], "Input",
 CellChangeTimes->{3.816079560362356*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"y1", "[", "t", "]"}], "+", 
   FractionBox[
    RowBox[{
     SuperscriptBox["y1", "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}], "2"], "+", 
   RowBox[{
    SuperscriptBox["y1", "\[Prime]\[Prime]",
     MultilineFunction->None], "[", "t", "]"}]}], "\[Equal]", "0"}]], "Output",
 CellChangeTimes->{3.816079560479356*^9, 3.8160796276038833`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ode4", " ", "=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"y2", "''"}], "[", "t", "]"}], " ", "+", 
    RowBox[{"2", 
     RowBox[{
      RowBox[{"y2", "'"}], "[", "t", "]"}]}], "+", 
    RowBox[{"y2", "[", "t", "]"}]}], " ", "\[Equal]", " ", "0"}]}]], "Input",
 CellChangeTimes->{{3.8160054463100977`*^9, 3.8160054917460585`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"y2", "[", "t", "]"}], "+", 
   RowBox[{"2", " ", 
    RowBox[{
     SuperscriptBox["y2", "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}]}], "+", 
   RowBox[{
    SuperscriptBox["y2", "\[Prime]\[Prime]",
     MultilineFunction->None], "[", "t", "]"}]}], "\[Equal]", "0"}]], "Output",
 CellChangeTimes->{3.8160055000643945`*^9, 3.8160795628428164`*^9, 
  3.816079633858683*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ode5", " ", "=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"y3", "''"}], "[", "t", "]"}], "+", 
    RowBox[{"3", 
     RowBox[{
      RowBox[{"y3", "'"}], "[", "t", "]"}]}], "+", 
    RowBox[{"y3", "[", "t", "]"}]}], "\[Equal]", "0"}]}]], "Input",
 CellChangeTimes->{{3.816005509124984*^9, 3.8160055586753583`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"y3", "[", "t", "]"}], "+", 
   RowBox[{"3", " ", 
    RowBox[{
     SuperscriptBox["y3", "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}]}], "+", 
   RowBox[{
    SuperscriptBox["y3", "\[Prime]\[Prime]",
     MultilineFunction->None], "[", "t", "]"}]}], "\[Equal]", "0"}]], "Output",
 CellChangeTimes->{3.8160055617212167`*^9, 3.8160795649132533`*^9, 
  3.8160796358921566`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"yp1", " ", "=", 
  RowBox[{"DSolve", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"ode3", ",", 
      RowBox[{
       RowBox[{"y1", "[", "0", "]"}], "\[Equal]", "1"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"y1", "'"}], "[", "0", "]"}], "\[Equal]", "0"}]}], "}"}], ",", 
    RowBox[{"y1", "[", "t", "]"}], ",", "t"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8160055739987087`*^9, 3.816005704508348*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"y1", "[", "t", "]"}], "\[Rule]", 
    RowBox[{
     FractionBox["1", "15"], " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "t"}], "/", "4"}]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"15", " ", 
        RowBox[{"Cos", "[", 
         FractionBox[
          RowBox[{
           SqrtBox["15"], " ", "t"}], "4"], "]"}]}], "+", 
       RowBox[{
        SqrtBox["15"], " ", 
        RowBox[{"Sin", "[", 
         FractionBox[
          RowBox[{
           SqrtBox["15"], " ", "t"}], "4"], "]"}]}]}], ")"}]}]}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.816005679391931*^9, 3.8160057068003397`*^9}, 
   3.816079570135458*^9, 3.8160796380499086`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"yp2", " ", "=", 
  RowBox[{"DSolve", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"ode4", ",", 
      RowBox[{
       RowBox[{"y2", "[", "0", "]"}], "\[Equal]", "1"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"y2", "'"}], "[", "0", "]"}], "\[Equal]", "0"}]}], "}"}], ",", 
    RowBox[{"y2", "[", "t", "]"}], ",", "t"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.816005763044145*^9, 3.8160057791606083`*^9}, {
  3.8160058254299607`*^9, 3.8160058552177825`*^9}, {3.8160061340149326`*^9, 
  3.816006209651072*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"y2", "[", "t", "]"}], "\[Rule]", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", "t"}]], " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", "t"}], ")"}]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.8160061847392197`*^9, 3.816006213773703*^9}, 
   3.8160795723009834`*^9, 3.816079644163287*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"yp3", " ", "=", 
  RowBox[{"DSolve", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"ode5", " ", ",", 
      RowBox[{
       RowBox[{"y3", "[", "0", "]"}], "\[Equal]", "1"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"y3", "'"}], "[", "0", "]"}], "\[Equal]", "0"}]}], "}"}], ",", 
    RowBox[{"y3", "[", "t", "]"}], ",", "t"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.816006227638035*^9, 3.81600628580435*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"y3", "[", "t", "]"}], "\[Rule]", 
    RowBox[{
     FractionBox["1", "10"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"5", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             FractionBox["3", "2"]}], "-", 
            FractionBox[
             SqrtBox["5"], "2"]}], ")"}], " ", "t"}]]}], "-", 
       RowBox[{"3", " ", 
        SqrtBox["5"], " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             FractionBox["3", "2"]}], "-", 
            FractionBox[
             SqrtBox["5"], "2"]}], ")"}], " ", "t"}]]}], "+", 
       RowBox[{"5", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             FractionBox["3", "2"]}], "+", 
            FractionBox[
             SqrtBox["5"], "2"]}], ")"}], " ", "t"}]]}], "+", 
       RowBox[{"3", " ", 
        SqrtBox["5"], " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             FractionBox["3", "2"]}], "+", 
            FractionBox[
             SqrtBox["5"], "2"]}], ")"}], " ", "t"}]]}]}], ")"}]}]}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.816006289443493*^9, 3.816079578138069*^9, 
  3.8160796468165274`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"yp1", "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", "1", ",", "2"}], "]"}], "]"}], ",", 
     RowBox[{"yp2", "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", "1", ",", "2"}], "]"}], "]"}], ",", 
     RowBox[{"yp3", "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", "1", ",", "2"}], "]"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "20"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.5"}], ",", "1"}], "}"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"t", ",", "y"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.816006328284567*^9, 3.8160064431041703`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
IMMPSZWSJ1FB6H+FftlG
       "]]},
     Annotation[#, "Charting`Private`Tag$10746#1"]& ], 
    TagBox[
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
VL8iubm7SwK1fZZzPzUc0f8Aa7vlQA==
       "]]},
     Annotation[#, "Charting`Private`Tag$10746#2"]& ], 
    TagBox[
     {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwViQk41Pkfxx3R5lokm8QMydSE8Gu12fh8myGFlCutFCYMJSKzWgnNn6SQ
sDU5csZqc4ZdcmY2uWvQkFEKsY75kRHjXP/387ye1/N63ho0fztPMREREf8N
/u/0MJqkgUeqqeLq+sZwYHcTrZ2Iv4H+zx6v+zZ6/VXd/4jEGCAdkVHx2Gi5
xMoSqb5EWE8pdslZwyG9IY4gQXwEEvGaiw9XcdDBPeLX6RmQouNnSV3BYVDu
8doKNxvebB5/lreEg1beFqOl5SfgFHH8atMiDr4mjMsLhAKw/vvVZMo3HJ73
DOUKqM/AjbTbVU+Aw9Ila94svRgWOW/lw2dxyBTlxSyYl8KdfQum8XwczDru
7/7GLQNuQqLmuUkcxlkWjQKfcjgTFoNPjeEQ67HqMrdcAci9rsd0BIfuZe/k
GUIVHCRx7+jycPi1WV0fL62GqChSVjsXhx1JPW3T1Bp4c6DS2bAbBxoZiU/S
66GvROz70y04iC2HdAlCG6BMTZeszMahZ8hRTWDeCN/LJu/NqsPh2jPpqq/c
lxCu1ziq+hwHy8Qvkl8zm2D3JWqmbCEOO681Osz6sEFmJM24Mw+HBmrwDL78
D8RSiIP1j3DYPPCZNE1oAV6BRFbYDRz6GmoZU+MtsPlQjanorzg8zWM1TZa2
Qr6jh+AXPxxsAm1cJ6jtQORSVhPO4/BgS/WDMXoXpMXfVdUxwUEx7bXYLJcD
JWthVxvm+LAsV1lw5XA31Hw6+ZfoBB9GbuacmsnshgknpRmtIT5U0sMe4z49
MHJRqWtrOx+csQPG/OVeKK+NS8rN5kNWa0bAJKEfbqe5eClZ8UHAqiB/jO0H
ASOd2GzKh6P0tmGOsB9qnwYedTfkw5T4gmN193tQO+hja6PCh59MbIxjonnw
XZK/7s4v0/CmeEWMhH+E32WXgjaFTkN4q46lgeswvBeRPBiUNgVFxTEDvnoT
UM3Z49bKngA6vH00FTgHW6KVGjh2Y+A3une4vEgI2d4MwmmjEZDSiCR9/EkE
Pb9l3Dhs8gni5dvIWW7iSDP3qjW5ZBBoAw714u2SKO5z4srooX4I+CeS5k+S
QvfavlBOhvVC6RUZ++3HZdFBV9feQCYHsq5fmtB3kkfJ409jK0O6gJmxYiuY
UkBORYW0D3JtINI9hGpCtiJhy4n0Svtm0A7yuuZA3obkjK+fqx5ogpH5h6el
a5UR/QgjMl+5ESxHL95IDNiO+oycjrCkasFmJGGfuvoOpFhPEJo3/A0TTbSI
14WqyKxRN7rMrgL0FN6pUV3VEG65al+1qwykYN6dN6eOEmwkwdewGCymnRc0
HYkoWNyWm3jjKfS99BB11tFAhHyJGwX38qDiNvs8cV4DVZzbIXvYNwe8JBhD
nZ2a6MKB3JoJZiZcCLxeIZOyC7GTO9VC3NJgP31fp7W7Fsr71GMhz2BBl6KO
NOPQbiSGZXLS3iTDiyJmqo64NnIQiyRoj9+H66LkU+2D2ihWgTUb7RsPUryQ
Y37lJGS29P7FrqkYGM3TSM4I3YOMMGlquP0tSN6jsqnKcS/yv3OMP7TChIQU
r2Z3IhnN+SwIOHYR4Jx8rlNmjIx+X8uKOK8dCotmT4QZdfvQdo7R2/aFYBge
pVx7Ga2D3JLv/jaQGQTZJgaqHe66SGl2plHxdgAURjEU6Lp6iPbzZafDBD+I
drxgJT6vh4BdTHUQ+MCPvKyC6I79KFjll2mLbV7A2pta2GGlj8o4LjPaazQI
b4hjWVXpo82PWUw7DTc4oer4pFXLAE0z2W6dIWfhiF/zWYUYA0S8qc02LnCC
jJ00rfZ5A+R5JdJGQ90BtJryH9icNUQnweGbtaUtJOi+JHPqDBFLQazqh64T
4DW36W0LGUPk/Uf7ilyPA630KzHmHoYWreOw7b3m4Mu0X7G8j6FakfU8xitz
YNiXc2WSMCQNH//l/WUOt+cZ8QkPMJTUmtX0OsUcig4Jlx+mY4jtpim/zd0c
hI3r7/L+xJD3d0u0ENwMEjgycexmDFFSwyOstppBSs5l71stGBrN6Ah+J2EG
OUGd1GNtGKKX+AZdXKRCpXLCUlsnhiKEAZ6Fg1TgOW/17u7FUGyZRdjjP6hA
Glahfh7GUM+jF457EBX0y0PUc0cxpC9p1oswKhhHDQg9xzA098Fk2V2bCtak
9JJ/JzDUrHhmV50MFQIvEdVnZzd+i3rKYD8FQg/fFJbNYegs85SDcQcFomQ/
9wTNY0hXw+VDRgMFWMU5dxcXMZQwt988Mp8C2RGb6NVLGLrs8oeyeCoF/rT1
pISuYEjt3vLxO/EUKNd8pWa6hiHznXf7VZgUqJvTFq6vY6jwTE19KYMC/wH4
Ll+a
       "]]},
     Annotation[#, "Charting`Private`Tag$10746#3"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["t", TraditionalForm], 
    FormBox["y", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 19.999999591836733`}, {-0.5, 1}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.816006444722999*^9, {3.816079580727833*^9, 3.8160795899253025`*^9}, 
   3.816079652425125*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["The Three Cases For An Euler-Cauchy Equation", "Section",
 CellChangeTimes->{{3.816006486001443*^9, 3.816006554082709*^9}}],

Cell[BoxData[""], "Input"],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"Solve", " ", 
     RowBox[{"x", "^", "2"}], " ", 
     RowBox[{"y", "''"}]}], " ", "+", " ", 
    RowBox[{"axy", "'"}], " ", "+", " ", "y"}], " ", "=", "0"}], " ", 
  "*)"}]], "Input",
 CellChangeTimes->{{3.8160065742185187`*^9, 3.8160066456458483`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ode6", " ", "=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"x", "^", "2"}], "  ", 
     RowBox[{
      RowBox[{"y1", "''"}], "[", "x", "]"}]}], " ", "+", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"3", "/", "2"}], ")"}], " ", "x", "  ", 
     RowBox[{
      RowBox[{"y1", "'"}], "[", "x", "]"}]}], "+", 
    RowBox[{"y1", "[", "x", "]"}]}], "\[Equal]", "0"}]}]], "Input",
 CellChangeTimes->{{3.8160066849337654`*^9, 3.8160066969177904`*^9}, {
  3.816006739193333*^9, 3.816006806058012*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"y1", "[", "x", "]"}], "+", 
   RowBox[{
    FractionBox["3", "2"], " ", "x", " ", 
    RowBox[{
     SuperscriptBox["y1", "\[Prime]",
      MultilineFunction->None], "[", "x", "]"}]}], "+", 
   RowBox[{
    SuperscriptBox["x", "2"], " ", 
    RowBox[{
     SuperscriptBox["y1", "\[Prime]\[Prime]",
      MultilineFunction->None], "[", "x", "]"}]}]}], "\[Equal]", 
  "0"}]], "Output",
 CellChangeTimes->{3.816006812737381*^9, 3.816079463549958*^9, 
  3.8160796579457006`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ode7", " ", "=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"x", "^", "2"}], " ", 
     RowBox[{
      RowBox[{"y2", "''"}], "[", "x", "]"}]}], "+", 
    RowBox[{"3", "x", " ", 
     RowBox[{
      RowBox[{"y2", "'"}], "[", "x", "]"}]}], " ", "+", 
    RowBox[{"y2", "[", "x", "]"}]}], "\[Equal]", "0"}]}]], "Input",
 CellChangeTimes->{{3.816006844153985*^9, 3.8160068796745987`*^9}, {
  3.8160069365513544`*^9, 3.816006958373765*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"y2", "[", "x", "]"}], "+", 
   RowBox[{"3", " ", "x", " ", 
    RowBox[{
     SuperscriptBox["y2", "\[Prime]",
      MultilineFunction->None], "[", "x", "]"}]}], "+", 
   RowBox[{
    SuperscriptBox["x", "2"], " ", 
    RowBox[{
     SuperscriptBox["y2", "\[Prime]\[Prime]",
      MultilineFunction->None], "[", "x", "]"}]}]}], "\[Equal]", 
  "0"}]], "Output",
 CellChangeTimes->{3.8160069674770403`*^9, 3.8160794702622643`*^9, 
  3.816079660869664*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ode8", " ", "=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"x", "^", "2"}], " ", 
     RowBox[{
      RowBox[{"y3", "''"}], "[", "x", "]"}]}], " ", "+", 
    RowBox[{"4", "x", " ", 
     RowBox[{
      RowBox[{"y3", "'"}], "[", "x", "]"}]}], " ", "+", 
    RowBox[{"y3", "[", "x", "]"}]}], "\[Equal]", "0"}]}]], "Input",
 CellChangeTimes->{{3.8160069825009604`*^9, 3.8160070358904133`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"y3", "[", "x", "]"}], "+", 
   RowBox[{"4", " ", "x", " ", 
    RowBox[{
     SuperscriptBox["y3", "\[Prime]",
      MultilineFunction->None], "[", "x", "]"}]}], "+", 
   RowBox[{
    SuperscriptBox["x", "2"], " ", 
    RowBox[{
     SuperscriptBox["y3", "\[Prime]\[Prime]",
      MultilineFunction->None], "[", "x", "]"}]}]}], "\[Equal]", 
  "0"}]], "Output",
 CellChangeTimes->{3.816007038915851*^9, 3.816079663935336*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"yp4", " ", "=", 
  RowBox[{"DSolve", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"ode6", ",", 
      RowBox[{
       RowBox[{"y1", "[", "1", "]"}], "\[Equal]", "1"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"y1", "'"}], "[", "1", "]"}], "\[Equal]", "0"}]}], "}"}], ",", 
    RowBox[{"y1", "[", "x", "]"}], ",", "x"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.816007058328543*^9, 3.8160071352293763`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"y1", "[", "x", "]"}], "\[Rule]", 
    FractionBox[
     RowBox[{
      RowBox[{"15", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{
         FractionBox["1", "4"], " ", 
         SqrtBox["15"], " ", 
         RowBox[{"Log", "[", "x", "]"}]}], "]"}]}], "+", 
      RowBox[{
       SqrtBox["15"], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{
         FractionBox["1", "4"], " ", 
         SqrtBox["15"], " ", 
         RowBox[{"Log", "[", "x", "]"}]}], "]"}]}]}], 
     RowBox[{"15", " ", 
      SuperscriptBox["x", 
       RowBox[{"1", "/", "4"}]]}]]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.8160071376088624`*^9, 3.8160796665314016`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"yp5", " ", "=", 
  RowBox[{"DSolve", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"ode7", ",", 
      RowBox[{
       RowBox[{"y2", "[", "1", "]"}], "\[Equal]", "1"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"y2", "'"}], "[", "1", "]"}], "\[Equal]", "0"}]}], "}"}], ",", 
    RowBox[{"y2", "[", "x", "]"}], ",", "x"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.81600715038943*^9, 3.81600723904828*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"y2", "[", "x", "]"}], "\[Rule]", 
    FractionBox[
     RowBox[{"1", "+", 
      RowBox[{"Log", "[", "x", "]"}]}], "x"]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.8160072415785522`*^9, 3.816079671708288*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"yp6", "=", 
  RowBox[{"DSolve", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"ode8", ",", 
      RowBox[{
       RowBox[{"y3", "[", "1", "]"}], "\[Equal]", "1"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"y3", "'"}], "[", "1", "]"}], "\[Equal]", "0"}]}], "}"}], ",", 
    RowBox[{"y3", "[", "x", "]"}], ",", "x"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8160072659927473`*^9, 3.8160072840041337`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"y3", "[", "x", "]"}], "\[Rule]", 
    RowBox[{
     FractionBox["1", "10"], " ", 
     SuperscriptBox["x", 
      RowBox[{
       RowBox[{"-", 
        FractionBox["3", "2"]}], "-", 
       FractionBox[
        SqrtBox["5"], "2"]}]], " ", 
     RowBox[{"(", 
      RowBox[{"5", "-", 
       RowBox[{"3", " ", 
        SqrtBox["5"]}], "+", 
       RowBox[{"5", " ", 
        SuperscriptBox["x", 
         SqrtBox["5"]]}], "+", 
       RowBox[{"3", " ", 
        SqrtBox["5"], " ", 
        SuperscriptBox["x", 
         SqrtBox["5"]]}]}], ")"}]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.8160072866640215`*^9, 3.81607967407274*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"yp4", "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", "1", ",", "2"}], "]"}], "]"}], ",", 
     RowBox[{"yp5", "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", "1", ",", "2"}], "]"}], "]"}], ",", 
     RowBox[{"yp6", "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", "1", ",", "2"}], "]"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "6"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1"}], ",", "1"}], "}"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"x", ",", "y"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.816079814358369*^9, 3.8160798606168623`*^9}, {
  3.816079912880129*^9, 3.8160800235347733`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]], 
      LineBox[{{0.007428959348629589, 1.}, {0.009201047820870435, 
       0.2659977092727354}, {0.011041232895248604`, -0.3075471433742396}, {
       0.012881417969626774`, -0.746367031058627}, {
       0.01425316150024676, -1.}}], 
      LineBox[{{0.0016574473013692907`, -1.}, {0.0017186541746664673`, 1.}}]},
     Annotation[#, "Charting`Private`Tag$12231#1"]& ], 
    TagBox[
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
6xRXaT7x2fjgZev1HXg3GSmlEzufCI3VHWqi/vu/vzLmxigoEUG2fkm7n7aj
fNnRz9EJSoT5dm6AuXc7LudbP+iYtYDYt6Pf+d7adjhotDrZxywgmJHm/yix
2zD+dt2i1TLKRK6yc1bRiTackeJ8vXlOmWjXLv/QJNsGZc0triskaITvNCld
32QWTvnZDM4KpREqCvrCeH0WFm92r9Q6TSPO7w3ZyNBjoXgiMHXnWRqR9Lb3
pcoGFmbFxJiEXaARo2mqhx/psnDvWdkNzlUaMS830eadFguf+/Q2VabQCLut
A0PkQhaUjswLjvhAIw6/mxH+7wQT73SWWDz4SCO0fbgNdeNMOIl11IqKacTP
F4muar+ZeHLB9PNgGY2YLyun8XaYiW33zyq7f6MRUyN2O/pIJtyYvLc7WTSi
6hv3pw21j5NJH4tyaqcRrnEymentTGT7yjiHsWnEl4BtTwdZTAyPa8jk9dAI
c7si68RfTESpHrZVJ2nEnKpx1DcwsY7tudqwn0aEnn9UuryeiYask1OHBmiE
js7sc0G11D5xy/XM+BEagfNDScrfmSiVSDudPUYjootdhjy/MuFVmf135TiN
EGm6Rb2rYmJ2fOHyrgka8WNSaC33hYmXtpUjU1M0wuHRH1vHCib+D3sruk0=

       "]]},
     Annotation[#, "Charting`Private`Tag$12231#2"]& ], 
    TagBox[
     {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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

       "]]},
     Annotation[#, "Charting`Private`Tag$12231#3"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["x", TraditionalForm], 
    FormBox["y", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 5.99999987755102}, {-1, 1}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.816080024940071*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Wronskian::", "Section",
 CellChangeTimes->{{3.8160800453548613`*^9, 3.81608006237776*^9}}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"y", "''"}], " ", "+", 
    RowBox[{"p1", 
     RowBox[{"(", "x", ")"}], 
     RowBox[{"y", "'"}]}], "+", 
    RowBox[{"p0", 
     RowBox[{"(", "x", ")"}], "y"}]}], " ", "=", "0"}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.81608007480816*^9, 3.8160801132478585`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"y7", " ", "=", 
   RowBox[{"Cos", "[", 
    RowBox[{"k", " ", "x"}], "]"}]}], ";", " ", 
  RowBox[{"y8", "=", 
   RowBox[{"Sin", "[", 
    RowBox[{"k", " ", "x"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8160801278758345`*^9, 3.816080160200446*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"W", " ", "=", 
  RowBox[{
   RowBox[{"y7", " ", 
    RowBox[{"D", "[", 
     RowBox[{"y8", ",", "x"}], "]"}]}], " ", "-", " ", 
   RowBox[{"y8", " ", 
    RowBox[{"D", "[", 
     RowBox[{"y7", ",", "x"}], "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.816080180253937*^9, 3.816080229245308*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"k", " ", 
   SuperscriptBox[
    RowBox[{"Cos", "[", 
     RowBox[{"k", " ", "x"}], "]"}], "2"]}], "+", 
  RowBox[{"k", " ", 
   SuperscriptBox[
    RowBox[{"Sin", "[", 
     RowBox[{"k", " ", "x"}], "]"}], "2"]}]}]], "Output",
 CellChangeTimes->{3.8160802328144355`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.816080241036863*^9, 3.816080250112049*^9}}],

Cell[BoxData["k"], "Output",
 CellChangeTimes->{3.8160802506582303`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"B", " ", "=", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"y7", ",", "y8"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{"y7", ",", "x"}], "]"}], ",", 
      RowBox[{"D", "[", 
       RowBox[{"y8", ",", "x"}], "]"}]}], "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.816080436659132*^9, 3.8160805028090944`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Cos", "[", 
      RowBox[{"k", " ", "x"}], "]"}], ",", 
     RowBox[{"Sin", "[", 
      RowBox[{"k", " ", "x"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "k"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"k", " ", "x"}], "]"}]}], ",", 
     RowBox[{"k", " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"k", " ", "x"}], "]"}]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8160805049298286`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"%", "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.816080513525672*^9, 3.8160805196237087`*^9}, {
  3.816080624457071*^9, 3.81608062564848*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"Cos", "[", 
       RowBox[{"k", " ", "x"}], "]"}], 
      RowBox[{"Sin", "[", 
       RowBox[{"k", " ", "x"}], "]"}]},
     {
      RowBox[{
       RowBox[{"-", "k"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"k", " ", "x"}], "]"}]}], 
      RowBox[{"k", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"k", " ", "x"}], "]"}]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.8160805363931046`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"y", " ", "=", " ", 
  RowBox[{"Det", "[", "B", "]"}]}]], "Input",
 CellChangeTimes->{{3.816080628264702*^9, 3.8160806485451956`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"k", " ", 
   SuperscriptBox[
    RowBox[{"Cos", "[", 
     RowBox[{"k", " ", "x"}], "]"}], "2"]}], "+", 
  RowBox[{"k", " ", 
   SuperscriptBox[
    RowBox[{"Sin", "[", 
     RowBox[{"k", " ", "x"}], "]"}], "2"]}]}]], "Output",
 CellChangeTimes->{3.8160806536618013`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.816080663814574*^9, 3.816080671942458*^9}}],

Cell[BoxData["k"], "Output",
 CellChangeTimes->{3.8160806723951635`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"y9", "=", 
   RowBox[{"Exp", "[", 
    RowBox[{"-", "x"}], "]"}]}], ";", 
  RowBox[{"y10", " ", "=", 
   RowBox[{"Exp", "[", "x", "]"}]}], ";", " ", 
  RowBox[{"y11", "=", 
   RowBox[{"Exp", "[", 
    RowBox[{"2", " ", "x"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.816080748626364*^9, 3.8160807928225174`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"y12", " ", "=", 
  RowBox[{"{", 
   RowBox[{"y9", ",", "y10", ",", "y11"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.816080816240862*^9, 3.816080834063439*^9}, {
  3.816080906584093*^9, 3.816080910550929*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", "x"}]], ",", 
   SuperscriptBox["\[ExponentialE]", "x"], ",", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"2", " ", "x"}]]}], "}"}]], "Output",
 CellChangeTimes->{3.8160809116284227`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"C1", " ", "=", 
  RowBox[{"{", 
   RowBox[{"y12", ",", 
    RowBox[{"D", "[", 
     RowBox[{"y12", ",", "x"}], "]"}], ",", 
    RowBox[{"D", "[", 
     RowBox[{"y12", ",", "x", ",", "x"}], "]"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.8160809298461623`*^9, 3.8160809770689077`*^9}, {
  3.8160810471008244`*^9, 3.8160810540626173`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", "x"}]], ",", 
     SuperscriptBox["\[ExponentialE]", "x"], ",", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"2", " ", "x"}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", "x"}]]}], ",", 
     SuperscriptBox["\[ExponentialE]", "x"], ",", 
     RowBox[{"2", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"2", " ", "x"}]]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", "x"}]], ",", 
     SuperscriptBox["\[ExponentialE]", "x"], ",", 
     RowBox[{"4", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"2", " ", "x"}]]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8160809791033845`*^9, 3.8160810562728863`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"%", "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.8160810646031027`*^9, 3.8160810708093185`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", "x"}]], 
      SuperscriptBox["\[ExponentialE]", "x"], 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"2", " ", "x"}]]},
     {
      RowBox[{"-", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"-", "x"}]]}], 
      SuperscriptBox["\[ExponentialE]", "x"], 
      RowBox[{"2", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"2", " ", "x"}]]}]},
     {
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", "x"}]], 
      SuperscriptBox["\[ExponentialE]", "x"], 
      RowBox[{"4", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"2", " ", "x"}]]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.8160810717479706`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Det", "[", "C1", "]"}]], "Input",
 CellChangeTimes->{{3.816081080321234*^9, 3.816081092418517*^9}}],

Cell[BoxData[
 RowBox[{"6", " ", 
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{"2", " ", "x"}]]}]], "Output",
 CellChangeTimes->{3.8160810928683577`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Non-Homogenous Linear ODEs::\[LineSeparator]", "Section",
 CellChangeTimes->{{3.81608124271218*^9, 3.81608127084752*^9}}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"y", "''"}], " ", "+", 
     RowBox[{"2", 
      RowBox[{"y", "'"}]}], "+", 
     RowBox[{"101", "y"}]}], " ", "=", 
    RowBox[{"10.4", 
     RowBox[{"e", "^", "x"}]}]}], " ", ",", 
   RowBox[{
    RowBox[{"y", 
     RowBox[{"(", "0", ")"}]}], "=", "1.1"}], ",", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"y", "'"}], 
     RowBox[{"(", "0", ")"}]}], "=", 
    RowBox[{"-", "0.9"}]}]}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.816081282894811*^9, 3.816081324541966*^9}, {
  3.8160813598437815`*^9, 3.8160813879704256`*^9}}],

Cell[BoxData[
 RowBox[{"Clear", "[", "y", "]"}]], "Input",
 CellChangeTimes->{{3.816081413806823*^9, 3.8160814192637033`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ode9", " ", "=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"y", "''"}], "[", "x", "]"}], "+", 
    RowBox[{"2", 
     RowBox[{
      RowBox[{"y", "'"}], "[", "x", "]"}]}], "+", 
    RowBox[{"101", 
     RowBox[{"y", "[", "x", "]"}]}]}], " ", "\[Equal]", " ", 
   RowBox[{"10.4", " ", 
    RowBox[{"Exp", "[", "x", "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.8160814287126493`*^9, 3.816081489589793*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"101", " ", 
    RowBox[{"y", "[", "x", "]"}]}], "+", 
   RowBox[{"2", " ", 
    RowBox[{
     SuperscriptBox["y", "\[Prime]",
      MultilineFunction->None], "[", "x", "]"}]}], "+", 
   RowBox[{
    SuperscriptBox["y", "\[Prime]\[Prime]",
     MultilineFunction->None], "[", "x", "]"}]}], "\[Equal]", 
  RowBox[{"10.4`", " ", 
   SuperscriptBox["\[ExponentialE]", "x"]}]}]], "Output",
 CellChangeTimes->{3.816081492598995*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"yp12", " ", "=", " ", 
  RowBox[{"DSolve", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"ode9", ",", 
      RowBox[{
       RowBox[{"y", "[", "0", "]"}], " ", "\[Equal]", " ", "1.1"}], " ", ",", 
      RowBox[{
       RowBox[{
        RowBox[{"y", "'"}], "[", "0", "]"}], " ", "\[Equal]", " ", 
       RowBox[{"-", "0.9"}]}]}], "}"}], ",", 
    RowBox[{"y", "[", "x", "]"}], ",", "x"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8160815015399146`*^9, 3.816081582203739*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"y", "[", "x", "]"}], "\[Rule]", 
    RowBox[{"0.09999999999999999`", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "1.`"}], " ", "x"}]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"10.`", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"10.`", " ", "x"}], "]"}]}], "+", 
       RowBox[{"1.`", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"2.`", " ", "x"}]], " ", 
        SuperscriptBox[
         RowBox[{"Cos", "[", 
          RowBox[{"10.`", " ", "x"}], "]"}], "2"]}], "+", 
       RowBox[{"1.`", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"2.`", " ", "x"}]], " ", 
        SuperscriptBox[
         RowBox[{"Sin", "[", 
          RowBox[{"10.`", " ", "x"}], "]"}], "2"]}]}], ")"}]}]}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.816081584041875*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"yp12", "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", "1", ",", "2"}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "3.5"}], "}"}], ",", 
   RowBox[{"Ticks", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", "Automatic"}], "}"}]}], 
   ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"x", ",", "y"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.816081606282101*^9, 3.8160816768950195`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
8xwqVmCG98KeO9s6oRX9Uri7egU470Yfr9nbCfIvZb6N/loB/guiEddPdEKT
Lb7S7d8KiHopEsghnSD5u+qfHwG7f1vSe1N6J5TlAD2GaxXSrnemic92AfP6
MZ1y21UYM9a2/iPXC0q/TC8csF8FmW7xwDWjXrDb5fgww2kV/nmqXbl6rReK
G4O6I9xWIcZ4D2PySy/4Kn33M729CkSunK17hn1AG1X7NJS+Cgvs8vHcPv0w
aKO8C0dchcAO+dDxiUGo1hbZPO67Bup689Sv/GNgaXTt75tba9Bu2SVlJjsG
w9bVKet31qD65ZftpCNjsOp5Q704fA1iyEl3uV3HQO3136tySWvA7zj5UqFo
DDJZIjvwpWtgfU9XBzlDgIi/jJzK9TVYZMZ9xmH7vXCvSYAEfh0qJEL47n4g
whtSpmEA+zo8TRDKHS8jQsWG5fCBbevQZfRgT8wYERj/5Yu82rMOb/ZQ3NgP
kuBy0pXQuwbrgObvun+zlgQnnLpttB6uwycm/72GoXHQSfrVsvBkHX7GdHlx
z43Dwb/Fp/OfrUNJnreGCgsZxLQTQTZ9HQLiM2b5FMlAEbXcx1ewDm5G1Htm
XmSIaWpgGe1Yhx3frBxvLpAhlPVHSFrvOsRcqClKZZkAP50cpu3QOuxMiZhI
F56A8zkPZhrI67CmQhlWU5uA/ZGG/V9X1iFKyXH93Y0J+Kf780v0ng3YmOiK
dSFOQJ1f3n4D+Q1IPatipzQ/Ad8/pn9YV96AsJIC//rNCXgjHvTKV20DvE2D
eeJ3UsCPfuTR+RMb4GgVp6FnRgE3FUU2MeMN2J4hcqrOngIOF7bfazXfAKsI
xTAZNwoY/qP7nzi3AV8aro+7hlJA9FOh63+eG2Cwoh00l0cBLkLGAPXGBpxB
JbP2f6fA+o44uyz/Dfjj+FYeaikw/uC66c7QDVhRDhoh91Kg5KKKFuuzDZAj
Dz8GFirYS2QJ9JRsAEnv2gl+MyooN6nlI+Ub8OPHbk/xM1RghlQb56IbYEk3
HVt3pELK2HBUyJ8N4MkvbLP3okJ3zs51uf4NuNq2I9LxERXeO+SkPh3egOft
ahP68VS4xaepuUzYgCLhM0MsL6gg6mPr1zi5AaIcp3+IZ1HBWjOO4rOxAcXz
G5OxFVSQpe5+0I/fhNhbSenWNVSYT8uTO86xCYEo/upCPRXiNxucxQU2QWtz
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
A2+P8SBZ5R5LW1uYf7afFCUjHuR/2D/vOA==
       "]]},
     Annotation[#, "Charting`Private`Tag$17049#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["x", TraditionalForm], 
    FormBox["y", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 3.5}, {-0.5986194688709674, 3.2842558081324578`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{{{1, 
      FormBox["1", TraditionalForm]}, {2, 
      FormBox["2", TraditionalForm]}, {3, 
      FormBox["3", TraditionalForm]}}, Automatic}]], "Output",
 CellChangeTimes->{3.816081678034602*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Solution By Undetermined Coefficients::", "Section",
 CellChangeTimes->{{3.816081752581259*^9, 3.816081809453546*^9}, {
  3.8160818767276793`*^9, 3.8160818878090997`*^9}}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"y", "''"}], " ", "-", 
    RowBox[{"3", 
     RowBox[{"y", "'"}]}], "+", 
    RowBox[{"2", "y"}]}], " ", "=", 
   RowBox[{"e", "^", "x"}]}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.8160819290160856`*^9, 3.8160819709936075`*^9}}],

Cell[BoxData[
 RowBox[{"Clear", "[", "y", "]"}]], "Input",
 CellChangeTimes->{{3.8160820340713425`*^9, 3.816082039377679*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Ly", " ", "=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"y", "''"}], "[", "x", "]"}], "-", 
   RowBox[{"3", 
    RowBox[{
     RowBox[{"y", "'"}], "[", "x", "]"}]}], " ", "+", 
   RowBox[{"2", 
    RowBox[{"y", "[", "x", "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.816082052482688*^9, 3.8160820843327694`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"2", " ", 
   RowBox[{"y", "[", "x", "]"}]}], "-", 
  RowBox[{"3", " ", 
   RowBox[{
    SuperscriptBox["y", "\[Prime]",
     MultilineFunction->None], "[", "x", "]"}]}], "+", 
  RowBox[{
   SuperscriptBox["y", "\[Prime]\[Prime]",
    MultilineFunction->None], "[", "x", "]"}]}]], "Output",
 CellChangeTimes->{3.8160820878985004`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"r", " ", "=", 
  RowBox[{"Exp", "[", "x", "]"}]}]], "Input",
 CellChangeTimes->{{3.816082096971157*^9, 3.8160821048126097`*^9}}],

Cell[BoxData[
 SuperscriptBox["\[ExponentialE]", "x"]], "Output",
 CellChangeTimes->{3.8160821082274866`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"yh", " ", "=", 
  RowBox[{"DSolve", "[", 
   RowBox[{
    RowBox[{"Ly", " ", "\[Equal]", "0"}], ",", 
    RowBox[{"y", "[", "x", "]"}], ",", "x"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8160821147441397`*^9, 3.8160821428878574`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"y", "[", "x", "]"}], "\[Rule]", 
    RowBox[{
     RowBox[{
      SuperscriptBox["\[ExponentialE]", "x"], " ", 
      RowBox[{"C", "[", "1", "]"}]}], "+", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"2", " ", "x"}]], " ", 
      RowBox[{"C", "[", "2", "]"}]}]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.8160821462585063`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"yp13", " ", "=", 
  RowBox[{"C", " ", "x", " ", 
   RowBox[{"Exp", "[", "x", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.816082163209114*^9, 3.816082184223395*^9}}],

Cell[BoxData[
 RowBox[{"C", " ", 
  SuperscriptBox["\[ExponentialE]", "x"], " ", "x"}]], "Output",
 CellChangeTimes->{3.8160821874760485`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Ly", " ", "\[Equal]", " ", "r", " "}]], "Input",
 CellChangeTimes->{{3.8160822393307524`*^9, 3.8160822544190674`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"2", " ", 
    RowBox[{"y", "[", "x", "]"}]}], "-", 
   RowBox[{"3", " ", 
    RowBox[{
     SuperscriptBox["y", "\[Prime]",
      MultilineFunction->None], "[", "x", "]"}]}], "+", 
   RowBox[{
    SuperscriptBox["y", "\[Prime]\[Prime]",
     MultilineFunction->None], "[", "x", "]"}]}], "\[Equal]", 
  SuperscriptBox["\[ExponentialE]", "x"]}]], "Output",
 CellChangeTimes->{3.8160822559611793`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Ly", " ", "\[Equal]", "r"}], " ", "/.", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"y", "[", "x", "]"}], "\[Rule]", " ", "yp13"}], ",", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"y", "'"}], "[", "x", "]"}], " ", "\[Rule]", 
     RowBox[{"D", "[", 
      RowBox[{"yp13", ",", "x"}], "]"}]}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"y", "''"}], "[", "x", "]"}], "\[Rule]", " ", 
     RowBox[{"D", "[", 
      RowBox[{"yp13", ",", "x", ",", "x"}], "]"}]}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.81608226571801*^9, 3.8160823670673227`*^9}, {
  3.8160825489108353`*^9, 3.8160825529871597`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"2", " ", "C", " ", 
    SuperscriptBox["\[ExponentialE]", "x"]}], "+", 
   RowBox[{"3", " ", "C", " ", 
    SuperscriptBox["\[ExponentialE]", "x"], " ", "x"}], "-", 
   RowBox[{"3", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"C", " ", 
       SuperscriptBox["\[ExponentialE]", "x"]}], "+", 
      RowBox[{"C", " ", 
       SuperscriptBox["\[ExponentialE]", "x"], " ", "x"}]}], ")"}]}]}], 
  "\[Equal]", 
  SuperscriptBox["\[ExponentialE]", "x"]}]], "Output",
 CellChangeTimes->{3.816082556727566*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sol1", " ", "=", 
  RowBox[{"Simplify", "[", "%", "]"}]}]], "Input",
 CellChangeTimes->{{3.8160825837267375`*^9, 3.816082595786393*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{"1", "+", "C"}], ")"}], " ", 
   SuperscriptBox["\[ExponentialE]", "x"]}], "\[Equal]", "0"}]], "Output",
 CellChangeTimes->{3.816082596705696*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"C0", " ", "=", 
  RowBox[{"Solve", "[", 
   RowBox[{"sol1", ",", "C"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8160826127690115`*^9, 3.8160826656008224`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"C", "\[Rule]", 
    RowBox[{"-", "1"}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.816082667996671*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"yh", "[", 
  RowBox[{"[", 
   RowBox[{"1", ",", "1", ",", "2"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8160826775117283`*^9, 3.816082689047956*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["\[ExponentialE]", "x"], " ", 
   RowBox[{"C", "[", "1", "]"}]}], "+", 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"2", " ", "x"}]], " ", 
   RowBox[{"C", "[", "2", "]"}]}]}]], "Output",
 CellChangeTimes->{3.816082689825792*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"yp14", " ", "=", " ", 
  RowBox[{"yp13", "/.", " ", 
   RowBox[{"C", " ", "\[Rule]", " ", 
    RowBox[{"C0", " ", "[", 
     RowBox[{"[", 
      RowBox[{"1", ",", "1", ",", "2"}], "]"}], "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.8160827129943466`*^9, 3.8160827252018642`*^9}, {
  3.8160828241220655`*^9, 3.8160828451704855`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   SuperscriptBox["\[ExponentialE]", "x"]}], " ", "x"}]], "Output",
 CellChangeTimes->{3.8160828495446978`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ygon", " ", "=", 
  RowBox[{
   RowBox[{"yh", "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", "1", ",", "2"}], "]"}], "]"}], "+", " ", 
   "yp14"}]}]], "Input",
 CellChangeTimes->{{3.8160828690360203`*^9, 3.8160828983017263`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", 
    SuperscriptBox["\[ExponentialE]", "x"]}], " ", "x"}], "+", 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", "x"], " ", 
   RowBox[{"C", "[", "1", "]"}]}], "+", 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"2", " ", "x"}]], " ", 
   RowBox[{"C", "[", "2", "]"}]}]}]], "Output",
 CellChangeTimes->{3.816082901092804*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DSolve", "[", 
  RowBox[{
   RowBox[{"Ly", " ", "\[Equal]", " ", "r"}], ",", 
   RowBox[{"y", "[", "x", "]"}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.8160829211826763`*^9, 3.816082974499796*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"y", "[", "x", "]"}], "\[Rule]", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       SuperscriptBox["\[ExponentialE]", "x"]}], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", "x"}], ")"}]}], "+", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", "x"], " ", 
      RowBox[{"C", "[", "1", "]"}]}], "+", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"2", " ", "x"}]], " ", 
      RowBox[{"C", "[", "2", "]"}]}]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.8160829824784927`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Solution By Variation Of Parameters::", "Section",
 CellChangeTimes->{{3.8160829942799015`*^9, 3.8160830236213455`*^9}}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"y", "''"}], "+", "y"}], " ", "=", "Secx"}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.8160830298523073`*^9, 3.81608303989206*^9}, {
  3.816083079248539*^9, 3.816083090241915*^9}}],

Cell[BoxData[
 RowBox[{"Clear", "[", "y", "]"}]], "Input",
 CellChangeTimes->{{3.8160831981622057`*^9, 3.8160832055296307`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Ly1", " ", "=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"y", "''"}], "[", "x", "]"}], " ", "+", " ", 
   RowBox[{"y", "[", "x", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.816083238822755*^9, 3.8160832624073143`*^9}, 
   3.8160838375953436`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"y", "[", "x", "]"}], "+", 
  RowBox[{
   SuperscriptBox["y", "\[Prime]\[Prime]",
    MultilineFunction->None], "[", "x", "]"}]}]], "Output",
 CellChangeTimes->{3.816083267134651*^9, 3.8160838399532766`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"p", " ", "=", 
  RowBox[{"Sec", "[", "x", "]"}]}]], "Input",
 CellChangeTimes->{{3.8160832798678455`*^9, 3.8160832924265137`*^9}}],

Cell[BoxData[
 RowBox[{"Sec", "[", "x", "]"}]], "Output",
 CellChangeTimes->{3.81608329531983*^9, 3.8160838579442253`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"yh1", " ", "=", " ", 
  RowBox[{"DSolve", "[", 
   RowBox[{
    RowBox[{"Ly", " ", "\[Equal]", " ", "0"}], " ", ",", 
    RowBox[{"y", "[", "x", "]"}], ",", "x"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8160833160982857`*^9, 3.8160833575425262`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"y", "[", "x", "]"}], "\[Rule]", 
    RowBox[{
     RowBox[{
      RowBox[{"C", "[", "1", "]"}], " ", 
      RowBox[{"Cos", "[", "x", "]"}]}], "+", 
     RowBox[{
      RowBox[{"C", "[", "2", "]"}], " ", 
      RowBox[{"Sin", "[", "x", "]"}]}]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.8160833615967336`*^9, 3.816083860764795*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"y14", "  ", "=", 
   RowBox[{"Cos", "[", "x", "]"}]}], ";", " ", 
  RowBox[{"y15", " ", "=", 
   RowBox[{"Sin", "[", "x", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.816083377212411*^9, 3.816083412431513*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"W1", " ", "=", 
  RowBox[{
   RowBox[{"y14", " ", 
    RowBox[{"D", "[", 
     RowBox[{"y15", ",", "x"}], "]"}]}], "-", 
   RowBox[{"y15", " ", 
    RowBox[{"D", "[", 
     RowBox[{"y14", ",", "x"}], "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.816083421208563*^9, 3.816083486325812*^9}}],

Cell[BoxData[
 RowBox[{
  SuperscriptBox[
   RowBox[{"Cos", "[", "x", "]"}], "2"], "+", 
  SuperscriptBox[
   RowBox[{"Sin", "[", "x", "]"}], "2"]}]], "Output",
 CellChangeTimes->{3.816083489190713*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.816083496120987*^9, 3.8160835015304494`*^9}}],

Cell[BoxData[
 RowBox[{"Sin", "[", "x", "]"}]], "Output",
 CellChangeTimes->{3.816083503947654*^9, 3.816083866386284*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"yp15", " ", "=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"-", " ", "y14"}], " ", 
    RowBox[{"Integrate", "[", 
     RowBox[{
      RowBox[{"y15", "  ", 
       RowBox[{"p", "/", "W1"}]}], " ", ",", "x"}], "]"}]}], "+", " ", 
   RowBox[{"y15", " ", 
    RowBox[{"Integrate", "[", 
     RowBox[{
      RowBox[{"y14", "  ", 
       RowBox[{"p", "/", "W1"}]}], " ", ",", "x"}], "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.8160835308138947`*^9, 3.8160835386271067`*^9}, {
  3.8160835843672476`*^9, 3.8160836987031064`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Cos", "[", "x", "]"}], " ", 
   RowBox[{"Log", "[", 
    RowBox[{"Cos", "[", "x", "]"}], "]"}]}], "+", 
  RowBox[{"x", " ", 
   RowBox[{"Sin", "[", "x", "]"}]}]}]], "Output",
 CellChangeTimes->{3.8160837063585978`*^9, 3.8160838691100655`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ygen", " ", "=", 
  RowBox[{
   RowBox[{"yh1", "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", "1", ",", "2"}], "]"}], "]"}], "+", " ", 
   "yp15"}]}]], "Input",
 CellChangeTimes->{{3.816083723716663*^9, 3.8160837726644487`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"C", "[", "1", "]"}], " ", 
   RowBox[{"Cos", "[", "x", "]"}]}], "+", 
  RowBox[{
   RowBox[{"Cos", "[", "x", "]"}], " ", 
   RowBox[{"Log", "[", 
    RowBox[{"Cos", "[", "x", "]"}], "]"}]}], "+", 
  RowBox[{"x", " ", 
   RowBox[{"Sin", "[", "x", "]"}]}], "+", 
  RowBox[{
   RowBox[{"C", "[", "2", "]"}], " ", 
   RowBox[{"Sin", "[", "x", "]"}]}]}]], "Output",
 CellChangeTimes->{3.8160837761464176`*^9, 3.816083872069888*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DSolve", "[", 
  RowBox[{
   RowBox[{"Ly1", " ", "\[Equal]", " ", "p"}], " ", ",", 
   RowBox[{"y", "[", "x", "]"}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.8160837885606556`*^9, 3.816083801590685*^9}, {
  3.816083877327547*^9, 3.8160838829339757`*^9}, {3.8160839338954773`*^9, 
  3.816083944073957*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"y", "[", "x", "]"}], "\[Rule]", 
    RowBox[{
     RowBox[{
      RowBox[{"C", "[", "1", "]"}], " ", 
      RowBox[{"Cos", "[", "x", "]"}]}], "+", 
     RowBox[{
      RowBox[{"Cos", "[", "x", "]"}], " ", 
      RowBox[{"Log", "[", 
       RowBox[{"Cos", "[", "x", "]"}], "]"}]}], "+", 
     RowBox[{"x", " ", 
      RowBox[{"Sin", "[", "x", "]"}]}], "+", 
     RowBox[{
      RowBox[{"C", "[", "2", "]"}], " ", 
      RowBox[{"Sin", "[", "x", "]"}]}]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.816083947452464*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Forced Vibration ,Resonance , Beats::", "Section",
 CellChangeTimes->{{3.816083995959431*^9, 3.8160840576668615`*^9}}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"y", "''"}], " ", "+", "y"}], " ", "=", " ", "Cost"}], " ", 
  "*)"}]], "Input",
 CellChangeTimes->{{3.816084066049904*^9, 3.8160840836026998`*^9}}],

Cell[BoxData[
 RowBox[{"Clear", "[", 
  RowBox[{"y", ",", "y1", ",", "y2"}], "]"}]], "Input",
 CellChangeTimes->{{3.816084097743153*^9, 3.8160841104137735`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ode14", " ", "=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"y", "''"}], "[", "t", "]"}], "+", 
    RowBox[{"y", "[", "t", "]"}]}], " ", "\[Equal]", " ", 
   RowBox[{"Cos", "[", "t", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.816084121397184*^9, 3.816084149011327*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"y", "[", "t", "]"}], "+", 
   RowBox[{
    SuperscriptBox["y", "\[Prime]\[Prime]",
     MultilineFunction->None], "[", "t", "]"}]}], "\[Equal]", 
  RowBox[{"Cos", "[", "t", "]"}]}]], "Output",
 CellChangeTimes->{3.8160841597761216`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sol3", "  ", "=", " ", 
  RowBox[{"DSolve", "[", 
   RowBox[{"ode14", ",", 
    RowBox[{"y", "[", "t", "]"}], ",", "t"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8160843033951564`*^9, 3.8160843386612954`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"y", "[", "t", "]"}], "\[Rule]", 
    RowBox[{
     RowBox[{
      RowBox[{"C", "[", "1", "]"}], " ", 
      RowBox[{"Cos", "[", "t", "]"}]}], "+", 
     RowBox[{
      RowBox[{"C", "[", "2", "]"}], " ", 
      RowBox[{"Sin", "[", "t", "]"}]}], "+", 
     RowBox[{
      FractionBox["1", "4"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", " ", 
         SuperscriptBox[
          RowBox[{"Cos", "[", "t", "]"}], "3"]}], "+", 
        RowBox[{"2", " ", "t", " ", 
         RowBox[{"Sin", "[", "t", "]"}]}], "+", 
        RowBox[{
         RowBox[{"Sin", "[", "t", "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"2", " ", "t"}], "]"}]}]}], ")"}]}]}]}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.816084341722252*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sol4", "  ", "=", " ", 
  RowBox[{"Simplify", "[", "%", "]"}]}]], "Input",
 CellChangeTimes->{{3.816084372002224*^9, 3.816084396247466*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"y", "[", "t", "]"}], "\[Rule]", 
    RowBox[{
     FractionBox["1", "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Cos", "[", "t", "]"}], "+", 
       RowBox[{"2", " ", 
        RowBox[{"C", "[", "1", "]"}], " ", 
        RowBox[{"Cos", "[", "t", "]"}]}], "+", 
       RowBox[{"t", " ", 
        RowBox[{"Sin", "[", "t", "]"}]}], "+", 
       RowBox[{"2", " ", 
        RowBox[{"C", "[", "2", "]"}], " ", 
        RowBox[{"Sin", "[", "t", "]"}]}]}], ")"}]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.8160843967232666`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"y16", " ", "=", 
  RowBox[{"sol4", "[", 
   RowBox[{"[", 
    RowBox[{"1", ",", "1", ",", "2", ",", "2", ",", "3"}], "]"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.81608442613838*^9, 3.8160844529937744`*^9}}],

Cell[BoxData[
 RowBox[{"t", " ", 
  RowBox[{"Sin", "[", "t", "]"}]}]], "Output",
 CellChangeTimes->{3.816084454657713*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{"y1", ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "50"}], "}"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{"t", ",", "y16"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8160844573501053`*^9, 3.816084545535203*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["t", TraditionalForm], 
    FormBox[
     RowBox[{"t", " ", 
       RowBox[{"sin", "(", "t", ")"}]}], TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 50}, {0., 0.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8160845460406322`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ode5", " ", "=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"y2", "''"}], "[", "t", "]"}], " ", "+", 
    RowBox[{"y2", "[", "t", "]"}]}], "\[Equal]", 
   RowBox[{"0.19", " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"0.9", " ", "t"}], "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.8160845909694386`*^9, 3.8160846017430744`*^9}, {
  3.8160846496509104`*^9, 3.8160846820568714`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"y2", "[", "t", "]"}], "+", 
   RowBox[{
    SuperscriptBox["y2", "\[Prime]\[Prime]",
     MultilineFunction->None], "[", "t", "]"}]}], "\[Equal]", 
  RowBox[{"0.19`", " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"0.9`", " ", "t"}], "]"}]}]}]], "Output",
 CellChangeTimes->{3.81608468463176*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sol5", " ", "=", 
  RowBox[{"DSolve", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"ode5", ",", 
      RowBox[{
       RowBox[{"y2", "[", "0", "]"}], " ", "\[Equal]", " ", "0"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"y2", "'"}], "[", "0", "]"}], " ", "\[Equal]", "0"}]}], "}"}],
     ",", 
    RowBox[{"y2", "[", "t", "]"}], ",", "t"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8160846937193966`*^9, 3.816084746118475*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"y2", "[", "t", "]"}], "\[Rule]", 
    RowBox[{"0.9500000000000015`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "1.0526315789473684`"}], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"0.9999999999999999`", " ", "t"}], "]"}]}], "+", 
       RowBox[{"1.`", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"0.09999999999999987`", " ", "t"}], "]"}], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"0.9999999999999999`", " ", "t"}], "]"}]}], "+", 
       RowBox[{"0.05263157894736834`", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"0.9999999999999999`", " ", "t"}], "]"}], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"1.9`", " ", "t"}], "]"}]}], "+", 
       RowBox[{"1.`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"0.09999999999999987`", " ", "t"}], "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"0.9999999999999999`", " ", "t"}], "]"}]}], "+", 
       RowBox[{"0.05263157894736834`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"0.9999999999999999`", " ", "t"}], "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1.9`", " ", "t"}], "]"}]}]}], ")"}]}]}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.81608474738453*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Chop", "[", 
  RowBox[{"Simplify", "[", 
   RowBox[{"Chop", "[", "sol5", "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.816084782522724*^9, 3.81608488331244*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"y2", "[", "t", "]"}], "\[Rule]", 
    RowBox[{
     RowBox[{
      RowBox[{"Cos", "[", 
       RowBox[{"0.9999999999999999`", " ", "t"}], "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1.0000000000000016`"}], "+", 
        RowBox[{"0.9500000000000015`", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"0.09999999999999987`", " ", "t"}], "]"}]}], "+", 
        RowBox[{"0.05`", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"1.9`", " ", "t"}], "]"}]}]}], ")"}]}], "+", 
     RowBox[{
      RowBox[{"Sin", "[", 
       RowBox[{"0.9999999999999999`", " ", "t"}], "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"0.9500000000000015`", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"0.09999999999999987`", " ", "t"}], "]"}]}], "+", 
        RowBox[{"0.05`", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"1.9`", " ", "t"}], "]"}]}]}], ")"}]}]}]}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.8160848843469114`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"2", 
  RowBox[{"TrigReduce", "[", 
   RowBox[{
    RowBox[{"Sin", "[", 
     RowBox[{"0.95", " ", "t"}], "]"}], 
    RowBox[{"Sin", "[", 
     RowBox[{"0.05", " ", "t"}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.816084897440959*^9, 3.8160849436708565`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Cos", "[", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"0.8999999999999999`", "\[VeryThinSpace]", "+", 
      RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", "t"}], "]"}], "-", 
  RowBox[{"Cos", "[", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1.`", "\[VeryThinSpace]", "+", 
      RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", "t"}], 
   "]"}]}]], "Output",
 CellChangeTimes->{3.816084950140767*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"sol5", "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", "1", ",", "2"}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "200"}], "}"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"t", ",", "y2"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8160849600278397`*^9, 3.816085016176531*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwUV3c8198XlmxSWSkjKzt7r3vszcf4lhlJGSFJRpRIJZXKKEmigYaZVCo3
m4zsvfeMDz72+Pn99X6d13nuc889577PPQ+vyyXL8+RkZGSdtGRk///yPdp+
k8LdpFH6+hlXU0eI+lcakePe7jlosHH5qqanIioJyn4r7I5Rcn9/TIbTaRSn
MOpwIKYKvc7+Qeeg5IkqpS67Ubn/RXZrKd9/KwSiUNbdb7upLcg5jVNzky4C
PY3V1dh62IFsVG2zXjXdQzkHH5StXetBDt3c7E2+T1D1g2YDktsAEr9RvRiR
8BQtRDJMBH0YQnYGSaXVpsnoelmOyGrqCEo9y9nzXT8NPYWV7KWHE0g/lCMk
CTIRf9hz4uXIKfRcK8GEluETyv2lJrdwbQYJVVi5hO/LRTUqt77Pus2jj+S7
n9dFC9BHNeYb8jkLKOpFxriARSEi9ri+8v9ARJIiUwJh17+hG8dohhdTl5CE
rXXpn46fqPy77X6Z5GUUYzp9+dB2MaKz/Shw+RkJDTT1Nyff/42ePTNzm3+4
iqjfEsh0H5SifoXUKIl7a2h9nUX/SkgZEmgnvveOXEcWJnn9Zg7lyPOqdu2n
sA3EwhrT9E28AuWyJMzOXNtEA0EmUa+mK9DK5/EDYgFbyFlWt3pffCVSt1KS
9Ly8jbL8Pd8QBatQ5OI9wnuvHVSdN//fs7Qq9OdJz+VJt13EkSvGKEdejaIS
n9bESZPBP2eNFwL61UjcHdnJ5pCBnzPX7ohPNfqrODndLL4PKimqBg8EVSM/
6ichfh/2gcav0B7ns9WItUOZgUmYHPKItJm/RarRt/Th5Lx35GBwVYdLqbEK
2QfcP2nBvx9QMzflplUV2tGVK15I3Q+J+1vK3AoqURprn9ljbgrguNLXQEOs
QDpjtwckkymg5UABMYG2Ak0WSPj+PUoJL8vtz5C2y9D9yA6yS88oYTRZMUqt
oRRJWN98wshKBTKnMqpyr5WgZn4RvuxYKrhmb1BRtf83urrUlG96iBpIqy2n
zVt/Ivaya9pzD6mhdY1O08zxO/oRy9/6gJ4GzF2f7j5/+wWdcalzFb9HA9uR
EqWvPuWht/u471yMpAVuiaPx5SyvkX5TJRs9OR2cbbMX437xBE2nXsr4EEYH
cg77yU59tsfSUFI9dY0eZForjtWqv8OtBz1t763RQ+DJBCbDwRwcNMA0LRzA
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
       "]]},
     Annotation[#, "Charting`Private`Tag$32126#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["t", TraditionalForm], 
    FormBox["y2", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 200}, {-1.9996927227868926`, 1.9727917014602117`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.816085017992793*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["RLC -Circuit::", "Section",
 CellChangeTimes->{{3.8160850448632326`*^9, 3.8160850584410973`*^9}}],

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{"(*", "   ", 
   RowBox[{
    RowBox[{
     RowBox[{"Li", "'"}], " ", "+", "Ri", " ", "+", 
     RowBox[{
      RowBox[{"1", "/", "C"}], " ", 
      RowBox[{"\[Integral]", 
       RowBox[{"i", 
        RowBox[{"\[DifferentialD]", "t"}]}]}]}]}], " ", "=", " ", 
    RowBox[{"E0", " ", "Sin", " ", "wt"}]}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.8160851052348843`*^9, 3.8160851283375235`*^9}, {
  3.8160851653948917`*^9, 3.8160852410361853`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"M1", " ", "=", 
  RowBox[{
   RowBox[{"0.1", " ", 
    RowBox[{
     RowBox[{"i", "''"}], "[", "t", "]"}]}], "+", 
   RowBox[{"100", 
    RowBox[{
     RowBox[{"i", "'"}], "[", "t", "]"}]}], "+", 
   RowBox[{"1000", 
    RowBox[{"i", "[", "t", "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.816085458366721*^9, 3.8160854924820023`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"1000", " ", 
   RowBox[{"i", "[", "t", "]"}]}], "+", 
  RowBox[{"100", " ", 
   RowBox[{
    SuperscriptBox["i", "\[Prime]",
     MultilineFunction->None], "[", "t", "]"}]}], "+", 
  RowBox[{"0.1`", " ", 
   RowBox[{
    SuperscriptBox["i", "\[Prime]\[Prime]",
     MultilineFunction->None], "[", "t", "]"}]}]}]], "Output",
 CellChangeTimes->{3.816085506871132*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"q", " ", "=", 
  RowBox[{"377", " ", "155", " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"377", " ", "t"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.816085527414935*^9, 3.8160855737624807`*^9}}],

Cell[BoxData[
 RowBox[{"58435", " ", 
  RowBox[{"Cos", "[", 
   RowBox[{"377", " ", "t"}], "]"}]}]], "Output",
 CellChangeTimes->{{3.8160855613967185`*^9, 3.816085576474918*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ihor", " ", "=", " ", 
  RowBox[{"DSolve", "[", 
   RowBox[{
    RowBox[{"M1", " ", "\[Equal]", " ", "0"}], ",", 
    RowBox[{"i", "[", "t", "]"}], ",", "t"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8160855942626133`*^9, 3.816085629818657*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"i", "[", "t", "]"}], "\[Rule]", 
    RowBox[{
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "989.8979485566356`"}], " ", "t"}]], " ", 
      RowBox[{"C", "[", "1", "]"}]}], "+", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "10.102051443364381`"}], " ", "t"}]], " ", 
      RowBox[{"C", "[", "2", "]"}]}]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.816085633473631*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ipartic", " ", "=", " ", 
  RowBox[{"DSolve", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"M1", " ", "\[Equal]", " ", "q"}], " ", ",", 
      RowBox[{
       RowBox[{"i", "[", "0", "]"}], " ", "\[Equal]", " ", "0"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"i", "'"}], "[", "0", "]"}], "\[Equal]", "0"}]}], "}"}], ",", 
    RowBox[{"i", "[", "t", "]"}], ",", "t"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8160856443694844`*^9, 3.816085726078084*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"i", "[", "t", "]"}], "\[Rule]", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1.2629255342524394`*^-19", "+", 
       RowBox[{"0.04235967184772609`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "1000.`"}], " ", "t"}]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"3.700296324104575`*^-17", "-", 
          RowBox[{"12.42144100992335`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"10.102051443364381`", " ", "t"}]]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"3.0739664008477454`*^-20", "+", 
          RowBox[{"0.999999999999875`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"989.8979485566356`", " ", "t"}]]}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"3.703370290505385`*^-17", "-", 
          RowBox[{"11.421441009923356`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"1000.`", " ", "t"}]], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"377.`", " ", "t"}], "]"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"9.716039240449583`*^-17", "-", 
          RowBox[{"32.58847990025737`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"1000.`", " ", "t"}]], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"377.`", " ", "t"}], "]"}]}]}], ")"}]}]}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.816085728067976*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"ipartic", "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", "1", ",", "2"}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "0.13"}], "}"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"t", ",", "i"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8160857968487687`*^9, 3.816085858335022*^9}, {
  3.816085891498357*^9, 3.816085902277464*^9}, {3.8160859887498803`*^9, 
  3.816085992460221*^9}, {3.816086029428834*^9, 3.816086125025159*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
SD7/H/1Dpco=
       "]]},
     Annotation[#, "Charting`Private`Tag$35598#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["t", TraditionalForm], 
    FormBox["i", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 0.13}, {-1.4997489669138941`, 1.4503780863196545`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.8160858491575985`*^9, 3.816085861980481*^9}, {
   3.81608590631091*^9, 3.8160859104318323`*^9}, 3.8160859948598127`*^9, 
   3.8160860491933517`*^9, 3.8160861260112877`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", "Done", " ", "*)"}]], "Input",
 CellChangeTimes->{{3.8160861557515616`*^9, 3.816086168343264*^9}}]
}, Open  ]]
},
WindowSize->{1350, 685},
WindowMargins->{{-8, Automatic}, {Automatic, 0}},
FrontEndVersion->"11.0 for Microsoft Windows (64-bit) (September 21, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 223, 6, 111, "Section"],
Cell[CellGroupData[{
Cell[828, 32, 147, 1, 79, "Subsection"],
Cell[CellGroupData[{
Cell[1000, 37, 372, 10, 30, "Input"],
Cell[1375, 49, 471, 13, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1883, 67, 499, 14, 30, "Input"],
Cell[2385, 83, 475, 13, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2897, 101, 222, 5, 30, "Input"],
Cell[3122, 108, 525, 15, 34, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3684, 128, 374, 7, 30, "Input"],
Cell[4061, 137, 525, 15, 34, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4623, 157, 626, 15, 30, "Input"],
Cell[5252, 174, 516, 14, 34, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5805, 193, 127, 2, 30, "Input"],
Cell[5935, 197, 410, 12, 34, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6382, 214, 229, 5, 30, "Input"],
Cell[6614, 221, 656, 19, 34, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7307, 245, 272, 7, 30, "Input"],
Cell[7582, 254, 174, 4, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7793, 263, 285, 7, 30, "Input"],
Cell[8081, 272, 213, 6, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[8331, 283, 554, 15, 30, "Input"],
Cell[8888, 300, 387, 12, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[9312, 317, 258, 6, 30, "Input"],
Cell[9573, 325, 406, 13, 47, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[10016, 343, 293, 9, 30, "Input"],
Cell[10312, 354, 258, 8, 30, "Output"]
}, Open  ]],
Cell[10585, 365, 210, 6, 30, "Input"],
Cell[CellGroupData[{
Cell[10820, 375, 186, 4, 30, "Input"],
Cell[11009, 381, 141, 3, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[11187, 389, 215, 5, 30, "Input"],
Cell[11405, 396, 311, 9, 34, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[11753, 410, 460, 12, 30, "Input"],
Cell[12216, 424, 7454, 136, 263, "Output"]
}, Open  ]],
Cell[19685, 563, 26, 0, 30, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[19760, 569, 165, 3, 70, "Section"],
Cell[CellGroupData[{
Cell[19950, 576, 452, 12, 30, "Input"],
Cell[20405, 590, 436, 12, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[20878, 607, 463, 13, 30, "Input"],
Cell[21344, 622, 390, 11, 34, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[21771, 638, 400, 11, 30, "Input"],
Cell[22174, 651, 30437, 514, 239, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[52660, 1171, 115, 1, 70, "Section"],
Cell[52778, 1174, 26, 0, 30, "Input"],
Cell[52807, 1176, 162, 3, 30, "Input"],
Cell[CellGroupData[{
Cell[52994, 1183, 410, 12, 30, "Input"],
Cell[53407, 1197, 379, 11, 46, "Output"]
}, Open  ]],
Cell[53801, 1211, 380, 11, 50, "Input"],
Cell[54184, 1224, 405, 11, 46, "Output"],
Cell[CellGroupData[{
Cell[54614, 1239, 364, 10, 30, "Input"],
Cell[54981, 1251, 434, 12, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[55452, 1268, 347, 10, 30, "Input"],
Cell[55802, 1280, 436, 12, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[56275, 1297, 446, 12, 30, "Input"],
Cell[56724, 1311, 769, 25, 56, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[57530, 1341, 550, 14, 30, "Input"],
Cell[58083, 1357, 393, 11, 34, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[58513, 1373, 448, 12, 30, "Input"],
Cell[58964, 1387, 1523, 49, 65, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[60524, 1441, 783, 23, 30, "Input"],
Cell[61310, 1466, 36379, 616, 239, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[97738, 2088, 129, 1, 70, "Section"],
Cell[97870, 2091, 26, 0, 30, "Input"],
Cell[97899, 2093, 325, 9, 30, "Input"],
Cell[CellGroupData[{
Cell[98249, 2106, 531, 15, 30, "Input"],
Cell[98783, 2123, 521, 16, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[99341, 2144, 471, 13, 30, "Input"],
Cell[99815, 2159, 500, 15, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[100352, 2179, 427, 12, 30, "Input"],
Cell[100782, 2193, 471, 14, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[101290, 2212, 446, 12, 30, "Input"],
Cell[101739, 2226, 725, 23, 56, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[102501, 2254, 442, 12, 30, "Input"],
Cell[102946, 2268, 283, 8, 46, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[103266, 2281, 443, 12, 30, "Input"],
Cell[103712, 2295, 708, 24, 49, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[104457, 2324, 831, 24, 30, "Input"],
Cell[105291, 2350, 19037, 331, 244, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[124377, 2687, 97, 1, 70, "Section"],
Cell[124477, 2690, 341, 10, 30, "Input"],
Cell[124821, 2702, 292, 8, 30, "Input"],
Cell[CellGroupData[{
Cell[125138, 2714, 317, 9, 30, "Input"],
Cell[125458, 2725, 306, 10, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[125801, 2740, 127, 2, 30, "Input"],
Cell[125931, 2744, 72, 1, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[126040, 2750, 400, 12, 30, "Input"],
Cell[126443, 2764, 533, 18, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[127013, 2787, 175, 3, 30, "Input"],
Cell[127191, 2792, 958, 29, 46, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[128186, 2826, 157, 3, 30, "Input"],
Cell[128346, 2831, 306, 10, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[128689, 2846, 127, 2, 30, "Input"],
Cell[128819, 2850, 72, 1, 30, "Output"]
}, Open  ]],
Cell[128906, 2854, 354, 10, 30, "Input"],
Cell[CellGroupData[{
Cell[129285, 2868, 233, 5, 30, "Input"],
Cell[129521, 2875, 289, 8, 34, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[129847, 2888, 363, 9, 30, "Input"],
Cell[130213, 2899, 923, 27, 34, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[131173, 2931, 129, 2, 30, "Input"],
Cell[131305, 2935, 1274, 37, 69, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[132616, 2977, 123, 2, 30, "Input"],
Cell[132742, 2981, 156, 4, 30, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[132947, 2991, 127, 1, 111, "Section"],
Cell[133077, 2994, 614, 20, 30, "Input"],
Cell[133694, 3016, 126, 2, 30, "Input"],
Cell[CellGroupData[{
Cell[133845, 3022, 441, 13, 30, "Input"],
Cell[134289, 3037, 473, 14, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[134799, 3056, 501, 13, 30, "Input"],
Cell[135303, 3071, 922, 27, 34, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[136262, 3103, 573, 17, 30, "Input"],
Cell[136838, 3122, 21414, 367, 247, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[158301, 3495, 177, 2, 70, "Section"],
Cell[158481, 3499, 304, 9, 30, "Input"],
Cell[158788, 3510, 126, 2, 30, "Input"],
Cell[CellGroupData[{
Cell[158939, 3516, 335, 10, 30, "Input"],
Cell[159277, 3528, 368, 11, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[159682, 3544, 152, 3, 30, "Input"],
Cell[159837, 3549, 109, 2, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[159983, 3556, 260, 6, 30, "Input"],
Cell[160246, 3564, 430, 13, 34, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[160713, 3582, 187, 4, 30, "Input"],
Cell[160903, 3588, 142, 3, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[161082, 3596, 142, 2, 30, "Input"],
Cell[161227, 3600, 445, 13, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[161709, 3618, 659, 18, 30, "Input"],
Cell[162371, 3638, 556, 16, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[162964, 3659, 160, 3, 30, "Input"],
Cell[163127, 3664, 210, 6, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[163374, 3675, 184, 4, 30, "Input"],
Cell[163561, 3681, 165, 5, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[163763, 3691, 180, 4, 30, "Input"],
Cell[163946, 3697, 299, 9, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[164282, 3711, 356, 8, 30, "Input"],
Cell[164641, 3721, 151, 4, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[164829, 3730, 253, 7, 30, "Input"],
Cell[165085, 3739, 391, 12, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[165513, 3756, 231, 5, 30, "Input"],
Cell[165747, 3763, 586, 18, 34, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[166382, 3787, 126, 1, 70, "Section"],
Cell[166511, 3790, 253, 6, 30, "Input"],
Cell[166767, 3798, 128, 2, 30, "Input"],
Cell[CellGroupData[{
Cell[166920, 3804, 269, 7, 30, "Input"],
Cell[167192, 3813, 241, 6, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[167470, 3824, 154, 3, 30, "Input"],
Cell[167627, 3829, 122, 2, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[167786, 3836, 276, 6, 30, "Input"],
Cell[168065, 3844, 408, 12, 30, "Output"]
}, Open  ]],
Cell[168488, 3859, 248, 6, 30, "Input"],
Cell[CellGroupData[{
Cell[168761, 3869, 312, 9, 30, "Input"],
Cell[169076, 3880, 202, 6, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[169315, 3891, 129, 2, 30, "Input"],
Cell[169447, 3895, 121, 2, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[169605, 3902, 546, 15, 30, "Input"],
Cell[170154, 3919, 289, 8, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[170480, 3932, 252, 7, 30, "Input"],
Cell[170735, 3941, 473, 14, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[171245, 3960, 339, 7, 30, "Input"],
Cell[171587, 3969, 593, 18, 30, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[172229, 3993, 124, 1, 70, "Section"],
Cell[172356, 3996, 218, 6, 30, "Input"],
Cell[172577, 4004, 161, 3, 30, "Input"],
Cell[CellGroupData[{
Cell[172763, 4011, 306, 8, 30, "Input"],
Cell[173072, 4021, 283, 8, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[173392, 4034, 234, 5, 30, "Input"],
Cell[173629, 4041, 821, 26, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[174487, 4072, 164, 3, 30, "Input"],
Cell[174654, 4077, 614, 18, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[175305, 4100, 237, 6, 30, "Input"],
Cell[175545, 4108, 122, 3, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[175704, 4116, 315, 8, 30, "Input"],
Cell[176022, 4126, 1439, 38, 239, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[177498, 4169, 410, 11, 30, "Input"],
Cell[177911, 4182, 338, 10, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[178286, 4197, 467, 13, 30, "Input"],
Cell[178756, 4212, 1296, 33, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[180089, 4250, 192, 4, 30, "Input"],
Cell[180284, 4256, 1056, 30, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[181377, 4291, 290, 8, 30, "Input"],
Cell[181670, 4301, 448, 13, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[182155, 4319, 402, 11, 30, "Input"],
Cell[182560, 4332, 54191, 903, 245, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[236800, 5241, 103, 1, 70, "Section"],
Cell[236906, 5244, 492, 13, 34, "Input"],
Cell[CellGroupData[{
Cell[237423, 5261, 358, 11, 30, "Input"],
Cell[237784, 5274, 400, 12, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[238221, 5291, 217, 5, 30, "Input"],
Cell[238441, 5298, 178, 4, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[238656, 5307, 270, 6, 30, "Input"],
Cell[238929, 5315, 539, 16, 34, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[239505, 5336, 509, 13, 30, "Input"],
Cell[240017, 5351, 1696, 43, 57, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[241750, 5399, 551, 13, 30, "Input"],
Cell[242304, 5414, 32527, 548, 239, "Output"]
}, Open  ]],
Cell[274846, 5965, 132, 2, 30, "Input"]
}, Open  ]]
}
]
*)

