(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    213341,       5066]
NotebookOptionsPosition[    204433,       4751]
NotebookOutlinePosition[    204802,       4767]
CellTagsIndexPosition[    204759,       4764]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Chapter 5 [Series Solutions of ODEs]", "Chapter",
 CellFrame->{{0, 0}, {0.5, 0}},
 CellChangeTimes->{{3.8150460301132927`*^9, 3.8150460612752237`*^9}}],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", "=", 
  RowBox[{"Exp", "[", "x", "]"}]}]], "Input",
 CellChangeTimes->{{3.815046095871483*^9, 3.81504610257199*^9}}],

Cell[BoxData[
 SuperscriptBox["\[ExponentialE]", "x"]], "Output",
 CellChangeTimes->{3.8150461044796405`*^9, 3.8166033007421684`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Series", "[", 
  RowBox[{"f", ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "9"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8150461083658967`*^9, 3.815046130301152*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"1", "+", "x", "+", 
   FractionBox[
    SuperscriptBox["x", "2"], "2"], "+", 
   FractionBox[
    SuperscriptBox["x", "3"], "6"], "+", 
   FractionBox[
    SuperscriptBox["x", "4"], "24"], "+", 
   FractionBox[
    SuperscriptBox["x", "5"], "120"], "+", 
   FractionBox[
    SuperscriptBox["x", "6"], "720"], "+", 
   FractionBox[
    SuperscriptBox["x", "7"], "5040"], "+", 
   FractionBox[
    SuperscriptBox["x", "8"], "40320"], "+", 
   FractionBox[
    SuperscriptBox["x", "9"], "362880"], "+", 
   InterpretationBox[
    SuperscriptBox[
     RowBox[{"O", "[", "x", "]"}], "10"],
    SeriesData[$CellContext`x, 0, {}, 0, 10, 1],
    Editable->False]}],
  SeriesData[$CellContext`x, 0, {1, 1, 
    Rational[1, 2], 
    Rational[1, 6], 
    Rational[1, 24], 
    Rational[1, 120], 
    Rational[1, 720], 
    Rational[1, 5040], 
    Rational[1, 40320], 
    Rational[1, 362880]}, 0, 10, 1],
  Editable->False]], "Output",
 CellChangeTimes->{3.8150461321734304`*^9, 3.8166033009677114`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"x", "^", "n"}], "/", 
    RowBox[{"n", "!"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "0", ",", "9"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.815046137666456*^9, 3.8150461753834405`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "x", ",", 
   FractionBox[
    SuperscriptBox["x", "2"], "2"], ",", 
   FractionBox[
    SuperscriptBox["x", "3"], "6"], ",", 
   FractionBox[
    SuperscriptBox["x", "4"], "24"], ",", 
   FractionBox[
    SuperscriptBox["x", "5"], "120"], ",", 
   FractionBox[
    SuperscriptBox["x", "6"], "720"], ",", 
   FractionBox[
    SuperscriptBox["x", "7"], "5040"], ",", 
   FractionBox[
    SuperscriptBox["x", "8"], "40320"], ",", 
   FractionBox[
    SuperscriptBox["x", "9"], "362880"]}], "}"}]], "Output",
 CellChangeTimes->{3.8150461810298014`*^9, 3.8166033010578513`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sum", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"x", "^", "n"}], "/", 
    RowBox[{"n", "!"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "0", ",", "9"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8150461903532443`*^9, 3.8150462089069643`*^9}}],

Cell[BoxData[
 RowBox[{"1", "+", "x", "+", 
  FractionBox[
   SuperscriptBox["x", "2"], "2"], "+", 
  FractionBox[
   SuperscriptBox["x", "3"], "6"], "+", 
  FractionBox[
   SuperscriptBox["x", "4"], "24"], "+", 
  FractionBox[
   SuperscriptBox["x", "5"], "120"], "+", 
  FractionBox[
   SuperscriptBox["x", "6"], "720"], "+", 
  FractionBox[
   SuperscriptBox["x", "7"], "5040"], "+", 
  FractionBox[
   SuperscriptBox["x", "8"], "40320"], "+", 
  FractionBox[
   SuperscriptBox["x", "9"], "362880"]}]], "Output",
 CellChangeTimes->{3.8150462096193314`*^9, 3.8166033011175265`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.8150462165353117`*^9, 3.8150462188215895`*^9}}],

Cell[BoxData[
 RowBox[{"1.`", "\[VeryThinSpace]", "+", "x", "+", 
  RowBox[{"0.5`", " ", 
   SuperscriptBox["x", "2"]}], "+", 
  RowBox[{"0.16666666666666666`", " ", 
   SuperscriptBox["x", "3"]}], "+", 
  RowBox[{"0.041666666666666664`", " ", 
   SuperscriptBox["x", "4"]}], "+", 
  RowBox[{"0.008333333333333333`", " ", 
   SuperscriptBox["x", "5"]}], "+", 
  RowBox[{"0.001388888888888889`", " ", 
   SuperscriptBox["x", "6"]}], "+", 
  RowBox[{"0.0001984126984126984`", " ", 
   SuperscriptBox["x", "7"]}], "+", 
  RowBox[{"0.0000248015873015873`", " ", 
   SuperscriptBox["x", "8"]}], "+", 
  RowBox[{"2.7557319223985893`*^-6", " ", 
   SuperscriptBox["x", "9"]}]}]], "Output",
 CellChangeTimes->{3.815046219499568*^9, 3.8166033011556635`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Series", "[", 
  RowBox[{
   RowBox[{"BesselJ", "[", 
    RowBox[{"0", ",", "x"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "12"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8150462276322527`*^9, 3.8150462576194196`*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"1", "-", 
   FractionBox[
    SuperscriptBox["x", "2"], "4"], "+", 
   FractionBox[
    SuperscriptBox["x", "4"], "64"], "-", 
   FractionBox[
    SuperscriptBox["x", "6"], "2304"], "+", 
   FractionBox[
    SuperscriptBox["x", "8"], "147456"], "-", 
   FractionBox[
    SuperscriptBox["x", "10"], "14745600"], "+", 
   FractionBox[
    SuperscriptBox["x", "12"], "2123366400"], "+", 
   InterpretationBox[
    SuperscriptBox[
     RowBox[{"O", "[", "x", "]"}], "13"],
    SeriesData[$CellContext`x, 0, {}, 0, 13, 1],
    Editable->False]}],
  SeriesData[$CellContext`x, 0, {1, 0, 
    Rational[-1, 4], 0, 
    Rational[1, 64], 0, 
    Rational[-1, 2304], 0, 
    Rational[1, 147456], 0, 
    Rational[-1, 14745600], 0, 
    Rational[1, 2123366400]}, 0, 13, 1],
  Editable->False]], "Output",
 CellChangeTimes->{3.815046259031639*^9, 3.8166033012016287`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["5.1 Power Series Solutions, Plots from them, Numeric Values", "Section",
 CellChangeTimes->{{3.8150462701929784`*^9, 3.8150463294391537`*^9}}],

Cell[BoxData[
 RowBox[{"Clear", "[", "y", "]"}]], "Input",
 CellChangeTimes->{{3.815046334252221*^9, 3.8150463370494695`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ode", "=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"x", "^", "2"}]}], ")"}], 
     RowBox[{
      RowBox[{"y", "''"}], "[", "x", "]"}]}], "-", 
    RowBox[{"2", "x", " ", 
     RowBox[{
      RowBox[{"y", "'"}], "[", "x", "]"}]}], "+", 
    RowBox[{"72", 
     RowBox[{"y", "[", "x", "]"}]}]}], "\[Equal]", "0"}]}]], "Input",
 CellChangeTimes->{{3.8150463408814926`*^9, 3.8150463639631286`*^9}, {
  3.8150463949468374`*^9, 3.8150464100169334`*^9}, {3.8150472092316337`*^9, 
  3.8150472153412757`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"72", " ", 
    RowBox[{"y", "[", "x", "]"}]}], "-", 
   RowBox[{"2", " ", "x", " ", 
    RowBox[{
     SuperscriptBox["y", "\[Prime]",
      MultilineFunction->None], "[", "x", "]"}]}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "-", 
      SuperscriptBox["x", "2"]}], ")"}], " ", 
    RowBox[{
     SuperscriptBox["y", "\[Prime]\[Prime]",
      MultilineFunction->None], "[", "x", "]"}]}]}], "\[Equal]", 
  "0"}]], "Output",
 CellChangeTimes->{3.815047216461213*^9, 3.8166033012756605`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sol", "=", 
  RowBox[{"DSolve", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"ode", ",", 
      RowBox[{
       RowBox[{"y", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"y", "'"}], "[", "0", "]"}], "\[Equal]", "1"}]}], "}"}], ",", 
    RowBox[{"y", "[", "x", "]"}], ",", "x"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.815047235423915*^9, 3.81504725135363*^9}, {
  3.8150472895302677`*^9, 3.8150473442380505`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"y", "[", "x", "]"}], "\[Rule]", 
    RowBox[{
     FractionBox["1", "32768"], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"30318", " ", "x"}], "-", 
       RowBox[{"294910", " ", 
        SuperscriptBox["x", "3"]}], "+", 
       RowBox[{"690690", " ", 
        SuperscriptBox["x", "5"]}], "-", 
       RowBox[{"450450", " ", 
        SuperscriptBox["x", "7"]}], "-", 
       RowBox[{"1225", " ", 
        RowBox[{"Log", "[", 
         RowBox[{"1", "-", "x"}], "]"}]}], "+", 
       RowBox[{"44100", " ", 
        SuperscriptBox["x", "2"], " ", 
        RowBox[{"Log", "[", 
         RowBox[{"1", "-", "x"}], "]"}]}], "-", 
       RowBox[{"242550", " ", 
        SuperscriptBox["x", "4"], " ", 
        RowBox[{"Log", "[", 
         RowBox[{"1", "-", "x"}], "]"}]}], "+", 
       RowBox[{"420420", " ", 
        SuperscriptBox["x", "6"], " ", 
        RowBox[{"Log", "[", 
         RowBox[{"1", "-", "x"}], "]"}]}], "-", 
       RowBox[{"225225", " ", 
        SuperscriptBox["x", "8"], " ", 
        RowBox[{"Log", "[", 
         RowBox[{"1", "-", "x"}], "]"}]}], "+", 
       RowBox[{"1225", " ", 
        RowBox[{"Log", "[", 
         RowBox[{"1", "+", "x"}], "]"}]}], "-", 
       RowBox[{"44100", " ", 
        SuperscriptBox["x", "2"], " ", 
        RowBox[{"Log", "[", 
         RowBox[{"1", "+", "x"}], "]"}]}], "+", 
       RowBox[{"242550", " ", 
        SuperscriptBox["x", "4"], " ", 
        RowBox[{"Log", "[", 
         RowBox[{"1", "+", "x"}], "]"}]}], "-", 
       RowBox[{"420420", " ", 
        SuperscriptBox["x", "6"], " ", 
        RowBox[{"Log", "[", 
         RowBox[{"1", "+", "x"}], "]"}]}], "+", 
       RowBox[{"225225", " ", 
        SuperscriptBox["x", "8"], " ", 
        RowBox[{"Log", "[", 
         RowBox[{"1", "+", "x"}], "]"}]}]}], ")"}]}]}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.815047347463007*^9, 3.816603301534927*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ser", "=", 
  RowBox[{"Series", "[", 
   RowBox[{
    RowBox[{"sol", "[", 
     RowBox[{"[", 
      RowBox[{"1", ",", "1", ",", "2"}], "]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", "11"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.815047359332079*^9, 3.8150473979520664`*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"x", "-", 
   FractionBox[
    RowBox[{"35", " ", 
     SuperscriptBox["x", "3"]}], "3"], "+", 
   RowBox[{"35", " ", 
    SuperscriptBox["x", "5"]}], "-", 
   RowBox[{"35", " ", 
    SuperscriptBox["x", "7"]}], "+", 
   FractionBox[
    RowBox[{"70", " ", 
     SuperscriptBox["x", "9"]}], "9"], "+", 
   FractionBox[
    RowBox[{"14", " ", 
     SuperscriptBox["x", "11"]}], "11"], "+", 
   InterpretationBox[
    SuperscriptBox[
     RowBox[{"O", "[", "x", "]"}], "12"],
    SeriesData[$CellContext`x, 0, {}, 1, 12, 1],
    Editable->False]}],
  SeriesData[$CellContext`x, 0, {1, 0, 
    Rational[-35, 3], 0, 35, 0, -35, 0, 
    Rational[70, 9], 0, 
    Rational[14, 11]}, 1, 12, 1],
  Editable->False]], "Output",
 CellChangeTimes->{3.815047398491564*^9, 3.8166033016532936`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"p", "=", 
  RowBox[{"Normal", "[", "ser", "]"}]}]], "Input",
 CellChangeTimes->{{3.8150474125707493`*^9, 3.8150474219939404`*^9}}],

Cell[BoxData[
 RowBox[{"x", "-", 
  FractionBox[
   RowBox[{"35", " ", 
    SuperscriptBox["x", "3"]}], "3"], "+", 
  RowBox[{"35", " ", 
   SuperscriptBox["x", "5"]}], "-", 
  RowBox[{"35", " ", 
   SuperscriptBox["x", "7"]}], "+", 
  FractionBox[
   RowBox[{"70", " ", 
    SuperscriptBox["x", "9"]}], "9"], "+", 
  FractionBox[
   RowBox[{"14", " ", 
    SuperscriptBox["x", "11"]}], "11"]}]], "Output",
 CellChangeTimes->{3.815047422871393*^9, 3.816603301700096*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{"p", ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"x", ",", "y"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8150474295130405`*^9, 3.8150474597967553`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]]},
     Annotation[#, "Charting`Private`Tag$17373#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["x", TraditionalForm], 
    FormBox["y", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-1, 1}, {-0.4411796679430969, 0.4411477786883282}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.815047461696805*^9, 3.816603301964345*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"p", "/.", 
  RowBox[{"x", "\[Rule]", "0.8"}]}]], "Input",
 CellChangeTimes->{{3.81504747986534*^9, 3.815047484390196*^9}}],

Cell[BoxData["0.10867676915071023`"], "Output",
 CellChangeTimes->{3.8150474849907475`*^9, 3.816603302204417*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NSolve", "[", 
  RowBox[{
   RowBox[{"p", "\[Equal]", "0"}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.8150474898755846`*^9, 3.8150474969787116`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"-", "1.3952248770970197`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"-", "0.852542065595995`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"-", "0.6750592133873627`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"-", "0.3606223490035777`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"0.`", "\[VeryThinSpace]", "-", 
      RowBox[{"3.061101919664259`", " ", "\[ImaginaryI]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"0.`", "\[VeryThinSpace]", "+", 
      RowBox[{"3.061101919664259`", " ", "\[ImaginaryI]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "0.3606223490035777`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "0.6750592133873626`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "0.8525420655959957`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "1.3952248770970188`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8150474977221937`*^9, 3.816603302353662*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{"p", "\[Equal]", "0"}], ",", "x"}], "]"}], ",", "4"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.815047507271165*^9, 3.8150475370915995`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{
      RowBox[{"-", "3.0611019196642590017`4."}], " ", "\[ImaginaryI]"}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"3.0611019196642590017`4.", " ", "\[ImaginaryI]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"-", "0.3606223490035776281`4."}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "0.3606223490035776281`4."}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"-", "0.6750592133873625109`4."}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "0.6750592133873625109`4."}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"-", "0.8525420655959955507`4."}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "0.8525420655959955507`4."}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"-", "1.3952248770970186871`4."}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "1.3952248770970186871`4."}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.8150475377580824`*^9, 3.816603302490384*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["5.2 Legendre Polynomials", "Section",
 CellChangeTimes->{{3.8150475500534916`*^9, 3.815047561886467*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LegendreP", "[", 
  RowBox[{"3", ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.815047644763254*^9, 3.8150476509512477`*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "3"}], " ", "x"}], "+", 
    RowBox[{"5", " ", 
     SuperscriptBox["x", "3"]}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.8150476520280695`*^9, 3.8166033025459976`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Leg", "[", "n_", "]"}], "=", 
  RowBox[{
   RowBox[{"1", "/", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"2", "^", "n"}], " ", 
      RowBox[{"n", "!"}]}], ")"}]}], 
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"x", "^", "2"}], "-", "1"}], ")"}], "^", "n"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "n"}], "}"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.815047659184353*^9, 3.815047719780811*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox["2", 
    RowBox[{"-", "n"}]], " ", 
   RowBox[{
    SubscriptBox["\[PartialD]", 
     RowBox[{"{", 
      RowBox[{"x", ",", "n"}], "}"}]], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       SuperscriptBox["x", "2"]}], ")"}], "n"]}]}], 
  RowBox[{"n", "!"}]]], "Output",
 CellChangeTimes->{3.8150477214451265`*^9, 3.816603302594528*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Leg", "[", "0", "]"}]], "Input",
 CellChangeTimes->{{3.815047729566348*^9, 3.8150477315703945`*^9}}],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.8150477324554243`*^9, 3.8166033026443453`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Leg", "[", "1", "]"}]], "Input",
 CellChangeTimes->{{3.8150477392100477`*^9, 3.8150477416745963`*^9}}],

Cell[BoxData["x"], "Output",
 CellChangeTimes->{3.815047742215881*^9, 3.8166033026761994`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Leg", "[", "2", "]"}]], "Input",
 CellChangeTimes->{{3.815047744969654*^9, 3.81504774694217*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "8"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"8", " ", 
     SuperscriptBox["x", "2"]}], "+", 
    RowBox[{"4", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       SuperscriptBox["x", "2"]}], ")"}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.815047747509966*^9, 3.8166033027195697`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.815047754840371*^9, 3.8150477583431644`*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", "1"}], "+", 
    RowBox[{"3", " ", 
     SuperscriptBox["x", "2"]}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.815047758925234*^9, 3.816603302753894*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"Leg", "[", "3", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.815047764991164*^9, 3.8150477745968113`*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", "x", " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", "3"}], "+", 
    RowBox[{"5", " ", 
     SuperscriptBox["x", "2"]}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.8150477750766068`*^9, 3.8166033028020024`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Apart", "[", 
  RowBox[{"Leg", "[", "3", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.815047790849813*^9, 3.8150477988807545`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox[
    RowBox[{"3", " ", "x"}], "2"]}], "+", 
  FractionBox[
   RowBox[{"5", " ", 
    SuperscriptBox["x", "3"]}], "2"]}]], "Output",
 CellChangeTimes->{3.81504780017056*^9, 3.8166033028452435`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"S", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Simplify", "[", 
     RowBox[{"Leg", "[", "n", "]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "0", ",", "4"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8150478335426908`*^9, 3.815047837975786*^9}, {
  3.8150480132971973`*^9, 3.815048036812998*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "x", ",", 
   RowBox[{
    FractionBox["1", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      RowBox[{"3", " ", 
       SuperscriptBox["x", "2"]}]}], ")"}]}], ",", 
   RowBox[{
    FractionBox["1", "2"], " ", "x", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "3"}], "+", 
      RowBox[{"5", " ", 
       SuperscriptBox["x", "2"]}]}], ")"}]}], ",", 
   RowBox[{
    FractionBox["1", "8"], " ", 
    RowBox[{"(", 
     RowBox[{"3", "-", 
      RowBox[{"30", " ", 
       SuperscriptBox["x", "2"]}], "+", 
      RowBox[{"35", " ", 
       SuperscriptBox["x", "4"]}]}], ")"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.815048038101438*^9, 3.8166033028967004`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", "S", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "1.2"}], ",", "1.2"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1.1"}], ",", "1.1"}], "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Legendre Polynomial\>\""}], ",", 
   RowBox[{"Ticks", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "0", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", 
        RowBox[{"-", "0.5"}], ",", "0", ",", "0.5", ",", "1"}], "}"}]}], 
     "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.815048041837373*^9, 3.815048086050129*^9}, {
  3.815048131827215*^9, 3.8150482177119923`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQLR3Jq2Zs/Hk/Axh8sP8n6zFrx6VPcP7DR018dkUI
vuSzy594F36E8yuX3Vm66+4HOD+Pd6WZjRyCv/L2wjbWue/g/KNiibY+km8R
fJfrr2VKX8P5H/dfCZ1+4yWcn7PVMfZ0+As4/9Tc1JjObc/g/HKGnz8YDJ/C
+QEbhAOVNj+G83mCny44K/IIzhcvUOszmvQAzudlsH3mdO8unO+8y1q9ZPkt
hPpMycUSK67D+Zv/pvBdTL8C579t69/yJ+4inH/7tf+UCq0zcH7nv7lr5209
Cuc//xJcGRa/H6G+WTl0v/8mOF9m6u7CK+Uz4Pwz9roMslHT7WF8vndn720+
twnO37RTZJLwy31wvsz3i4cnMh9DyMfUXPhUfAbOb83Zsnmb1UU4/9WRPfwJ
NVfg/I0azwymtV2H8xU/MdyuaLwF55+6unaq+967cH72o71dFxMewPm8z98G
lTI/gvMTCtfVxnc9hvM71j1/M5/zKZx/5kdmStjKZ3D+wRM1dsG6L+D8S0tv
KBy7+BLO32G61r0/7zWc7+8tdHHe+zdwPlPegSSVie/gfKPueu0K7g9w/jmL
2+6dpxD8HznRGVdnfoTzfz1W3uUS/QnO75on8cH6OIIPzS9wPgDokyNZ
       "]]},
     Annotation[#, "Charting`Private`Tag$17429#1"]& ], 
    TagBox[
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJxTTMoPSmViYGDQA2IQPWsmCHzcD6Mrl91ZuuvuBzidx7vSzEYOQa+8vbCN
de47OH1ULNHWR/Itgna5/lqm9DWc/rj/Suj0Gy/hdM5Wx9jT4S/g9Km5qTGd
257B6XKGnz8YDJ/C6YANwoFKmx/DaZ7gpwvOijyC0+IFan1Gkx7AaV4G22dO
9+7Caedd1uoly2/BafFMycUSK67D6c1/U/gupl+B02/b+rf8ibsIp2+/9p9S
oXUGTnf+m7t23tajcPr5l+DKsPj9cPp2s3Lofv9NcFpm6u7CK+Uz4PQZe10G
2ajp9jCa793Ze5vPbYLTm3aKTBJ+uQ9Oy3y/eHgi8zE4vSmm5sKn4jNwujVn
y+ZtVhfh9Ksje/gTaq7A6Y0azwymtV2H04qfGG5XNN6C06eurp3qvvcunM5+
tLfrYsIDOM37/G1QKfMjOJ1QuK42vusxnO5Y9/zNfM6ncPrMj8yUsJXP4PTB
EzV2wbov4PSlpTcUjl18Cad3mK517897Daf9vYUuznv/Bk4z5R1IUpn4Dk4b
dddrV3B/gNPnLG67d55C0NB0DKcBvdaaQw==
       "]]},
     Annotation[#, "Charting`Private`Tag$17429#2"]& ], 
    TagBox[
     {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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

       "]]},
     Annotation[#, "Charting`Private`Tag$17429#3"]& ], 
    TagBox[
     {RGBColor[0.922526, 0.385626, 0.209179], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwtmXk8VP/3x0lEZSklWxstVEqyRTmfFkubpUKKQpYskSxJUtqLSrKLZFdI
lCzVIUsqYgyz3Ttjxr6WSFTU734fj9/8M4/n487ced+zvM7rPGals+9B11lC
QkJZwkJC/3v/Jq7CNdoxikmJ/3t9Rx/JPN1ty0Yx1GIOR+71KOYRT26IpnxF
FVkfubbl/Vgn57R9v8IIJszu170dzse63cwh5cAhvCajIW7zshW/Y5t1PGsA
58Vnx61fUIn1/mOrY1oHUDJTfYWWTwU+WivzM6pxAC1S+ySzP5ej2f19cXeq
BjAiX6uo/WYZph1/z7iYO4CHfNgmVqKlaDnz3NYleAA1L87zz1j0AgsNIuw2
yw9g9aDxqKhMKnq/2uHw2bYf341USJKYCVLGRtYmVv04vfetS25fFjxvMzhQ
vbcfo2cnnL8ilQNj41u2v97ej7F6mXxHuzwI1lqzNEO1H58eeP2uqasArj2f
yw351oeivE7TFtcSSM6j26+72YdyrNdxwT8q4VOKq/3t0l6sl4/rUebUgfUQ
08C/qBcvj42lhy6oB77+XgWHp714lHF5xTOzepigb2RopvYiXUL8QUBpPayY
O2XBut6Lx4wKyyvuf4DAoDu71lr34in607LlWz/CCovn6+rGe3DCdrgv170R
nj1aKfF8pAdlhDV3/05oBN3Bh30JfT3otcJ9jvKnRth3PTjTm+jBK9K3JlvW
N0FQ5Y5li2p6MLYpbFR4pAka17YtOBndgx3votoi3JrhnNCvKaHNPWgv0/ft
gBINdL3swiTW9+AFbU7KI00a/GwvF1m4ugezh7P02o1pEPAsREpVoQclOM9M
Z5+hwVmbaVVj4R5M+Vp882gNDXzy/5nfpnWjmUbZr2HXVnA5Ipa14Gw3Xjw7
qtOeRIdVNW7rFL278VtYzenTBXTo0vjwXMWtG6XXxB4ZRTo4i9yq2HK0G5VE
FRxLu+lwolCixXpnN5rs7+7epdEGR2dL/klc2I3CGg/1PCvawLJI1kqlpAt5
eRkPpOvagfh58G9ufhc6mC8XcmW0g9v26GebsrtQ13yzSXpfO4R+khHbntiF
7nbdwW0SDMjtlqy0vdSFkb6KtvIHGPBPXnz13X1dGKPuOrSqmQGF4dNTk12d
eGuPh/ztaiZsbTDMDuN2Yv7ai/z+ZibUSl04JMrsRPcNN8M285jASf5VsPBT
J87P2GN/8TcTxEp/OmsUdWK/nPJFIS0WOAyONjqHduKVnFizykcsmH+oJ61p
USfuEDQ/M3Biw2XbJO0aqU4sspvz5J8XG34cs2goE+/EO4vMzF4EsYHrUv4t
Y1qA9Ssr6jkRbCgMumsU0i1Azf1a+qav2GCRpEOueSlAT1+hmIjZHKhNHfRV
LhSgb9CbomVSHNDPeCyyMFeAI0LtvalLOLAiX2L9TLIAY8+Mlrmt48DoW+55
+lUBnvROz1tkwYFowfUllw8JMNrl8slvMRwQ6zV4FnhAgMNzJ5RtUzgQMvjN
yMtUgJ8CFWzzszjgPG7nZmMoQGsPE/flpRzYIrrx1QZVAfqdn5WvxuBAmxrj
IHuMj0GNUaebFhJgphHR+2WYj3yVMX0ZRQLebP4vpLaXj5wwm+H/VhKQZfD0
yXMOH98smVnlvYmAoP1ho9ff81H+0sPowb0ELDmz5p5WNB+bi8+K3g0jwMay
Yk92BB9/mj+6p32dgDhNc1HF63y8r3zY4kMEAXLfA0OFg/m4IvlwQmECAYvP
1nm2OPBRxqJn4/UXBBw+aLdmty0fZdMaj958TUCM1ojgtSUfk6ukhALfErBo
fJHd41183I+3mQs/EiAb4GLqo87HUDI7za6DgIOHp2Z1qvBxNr3oYlk3AdHa
ke+slfm4Rq9zscggAQsnSnS2S/PRPP5JwrEfBKgMi5nJD3agJ5/XpChOwrLR
3cKHwztQm/9Snb2ehNQi72DDgA6sG9eKmdxEwlK/mG8q7h248oXf9lnaJCiP
dXG/7+9AneAlp0lDEhR/XKm4L9+BG50s12btJSHp5dPN5+Z1oOnwcp815iQo
BLbmHv/Lw+0YqhNjRYL8z5XxGt08/BhR66ZzhAS5qSr/z895WNzP2nrfhYS4
sv7B4nQezhDHvQLdSVh8XsY5KZaHBq+MTph5krDo9wlLjws8jDk1VvjSl4SY
ipsfLH14qOe5Vcn8LAmyF54b6TvxkJlW5dkWQMLC6b8b5pjyUGE6sC3nPAnR
b9Zkft3KQyOzJf9+XCBhwUVzJcYGHp6W79DYFEaCzN8UiayFPBx62FDmeYUE
SaHtvTt5XHy9wsLz320Sfv7+75k7jYtSPnq1BREk8CZ2n4ms5aKDSs6CvXdJ
KBra/7v9KReNTm/P3h9FQmKvJf5O4WLY0R/TxQ9IuCI4fG35Ay7K2B9ym/OQ
hMNMeymPc1y8vmddVEgsCdtbHel3PbkoF6nlmBhHwpoml4RiBy7aRIk4Z8eT
INVwyoFpycWEcNeUJwkkTL73VpnexcUtESsUIxJJ4L8907dCj4uXWdMdzkkk
NJQF5Buv42J7zPufaskkvCgJ9vNcysWbQ1vduBQnFYbq3pfh4tc563UvPyLh
at7lPyUiXHRafNxnQQoJ3pnXqlg/SdSBZLkHFFs/vnV9ZoDE6qKnuv8oNkqK
3KvCJfF47GHGsVQS1sZGSZu2kHhC3mkmm2KZqJg2rxoSlV0TSvgUT91JSIwq
JXE4+72QxGMSBNcfHX+VR+Iaidzh5RR/upymynlE4vLXMpdWU1x8IbP/730S
N5G1qEBxclBugepVEgsyIkunqftd88s/axZE4ld9Ta8vFJ/2LtI77UHi3g/n
eu5RbOP+cvqBPYnyIes1jCgG57LqUgsS80Nl95LU+dUc3twgdlLn/T25y4Pi
BUeq9gnpknhz2ROVHioevw/WyqxWJ/H8IuaIBcVdBxra9yiTeG+Oc0EeFb9G
s8YkH2nq+VTneoxR8X61q+XEw1kkhkTHq62jONWobVXZBIHTl1vHLan8+GqT
hcIkgU23/Bq9qHwe2cT3X9NM4Kcp14ETVL7/W9etv+89gcaxapt3UfWwcMXw
+5hcAhWEtzoyo0n4ozh6szyZwKVrl9jeouqpe/GP/bx71P3XdMerUfVWOm+a
sTaQwCwnLzk9qh4fiwk92n+KQKXxVyezqHq9JTzbye8YgR/mySiK3CHBbnLe
UMUOApdclhVE3iBh55h0UYc2gZ5aB4TLr5GwbkQ2cLYagfsUXue1Uf0w3an0
74AU9XmtbcUcql96uMtrzwoT+Lyib2VdKAlfWKq3439wcPPqbv3HISSkfVkv
K+BwcP+B0QsqQSTsqjBcG5DDwWM5Bppu3iT81VxfHpTMwWWzwof/eJBQkaO4
7/x9Dj4sbcq+SvW/Zuwvn7BzHEwaLt/o4Uzp1ZnXpbdMOTjamLztri0J7N5s
swhDDm7VoSeWHKb0wCGOc3cTBzXPRa1tpPRm3r7Av9FLOLjcjByh76Pqb/UW
k5Q+NvY7nGMYAQklj1RYjwk2XqQnn5qk9MxHdqFnejMbX6XXOaTrU88n9P1u
zms2ykh53GneTEIrUdj+4iYbbY4UpNxUJaHgwTrX+rVshIqlWgGzSTglrjjZ
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
c2YhCR4mfW3Lkkn8edJW33E55Rtyvq+lU3xtyU5/iw0kzL+g9F8Q5TNlP28o
NNpKgqhk8GLxFBLTw5YMaJhQvj5HMe0WxZpas1YtPUTN9Tg51iTF2DN8fL4j
CcGql15Zp5JonshM/EP5GH6iu2Y6xeT+922D1J7hv7vrPy7FXkIF0hzKV4n4
iHaIPSbxd0n83o+U73d3Esyi/C7ecr9yvSyN8tkedzIpv4tLlE5X5RSQMNAi
+0aR4uwvtn/iKkh43hm14y91P+0rO3VvfCDh4cAijRaKa3Q0/ALbSHDTLAmK
ovjgwJJ8FwEJM8KX5IBi/qNZfYe+kqCeFzGb8rvoYzmyctcfEt6dGdZ3p3hG
hGWvJc6Fexkvn/GpeES+fh+/cjEXTkdOHjajWNGroFVGhQsbgxo2pFLxy1uW
ICm0iQuZzwzWd1Lx1m+9YvbNkAtPzjmZLaLYeuuRd03WXLj0VwF3UvnqHt75
640zF0QtWsWByufZNA3tfF8uODpFWqlT+Y6aI/L0zm0ucH4erPrwkMRllSPd
5+O4kCZ9g3EhmvL5PqzlHhlcuLFYvHEpVU+f2gtiTd9yYVrWRGc9VX83JAtE
7D5yIaXGyrg4ksSdxvl+nu1caJc+fVadqtfKl08P3B3hQsgD2bn9N0kMHs6r
TP3FhUeW6L7pBhXPVXnqRaI8qMLKBrdr1F7wMEeUvpQHYdV9IVmXqXr6nO3f
rc6DL1w9zA8jcZVItmBChwcRbxVGMqh+enQ28628OQ/ecOhDTlT/3bV6Eng8
jAf9sgNVSlT/7r2d1uV7hweJ9HspT7xJFKt+bBUex4P7F800l3iSGKaZqpFZ
yINXGfrHaZQ++Egn9wzweMCqoq8Np/TDsinGOhA6YOzi5pYGoPpVNKbmxr4O
uKpWKmG6jcSGbQ83J9h2wJx5h6JfUnq2I/+BZKVvB1hEyJ1z2EyiVsS9OqG0
DqALRXJ6VlL6tKpW0USID0r/vN0//yPwVFUNzVyMD/a+i+8Z/iHQxL7mlu18
Phi5ch4l/SRwFrU3npLng9nE7yOrRwgMEalujdDkg9fG4/HebAK9Ot/eoTny
wXX3wJ031LwIS+cp2LvzYZ2iy+8Uam+Jcv6X23uaD42O1WzPdAJLO//78CeE
D6ee2nyojyVQqKtGZE0sH+bJHg6+cYHAmK6PoSEf+fDiKHv2sl0EZmcMzhNt
4YN6enhSsSGB5SfnJd9nUL8nzFHWovYUXtf+8swuPgyf+VL/fRWBat3NE19m
+ABTGp/OihL4prvdR1VLAKkNYs4B76l5nPlzpkBfAEajpYMl5RwUuCy5qw8C
iGB0k9wiDor1HHl2YL8AesxGyFFq/lr2EH3n3ARQnivvtjCEg909AsfGJAGc
D5Q/s20DByX7Rg4GinTCXbNX02OX2Kg7kPAnSqKT2uvUS7YEstFxaFdmvnQn
yNy5W+zoycbib4kTXUqdoKXj73fpMBuPTBknHNTuhOj4Gu1mao9Il0jlbnLt
hE69Wb9ffGKh7gbzU4P1nTButLvGWpiFJzb+khFr6gR7TdfchT+YeEszs3wl
vRNmXOhClb1MJLR/z7Xr6ITPm7tGmz4z8fL27IIPk50w+75g4XQMEz+b/x3L
VOuCX7O6bvirMtHRr/DiiTtdoK1u4p+mycDDNl6X7KO6wL2YUy61koF7DNXC
7eK6QJ/17uypBQzUEk2/dii9C5gN+1R439tRNDE2wrSiCz71WTbQXrTj06rQ
xE2DXbDXq6mwTaMdf0jve/VvTzewZ8oJZbk27P8x5/W0RTfEnW41HBFpQy67
tuyXdTd0jvXvzv1Ox/oMozfjTt1gJdmrz2ukY6KeVk3f+W44uP7XpNkVOhqd
UKA153VDxFEzq0UDrXirsG/4sUQPzPvz0s0mm4YvXtfVL5PpAQM5nUt592nI
qcpIS5HrgQX0+HudwTTcQD9xOFm1Bx5f6vMT20fDlklmZdz2HnCu6/BY9LUF
FXY03Lnr1wN7JV/J79zUgk/puWoX2D3gWT5x4YhhEzZOebjY5PXCKrqX1A+r
epy/u9XW7XkvjDyamhBVqsf99w32Bb3qhazvn0T6uurw8+p5WnHVvXDdWPy4
XGAdfjqY/6+d3QtpHIfHarG1+DH/a5L13D4wYeoOSDe+x3pHf9phrz74KOHs
q6z+DqsbQo0OafTDNhHd6gqdfNTVF5vbs6Uf5vd+MRqQeYZPc+63Bxn0w5U1
O4ZUhvIw+ka6d5JpP9hc7qwvfZSDLrsbkgRO/bCec3q33Y90FKuSnfSN64cv
V9LdUgejce/rp88j/1HX3zTEZN6MgdYs1op62gBsiUuZ7XmkAhZO+RtvZQ3A
MpuZSq05lWC1V9oznzcAl46u8ztfWgktX41LoocGYP7mFwfD5d5Cs16J8QnR
QdBb3O5MySU0frzrOaU/COlck5RVVe+hbmTny3Vpg6BtsmP078MGKNMpML3v
MwQrCpaNF11qBYt9C2mp34YhYKWO9vywDpjlU+W86sFXCAx6+NaA3wdaEZfW
B88bhdwez7dSxqNwlZvj8eK/Ufj//4/g/wCoX1Uq
       "]]},
     Annotation[#, "Charting`Private`Tag$17429#4"]& ], 
    TagBox[
     {RGBColor[0.528488, 0.470624, 0.701351], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
g///PdL/AaUk39o=
       "]]},
     Annotation[#, "Charting`Private`Tag$17429#5"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox["\"Legendre Polynomial\"", TraditionalForm],
  PlotRange->{{-1.199999951020408, 1.199999951020408}, {-1.1, 1.1}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{{{-1, 
      FormBox[
       RowBox[{"-", "1"}], TraditionalForm]}, {0, 
      FormBox["0", TraditionalForm]}, {1, 
      FormBox["1", TraditionalForm]}}, {{-1, 
      FormBox[
       RowBox[{"-", "1"}], TraditionalForm]}, {-0.5, 
      FormBox[
       RowBox[{"-", "0.5`"}], TraditionalForm]}, {0, 
      FormBox["0", TraditionalForm]}, {0.5, 
      FormBox["0.5`", TraditionalForm]}, {1, 
      FormBox["1", TraditionalForm]}}}]], "Output",
 CellChangeTimes->{3.815048221335066*^9, 3.8166033030686216`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["5.3 Legendre\[CloseCurlyQuote]s Differential Equation", "Section",
 CellChangeTimes->{{3.815048226440574*^9, 3.815048244594308*^9}}],

Cell[BoxData[
 RowBox[{"Clear", "[", 
  RowBox[{"y", ",", "n", ",", "m", ",", "s", ",", "a"}], "]"}]], "Input",
 CellChangeTimes->{{3.815048258138313*^9, 3.8150482763836436`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LegEq", "=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"x", "^", "2"}]}], ")"}], 
     RowBox[{
      RowBox[{"y", "''"}], "[", "x", "]"}]}], "-", 
    RowBox[{"2", "x", " ", 
     RowBox[{
      RowBox[{"y", "'"}], "[", "x", "]"}]}], "+", 
    RowBox[{"n", 
     RowBox[{"(", 
      RowBox[{"n", "+", "1"}], ")"}], 
     RowBox[{"y", "[", "x", "]"}]}]}], "\[Equal]", "0"}]}]], "Input",
 CellChangeTimes->{{3.815048282723425*^9, 3.815048339826192*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"n", " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", "n"}], ")"}], " ", 
    RowBox[{"y", "[", "x", "]"}]}], "-", 
   RowBox[{"2", " ", "x", " ", 
    RowBox[{
     SuperscriptBox["y", "\[Prime]",
      MultilineFunction->None], "[", "x", "]"}]}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "-", 
      SuperscriptBox["x", "2"]}], ")"}], " ", 
    RowBox[{
     SuperscriptBox["y", "\[Prime]\[Prime]",
      MultilineFunction->None], "[", "x", "]"}]}]}], "\[Equal]", 
  "0"}]], "Output",
 CellChangeTimes->{3.8150483405175805`*^9, 3.816603303376525*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LegEq4", "=", 
  RowBox[{"LegEq", "/.", 
   RowBox[{"n", "\[Rule]", "4"}]}]}]], "Input",
 CellChangeTimes->{{3.815048350211729*^9, 3.8150483803954463`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"20", " ", 
    RowBox[{"y", "[", "x", "]"}]}], "-", 
   RowBox[{"2", " ", "x", " ", 
    RowBox[{
     SuperscriptBox["y", "\[Prime]",
      MultilineFunction->None], "[", "x", "]"}]}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "-", 
      SuperscriptBox["x", "2"]}], ")"}], " ", 
    RowBox[{
     SuperscriptBox["y", "\[Prime]\[Prime]",
      MultilineFunction->None], "[", "x", "]"}]}]}], "\[Equal]", 
  "0"}]], "Output",
 CellChangeTimes->{3.8150483841593313`*^9, 3.8166033034095144`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DSolve", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"LegEq4", ",", 
     RowBox[{
      RowBox[{"y", "[", "0", "]"}], "\[Equal]", 
      RowBox[{"3", "/", "8"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"y", "'"}], "[", "0", "]"}], "\[Equal]", "0"}]}], "}"}], ",", 
   RowBox[{"y", "[", "x", "]"}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.8150485055416956`*^9, 3.8150485640186825`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"y", "[", "x", "]"}], "\[Rule]", 
    RowBox[{
     FractionBox["1", "8"], " ", 
     RowBox[{"(", 
      RowBox[{"3", "-", 
       RowBox[{"30", " ", 
        SuperscriptBox["x", "2"]}], "+", 
       RowBox[{"35", " ", 
        SuperscriptBox["x", "4"]}]}], ")"}]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.8150485655767193`*^9, 3.8166033035752325`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DSolve", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"LegEq4", ",", 
     RowBox[{
      RowBox[{"y", "[", 
       RowBox[{"-", "1"}], "]"}], "\[Equal]", "1"}], ",", 
     RowBox[{
      RowBox[{"y", "[", "1", "]"}], "\[Equal]", "1"}]}], "}"}], ",", 
   RowBox[{"y", "[", "x", "]"}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.815048591383701*^9, 3.8150486331988344`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"y", "[", "x", "]"}], "\[Rule]", 
    RowBox[{
     FractionBox["1", "8"], " ", 
     RowBox[{"(", 
      RowBox[{"3", "-", 
       RowBox[{"30", " ", 
        SuperscriptBox["x", "2"]}], "+", 
       RowBox[{"35", " ", 
        SuperscriptBox["x", "4"]}]}], ")"}]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.815048609928982*^9, 3.815048635132279*^9}, 
   3.816603304013749*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ser", "=", 
  RowBox[{"Sum", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"a", "[", "m", "]"}], 
     RowBox[{"x", "^", "m"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"m", ",", "s", ",", 
      RowBox[{"s", "+", "2"}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.815048645730852*^9, 3.8150487035222845`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["x", "s"], " ", 
   RowBox[{"a", "[", "s", "]"}]}], "+", 
  RowBox[{
   SuperscriptBox["x", 
    RowBox[{"1", "+", "s"}]], " ", 
   RowBox[{"a", "[", 
    RowBox[{"1", "+", "s"}], "]"}]}], "+", 
  RowBox[{
   SuperscriptBox["x", 
    RowBox[{"2", "+", "s"}]], " ", 
   RowBox[{"a", "[", 
    RowBox[{"2", "+", "s"}], "]"}]}]}]], "Output",
 CellChangeTimes->{3.8150487045190873`*^9, 3.816603304052928*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{"x", "^", "2"}]}], ")"}], 
    RowBox[{"D", "[", 
     RowBox[{"ser", ",", "x", ",", "x"}], "]"}]}], "-", 
   RowBox[{"2", "x", " ", 
    RowBox[{"D", "[", 
     RowBox[{"ser", ",", "x"}], "]"}]}], "+", 
   RowBox[{"n", 
    RowBox[{"(", 
     RowBox[{"n", "+", "1"}], ")"}], "ser"}]}], "\[Equal]", "0"}]], "Input",
 CellChangeTimes->{{3.8150487261347957`*^9, 3.81504878932677*^9}, 
   3.8150490100953197`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "-", 
      SuperscriptBox["x", "2"]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "s"}], ")"}], " ", "s", " ", 
       SuperscriptBox["x", 
        RowBox[{
         RowBox[{"-", "2"}], "+", "s"}]], " ", 
       RowBox[{"a", "[", "s", "]"}]}], "+", 
      RowBox[{"s", " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", "s"}], ")"}], " ", 
       SuperscriptBox["x", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "s"}]], " ", 
       RowBox[{"a", "[", 
        RowBox[{"1", "+", "s"}], "]"}]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "+", "s"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"2", "+", "s"}], ")"}], " ", 
       SuperscriptBox["x", "s"], " ", 
       RowBox[{"a", "[", 
        RowBox[{"2", "+", "s"}], "]"}]}]}], ")"}]}], "-", 
   RowBox[{"2", " ", "x", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"s", " ", 
       SuperscriptBox["x", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "s"}]], " ", 
       RowBox[{"a", "[", "s", "]"}]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "+", "s"}], ")"}], " ", 
       SuperscriptBox["x", "s"], " ", 
       RowBox[{"a", "[", 
        RowBox[{"1", "+", "s"}], "]"}]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"2", "+", "s"}], ")"}], " ", 
       SuperscriptBox["x", 
        RowBox[{"1", "+", "s"}]], " ", 
       RowBox[{"a", "[", 
        RowBox[{"2", "+", "s"}], "]"}]}]}], ")"}]}], "+", 
   RowBox[{"n", " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", "n"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SuperscriptBox["x", "s"], " ", 
       RowBox[{"a", "[", "s", "]"}]}], "+", 
      RowBox[{
       SuperscriptBox["x", 
        RowBox[{"1", "+", "s"}]], " ", 
       RowBox[{"a", "[", 
        RowBox[{"1", "+", "s"}], "]"}]}], "+", 
      RowBox[{
       SuperscriptBox["x", 
        RowBox[{"2", "+", "s"}]], " ", 
       RowBox[{"a", "[", 
        RowBox[{"2", "+", "s"}], "]"}]}]}], ")"}]}]}], "\[Equal]", 
  "0"}]], "Output",
 CellChangeTimes->{3.8150487900505123`*^9, 3.8150490118981*^9, 
  3.816603304103448*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"temp", "=", 
  RowBox[{"Simplify", "[", "%", "]"}]}]], "Input",
 CellChangeTimes->{{3.8150487995707717`*^9, 3.815048807243088*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["x", "s"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"n", " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", "n"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"a", "[", "s", "]"}], "+", 
        RowBox[{"x", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"a", "[", 
            RowBox[{"1", "+", "s"}], "]"}], "+", 
           RowBox[{"x", " ", 
            RowBox[{"a", "[", 
             RowBox[{"2", "+", "s"}], "]"}]}]}], ")"}]}]}], ")"}]}], "-", 
     RowBox[{
      FractionBox["1", 
       SuperscriptBox["x", "2"]], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         SuperscriptBox["x", "2"]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "s"}], ")"}], " ", "s", " ", 
          RowBox[{"a", "[", "s", "]"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "+", "s"}], ")"}], " ", "x", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"s", " ", 
             RowBox[{"a", "[", 
              RowBox[{"1", "+", "s"}], "]"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"2", "+", "s"}], ")"}], " ", "x", " ", 
             RowBox[{"a", "[", 
              RowBox[{"2", "+", "s"}], "]"}]}]}], ")"}]}]}], ")"}]}]}], "-", 
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"s", " ", 
         RowBox[{"a", "[", "s", "]"}]}], "+", 
        RowBox[{"x", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "+", "s"}], ")"}], " ", 
            RowBox[{"a", "[", 
             RowBox[{"1", "+", "s"}], "]"}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"2", "+", "s"}], ")"}], " ", "x", " ", 
            RowBox[{"a", "[", 
             RowBox[{"2", "+", "s"}], "]"}]}]}], ")"}]}]}], ")"}]}]}], 
    ")"}]}], "\[Equal]", "0"}]], "Output",
 CellChangeTimes->{3.815048808160081*^9, 3.815049015195565*^9, 
  3.816603304761108*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"co", "=", 
  RowBox[{"Coefficient", "[", 
   RowBox[{
    RowBox[{"Expand", "[", 
     RowBox[{
      RowBox[{"x", "^", "2"}], 
      RowBox[{"temp", "[", 
       RowBox[{"[", 
        RowBox[{"1", ",", "2"}], "]"}], "]"}]}], "]"}], ",", 
    RowBox[{"x", "^", "2"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8150488722239*^9, 3.815048933014484*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"n", " ", 
   RowBox[{"a", "[", "s", "]"}]}], "+", 
  RowBox[{
   SuperscriptBox["n", "2"], " ", 
   RowBox[{"a", "[", "s", "]"}]}], "-", 
  RowBox[{"s", " ", 
   RowBox[{"a", "[", "s", "]"}]}], "-", 
  RowBox[{
   SuperscriptBox["s", "2"], " ", 
   RowBox[{"a", "[", "s", "]"}]}], "+", 
  RowBox[{"2", " ", 
   RowBox[{"a", "[", 
    RowBox[{"2", "+", "s"}], "]"}]}], "+", 
  RowBox[{"3", " ", "s", " ", 
   RowBox[{"a", "[", 
    RowBox[{"2", "+", "s"}], "]"}]}], "+", 
  RowBox[{
   SuperscriptBox["s", "2"], " ", 
   RowBox[{"a", "[", 
    RowBox[{"2", "+", "s"}], "]"}]}]}]], "Output",
 CellChangeTimes->{3.8150489335703106`*^9, 3.815049017595128*^9, 
  3.816603304806596*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{"co", "\[Equal]", "0"}], ",", 
   RowBox[{"a", "[", 
    RowBox[{"s", "+", "2"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8150490278526883`*^9, 3.815049042417449*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"a", "[", 
     RowBox[{"2", "+", "s"}], "]"}], "\[Rule]", 
    FractionBox[
     RowBox[{
      RowBox[{
       RowBox[{"-", "n"}], " ", 
       RowBox[{"a", "[", "s", "]"}]}], "-", 
      RowBox[{
       SuperscriptBox["n", "2"], " ", 
       RowBox[{"a", "[", "s", "]"}]}], "+", 
      RowBox[{"s", " ", 
       RowBox[{"a", "[", "s", "]"}]}], "+", 
      RowBox[{
       SuperscriptBox["s", "2"], " ", 
       RowBox[{"a", "[", "s", "]"}]}]}], 
     RowBox[{"2", "+", 
      RowBox[{"3", " ", "s"}], "+", 
      SuperscriptBox["s", "2"]}]]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.8150490453530846`*^9, 3.8150492415851855`*^9, 
  3.81660330484556*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"a", "[", 
   RowBox[{"s", "+", "2"}], "]"}], "==", 
  RowBox[{"Factor", "[", 
   RowBox[{"%", "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", "1", ",", "2"}], "]"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8150490522674694`*^9, 3.815049103661873*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"a", "[", 
   RowBox[{"2", "+", "s"}], "]"}], "\[Equal]", 
  FractionBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "n"}], "+", "s"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", "n", "+", "s"}], ")"}], " ", 
    RowBox[{"a", "[", "s", "]"}]}], 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "+", "s"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"2", "+", "s"}], ")"}]}]]}]], "Output",
 CellChangeTimes->{{3.8150490808274136`*^9, 3.815049104664035*^9}, 
   3.8150492442899103`*^9, 3.8166033048755054`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["5.4 Orthogonality, Fourier-Legendre Series", "Section",
 CellChangeTimes->{{3.8150492578477697`*^9, 3.815049272472309*^9}, {
  3.815049318198865*^9, 3.8150493309851265`*^9}, {3.816604041124195*^9, 
  3.816604041385872*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Integrate", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"LegendreP", "[", 
         RowBox[{"m", ",", "x"}], "]"}], 
        RowBox[{"LegendreP", "[", 
         RowBox[{"n", ",", "x"}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"m", ",", "0", ",", "n"}], "}"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "0", ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8150493744523993`*^9, 3.8150494652149677`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "2", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["2", "3"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["2", "5"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", 
     FractionBox["2", "7"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", 
     FractionBox["2", "9"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
     FractionBox["2", "11"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
     FractionBox["2", "13"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
     FractionBox["2", "15"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0",
      ",", 
     FractionBox["2", "17"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0",
      ",", "0", ",", 
     FractionBox["2", "19"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0",
      ",", "0", ",", "0", ",", 
     FractionBox["2", "21"]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.81504946738759*^9, 3.8166033065471125`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", "=", 
  RowBox[{"Sin", "[", 
   RowBox[{"Pi", " ", "x"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.81504947829722*^9, 3.815049483826309*^9}}],

Cell[BoxData[
 RowBox[{"Sin", "[", 
  RowBox[{"\[Pi]", " ", "x"}], "]"}]], "Output",
 CellChangeTimes->{3.815049484417741*^9, 3.8166033066858635`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"S", "=", 
  RowBox[{"Sum", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", "m"}], "+", "1"}], ")"}], "/", "2"}], 
     RowBox[{"Integrate", "[", 
      RowBox[{
       RowBox[{"f", " ", 
        RowBox[{"LegendreP", "[", 
         RowBox[{"m", ",", "x"}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}], 
     RowBox[{"\"\<LegendreP\>\"", "[", 
      RowBox[{"m", ",", "x"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"m", ",", "1", ",", "5"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8150494902421713`*^9, 3.815049580573682*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"3", " ", 
    RowBox[{"\<\"LegendreP\"\>", "[", 
     RowBox[{"1", ",", "x"}], "]"}]}], "\[Pi]"], "+", 
  FractionBox[
   RowBox[{"7", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "15"}], "+", 
      SuperscriptBox["\[Pi]", "2"]}], ")"}], " ", 
    RowBox[{"\<\"LegendreP\"\>", "[", 
     RowBox[{"3", ",", "x"}], "]"}]}], 
   SuperscriptBox["\[Pi]", "3"]], "+", 
  FractionBox[
   RowBox[{"11", " ", 
    RowBox[{"(", 
     RowBox[{"945", "-", 
      RowBox[{"105", " ", 
       SuperscriptBox["\[Pi]", "2"]}], "+", 
      SuperscriptBox["\[Pi]", "4"]}], ")"}], " ", 
    RowBox[{"\<\"LegendreP\"\>", "[", 
     RowBox[{"5", ",", "x"}], "]"}]}], 
   SuperscriptBox["\[Pi]", "5"]]}]], "Output",
 CellChangeTimes->{3.8150495828134146`*^9, 3.816603309616198*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"S1", "=", 
  RowBox[{"N", "[", "%", "]"}]}]], "Input",
 CellChangeTimes->{{3.8150495901260457`*^9, 3.8150495941334915`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"0.954929658551372`", " ", 
   RowBox[{"\<\"LegendreP\"\>", "[", 
    RowBox[{"1.`", ",", "x"}], "]"}]}], "-", 
  RowBox[{"1.158241912199412`", " ", 
   RowBox[{"\<\"LegendreP\"\>", "[", 
    RowBox[{"3.`", ",", "x"}], "]"}]}], "+", 
  RowBox[{"0.2192895472162324`", " ", 
   RowBox[{"\<\"LegendreP\"\>", "[", 
    RowBox[{"5.`", ",", "x"}], "]"}]}]}]], "Output",
 CellChangeTimes->{3.815049594756382*^9, 3.816603309738181*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"coeffs", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"S1", "[", 
     RowBox[{"[", 
      RowBox[{"n", ",", "1"}], "]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "1", ",", "3"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.815049613966529*^9, 3.8150496428441753`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.954929658551372`", ",", 
   RowBox[{"-", "1.158241912199412`"}], ",", "0.2192895472162324`"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.8150496438809347`*^9, 3.816603309778005*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"terms", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"coeffs", "[", 
      RowBox[{"[", "p", "]"}], "]"}], 
     RowBox[{"LegendreP", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"2", "p"}], "-", "1"}], ",", "x"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"p", ",", "1", ",", "3"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.815049648706191*^9, 3.815049697298173*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"0.954929658551372`", " ", "x"}], ",", 
   RowBox[{
    RowBox[{"-", "0.579120956099706`"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "3"}], " ", "x"}], "+", 
      RowBox[{"5", " ", 
       SuperscriptBox["x", "3"]}]}], ")"}]}], ",", 
   RowBox[{"0.02741119340202905`", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"15", " ", "x"}], "-", 
      RowBox[{"70", " ", 
       SuperscriptBox["x", "3"]}], "+", 
      RowBox[{"63", " ", 
       SuperscriptBox["x", "5"]}]}], ")"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.8150496999153833`*^9, 3.816603309830854*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"S2", "=", 
  RowBox[{
   RowBox[{"terms", "[", 
    RowBox[{"[", "1", "]"}], "]"}], "+", 
   RowBox[{"terms", "[", 
    RowBox[{"[", "2", "]"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.815049705364889*^9, 3.8150497242511535`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"0.954929658551372`", " ", "x"}], "-", 
  RowBox[{"0.579120956099706`", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "3"}], " ", "x"}], "+", 
     RowBox[{"5", " ", 
      SuperscriptBox["x", "3"]}]}], ")"}]}]}]], "Output",
 CellChangeTimes->{3.815049726249039*^9, 3.816603309859069*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Expand", "[", "S2", "]"}]], "Input",
 CellChangeTimes->{{3.8150497307181263`*^9, 3.815049736383958*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"2.69229252685049`", " ", "x"}], "-", 
  RowBox[{"2.8956047804985303`", " ", 
   SuperscriptBox["x", "3"]}]}]], "Output",
 CellChangeTimes->{3.815049737367352*^9, 3.8166033098960114`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"f", ",", "S2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"x", ",", "y"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.815049743428383*^9, 3.815049771495721*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwtmXk0VP//x4lKJbTQgooibUqbonq1ENlCUlH2fFKSNUJC2iV7KiFSQki2
hBehVCj7PnNnjH1mLqGQ6vf+nvP7a87jzH3fc+5reT6f91w5m0vGZ2cICAhk
CgoI/O9XGaQG//2jMTjmcG33joCSS5Orb09O0fgyr2VUJsISs96qKI6O0xj+
KEejMfwSblXSt+kdolEprcw7Mfwaqi4Iaq9uofFuQEL1sfAHuL975MujTBpv
aM43OR4Wj8a3atK2WdLojlPFV+5noue3oIv/lfDRUPKVhqwfYmPjvMEyax4G
FxVrztX8jrKllxarynCxzLN8e1FbC+ZeqJgp3jWI29NWfNPmMtAqWGW4LXAA
h3rbTlWKdONEuM9thH5UnJ0qqLOgF5PEGMtiWL34z+3TjrSJfgw3h9m7O3vR
+3LB6h1CAxiYkjDW1tyL+f7zZQvmD6DNQdtv0tW92Ga1XfGV/ADKX+4Pis/r
xSMDUgdU9QYwsesH/eJeL/73X+JiwbgBTEif/TF3Ry+atLV4qO4ZxFgdFdeG
Oz2YLdVf+9BmCNfM0/nyPagHS/+Zr3x3fgjTvtrI117rwRi7iJoG1yEs1Ius
r/LoQdS9rD4eOIRtBr+2llj3oLrBXcX+xCGUOlY8mrK7B/NsFe4Fs4bwgfkR
D78BDq6MNrn44RQXpWRsanw4HEwvm/F5njUX4zq9Fa4wOWjc2X7Y4BwXM86k
N7k1cfBKg1BiyWUuVluK73Qo42BktmuyXgQXReyafh57xME6DTErma9cDHS0
9lp3hIPBx/Gn3w4eMkIsYgsPcdDr5+q7bnt4qPbGvFR3Hwf95LdUWx7i4Y/x
4yJO2zi47ZmVyUojHlpf04nJluXg3sSwfWqOPNwfvq1A/Uc3Vu7yrelK4OHf
/JkT+k+6UeqCGq9WiI9m7TNkmFHdaMtpyc6dw8e86X/gHNqNIXb53AhxPjod
mLoVfqMb+eZheTul+dj1hb+k5VI3WuTcc5fcyseirhZVK41u7C133rLTgo8+
Qqmerjw2OgU6MCczyflHFrOs+tnYnS1j653DR5vNi6L0u9noo1pzZLSAjzrm
vtlKbWwMiy1Qry3j49K3BjxGBblea3WEUgMfc2xGbXRj2Tj/T52c0xgfUyZe
jux6yEa5x44m7hN8fBJy2l8xnI1VBevaXKf5GFhY+VTwNrkfLGk6KUyj0cKY
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
te//APbp/A4=
       "]]},
     Annotation[#, "Charting`Private`Tag$22278#1"]& ], 
    TagBox[
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwtmXk8VP/3x7XRx0doIYoWUSqVLVtxVCpLqSRKki1JPipJQpEkJUuipJKQ
lFSUrDnJLlSyr3NnxjBjZq5QIeX3/j4ev7/m8Xzccx/3vs95nfM687jLnU9Z
HZsuIiJSN01E5H+/60GWNzVF4+vr70qWidbCqfEV4eMTNCrH3VuDkTXw+o3G
ypEfNG7WLXaJk6kBTdXdzpxBGtN6LBezVKpBd25oR10rjcFfol9Km1WCMet7
7b1XNOZvzO5Ku/cRrK7VZ2odpTHca2Q5r/IdnP8c+t/xEiEmG4p99dhyG5ua
/uWVOgnQcTy+JuxKPSp+OLVAV4GP4ZZOT1+9b8fck+WzpLp5qMM8fS/4MoV6
y7w00lt5KG0+3U4sjsLCpoVHDBt5mNokqAxOp/CD4cm3J6t4uOPirdcWnyis
lZrnUp3Nw+FdRpJbFzCR8eboh8thPLxyvGrXm1Qmik9O+I9u4OGWBJfUwnwW
Ot7UGGoP4eJse2XFkaI+9H8bG1Z/kYtUmVPQxto+jO8aUSj142JM/6tOz7Y+
rFV7Z5bhRa5T+hGFo32oVW+Q6mvHxVBFlRmNahwUlTSxma/JxeQIexhJ5OCL
aJviXdQArpT30pA81Y+VeXlWxl0DOOd5nPRoQD9SvXJcrdYBDP3+dMPn8H6U
Ve+UWVw/gA4r9uocS+nHoC9HT3HzB3BbVFWKdHM/Ws09oRQWM4Beh20oN70B
HIsNCEcYQKdn8wyX/RrAfoVS3g6DAXRUkGh/NoOLLemiuxu0B3BEUn7VKmku
vim8Nbd7NXke3mBPqnLRi/k0cWL+AK4+nqgpQ87B0mh6sXGgH1USvl3/XcDF
hi9qXzNj+lGheORuzmkeFtt5a2lF9OMd06i2vAAeZrLz4guv9uO2wpXK2STP
4WNb7Wr8+5F3z6s/6AEPty07xOK49qO9yyrPKFKn/FNXfyzX70cTzpOuM4sH
MVWyRz6B4mBkv0L9scJBjD0MYvpdHKy2bLStKBvEkIzk0fYWDjrsbMiWrx9E
560unxfXcbD56JKe5N5BVPIdCH30joPu1iVOq2fyMaV7mE6PIHkP+umkYsHH
5BdilbkbOXgyYO7Lzi98jBl3f2OjzsHBzg/6HW18DN5Rm/xrDQdPH+8YqGfw
0ZFxM0B/GQc/eH8pihvi49IF8zTei3OwK/j4pWQpASYFKDwo7+3D5y8NynIs
BPjAXMP72/U+NBcYvWkqEqDyv+a1X0L7UHlV7i3xjwLM/OSs1BDUh1NlLdt1
qwVYuCuusfpcH+a7PdE91yTAdstfmiVOfdglpXHxCl+Asvvfj2To96EELeY1
uEiI0YfNzl3isjHvC6vl12khyio41wew2XjCbUukhK8Qk7r8VS70srHRIe6I
XIAQXx550Xy2mU10lmotc1WIdUeldE6UslFYo9qWliDE2a7NP/ffY6PBf43z
FEhfhng6+a02Y2Poo287/KfT2BPl8KBwGxv/RkiI1YnSaJB9+IOFERurFdc/
nv8vjcM/Dsz20mJj6Zk5XqHzaXQKMk/IUWSjeZLnO/4KGo1jtfI3DbNwldJa
l46tND54q95Vx2dh+dCZ2RE7aBxrWSfi0M9Cb7c1bzTMyRxarGoa3MVCr2uN
K5z20bj0iUJbeSULec4bSkzJHPmbN2ts930WOifc0zO8QKNdx3SF3ngWSh67
FLAnkMZ3k1NwOoaF4R1HaNsgGr22TFyLvcpCaxHax+Iqjd21woWtp1h4dOL6
tvcxNOoJBje5e5D4L2ftLt+mMU6Ke3TclYUOXxTyN92hcZc16+liOxYGR0ZZ
3b5PY3F3q66jCQtffFi2t+EJjXIizYe/G7HQ/KkW1ySDRh+lxqAQfRb66tX2
ZD+nUe14XVXaehYyE115XmQuPhj6YMuVY6H8ikufz+XTGDDj+XlvARPPHvqo
WVBN3veeg6jjABMnZOvcz9fS6LxhfvxuFhOHxlQc1tXRaH44MEe1nYnm8k+i
gz+T57+xFPSUM3HXgXqL8mYaJcxmBNYhE8fRutCYzOWpnjzxwkIm7ljHHH/b
RiNHfLlq/GsmNv3ljoZ20vjWecTZ4gETTcWey5UxaMwYe/pd7y4Tr0g77P5L
0Xg/yj54ZSwTwyfqXTVYNIYUVjycFk7mpmOxSVAfjb57/dXoECZK78+Ym8ih
0YOzvqjrIhPHZNbWvuincd+8hLa8s0y8NPFZtJBLo0nGruNPvJiYfvto9Fse
yb/RtJ+xJ5hYNego8ZT4yjIPj/leR5k4s/o2/6yARmHpZktlCyZOFby7kjVE
I9P2e9fcHUz0b/oiOP6dxmbBk5NTxkyUuznPYdEwqY+81PUOHXK+0v5Dx0eI
nl6VLazWIPF5A9xpo8S3tvul56ox0V6fHx5HOOIMVRajRHzhS/PkY+Jzl8Tu
WF1SZKKUw+oWhZ80ej80p07KMfGmm11VNGE3ralTh+YzcUn6o8YJwnY1b/7u
kGTijbYNE0d+0Wh51D1S+x8mJhRsMS4gvOWHgoLSTJKvWRJPJcZo1I74+lxq
isJ03wr1g4RVl4fp/xmnULs2rfc+YYU8g2reKIUXihi5rYSldtM2bTTxPdHX
uf+O0zidldpXwSPsZkbpEv7pd9DnTR+FcJdlYE+YJzlnxmMGhfMP5Jb7Ee5O
K70V1Umh3+EfwZGEvxj4LgtsIc9z6ziTSLj8y5pXJ75SKKVx/94jwvluvYa2
dcQ3z3tNPCCcOXm7zqSKwnU/b9yJJZwUa3pY8yOFIu6rTgcTjlX9w136nsIZ
1/2vuxEOK8n2m5NPrssUsU0I+1u7if3OobCoamnoYsJevEV3BrIonLDvPcEj
53MK/qzckkFhSIx6QjZhm/ZHRt2pFEZHmpzwJmyuefogO4nCOAnZprWEIcLY
e/AehSZ/Czu6SX612dI3h8keYL3fLCic8GpD6sl4NIW+ky1lawkvuZONIhEU
2vMuPK8i9ZptajUiSfaIXba2blxS7z/JSnNkAyksyHsPpwgPjw+vVDxP3nfp
rTIB0Udn5m27tf9RaF7T0thE9PRlpquPpjuFRnwfZ0PC5Ue0o/RdKIxvb01L
Ivp7KdVcuvMQhbot28wtiD5T3Z90WlpTyKv0y75D9JtQeu7HgT0UNpjUfuug
abx8Vna163YKx54vstotJP1Ux9l60pjCFJ/tOQFE/x4qefbem8j7RrGbU/g0
WrfaxgRrUPifT+upTtI/Zuqqz6+pUWihZMvjk/4yuj5WFrWKwh/MFPVfA0Rf
m+79eqBIYfDRn6o/SX/+TupwKPiHwgX3RqYnMWkc+vXc78NMCqdrGMj6kn5n
7w2IrZpioK3T5KydZB40TFeobP7BQGlLiyvfumlMcTuybphioE3mhQ13yTy5
i+t2jncxUMduhpMOmTc35f46irQxcMmq/KAGMo/O1SbFSTYwsL574ia3kUbT
9YzfawoZeHCexfJPZJ4ZXnsto5nLwHmz4n5qfKJRkxG8Qf81A73u59XcqqFx
cexyl53pDOw5xzmzuZLMgx/OtS6xDDTZaDbTCGmMf9+X8MCDgcYBB2aOkvnq
4Jd4SfcYA+Wk7FUwi5xfa49r41EG1qWWrAvJpLEwI3/D7AMMDGuBKTqd+Nvt
iMqzwMD0mFra4yGNqzw0Rs0XMNC18eNhRjjJjzKnvU+SgR1GBpprw2gs6E3E
4H8YaFCVtcjrCjn/89my//3pRX9NDbWuizQygl9uM2nsxUMpWx4c8ibzY91E
0nBAL7o6m8/qOkTjzFQXD9Uzveh2UHvTMxsa78jVb3Rw60Wnq4VZXvtpLJqR
XFeztxdFI7btZ+4i8R3bJ5JVyP0+DJ4nkPiwWwf2fO7BzQZij+cSfy3sVZV4
odSDQ+4LPmeyhRi4eVpWolwPTi68K1nPEKLhvfbd1yV78GZER3N/lxA/WN2I
dpvoxvW/LGaKNwuxqmJw3vLGbpR28lacViHEpsyX8ncud6NN6D2V4lQhCs9r
rwpmdOGkevYbH3shvm6SqPZq6cLxOVUKn2yFeEajz/1IXRdKHO+1WrxfiKO8
+OcG+V3oWY7rn5kJ8feRX+t+RHdhxos2yl+H7Bsmhdoe0IUKerqLxiSFuELa
eKt1UicOO4tNuJN9KUqd8ve43YmeCpwT4bkCHNsb8iY4vBOb4rOYya8EWHer
XDnLuxNNvf6MF6cK0Ge+mZjozk4sMfoskRIhwEpZq7o8ugOvPXmlpmQnQA9F
V5vFWzpQq3rW4znDfMxZE+7BZLVhp6V8wVpJss99dSxY296Gje6jHpWifLx5
Xn/2uYY2FB23lD48NYjHynlPxAra0H7Rd/AeGkQ5h92UWlQbGrylAw42DuLF
W/MOntdrwyTG7Fei8YNoOvZgu0RkK3r9hm2TMoPYW5G9TEenBV9ouav3iPKw
Ty1eE999w0BpxhyXpn6ce+mZzvppX9H8Jv3PwlV9qKZDqz0ZqUNbo7SjCz2I
D5sIvhT4VSHnpo37Ip8elLF+GXNo4UeUc90iea2pFXN+VkhVKxdi/P3gDi23
r/iksy+SG/oSY3slemJ8y/HIPoW3nS5x6CP6WT/nVCYWiAc0fzx3G4SPb4rc
3vAcNjKnLbl88BVkHirRtpxRASuGisYNPhaALX2BmrvyK5ilttdbHvwIYQH3
t29Z2Qbbd8+b8SO3Ct5WXaq89L4Hoo+2Bqvn1cHgrKvjUqZMqLJUnLN33lc4
fGpqkKHXB4LlMpcaE79BSolCqmFhP5zzWesULdsCDSdlNxbyuSArThfbLG+B
VI7QI/0HF/If5cgtUWuBoal2tci/XJis1f/yYksLHPQxNTeX5kHIclOo9WyB
oxqrH4do8SCqwVVxVlkL6LhKe3L9eJCumtTuf6oVXvJVewOneNDaJW3lVt0G
xlcVglf+HgTziGNtPo1tkCL7qnLZdD4U6xc6XOlqgzc12wpl/uFD8h2Xk8lD
bTD8pvERLcsH973vQjvk2sHDe5mqiyYfJsoO51meaIfpLubmO935oJCZrqAr
3gE6ZyyLRj/zIerQ75TtCzqAZ6LnY9zCB5HZe1dbL+mADk3F+LAuPrBdxzee
0eyAC4G6otO5fMhasmtPpl0HqCfvPJE7TQBGsd8vL83sAMsfaXskNAXgeGFz
v9iuTnivXXvlZJQA1rhWNwttOmHAQrTnfJwARiyty5udOkFH+K/1xUQBhCl7
Pk493wm69efCz6YL4MXn+4chtRNCy75WSJQIYFzl92ffiU7QE5NfOzQogNjG
gvy+jC74kHjQ5fhWIdi/3/607k0XcLIKWbd2CkEl42v8mxLC83+uyt0lhPyL
XO/LTV3g8XViqM9GCD2q8usURbrBgDLTG/IQwpogv8fWtt3wo8ZT+8ktIZSt
1b1RNqsHQk7pp19sF4LDBuvU71I9YLnHO+1stxDGNM8UL13UA5OyWmIulBDU
DDKFAet7wF7v0Pd1XCHEmS7dr23bA9OLb8n7jAnB7ZiYwpOMHrCKvFKOMjSI
nFDe+C2nB5SuFP81l6ch0XOL5TSiyxO1ry98VqCh4WxA8JGvPVC7qk21fAUN
uiE0W2aiB57LBq6z16Bh9qPWrDCLXtCLGOgwsaAhJWW08u2BXnisfnCBiyUN
m9PnMphHe0Hx1jsP/300nM6ymAc+vZB7ZNexOFsa2ovQ99eDXtBcorP/nAsN
z9uegruwFxqmNypwL9Cwvav84J2xXvD8/lIuIZCGIXpIz3kaA3JnvpxjHETD
jZE5VjH/MiDv7NIO/1AaSiZ2hvKXMmCT5+qS+1E0rPyneCDNlAHZkc/ehz+m
YbhqvUfKbgZUBJbOK0ol8WGPBx9ZMaBG+Wwo5wkNNjOvCRPtGWBzVztX9TkN
V6f2jcacZkBh3cq5djk07C0pPxd1jgHuZjOkD7ylQeGi7q8IfwZc8rq/yOwd
DW8nFCbCQhmQ9CzaXKGQBvaP/qnABAY0PrvU4VVKw+u3dpf9HzKAvWHDpEYZ
DYFn66f7pTCgbfd7OWE5DQu+58w6+4IBCmYzDPZV07CNf/HfEx8YYDJjHfNj
A8kvc/7CAwMMsM/LGtrXQYPX47AEKwEDYsu0y1I7aTBwHJffO8yAezu6vYRd
NDR29yhYTDKgO2OFmVcvDdPanyltkabAOS2wYSGbhrq7CmlGMhRYrxPdoN5H
Q4JNtMrmRRTEK3yz3cKhQb3JR1VXmYJclerx3QM0OH6G9ev0KEjKkDGR5tOg
FpXzao0hBYvWZGcKCY/tUtFQ3UqB/bSc2goBDdG14tordlEwkOGz0oGmwe76
xdxl+yhY8OOvw9IhUh/TIZ0lNhR8iAra0U64pKJZX96R3J8yKq87TOobalok
e4yC1QnZ0zoJ22wr2rzAgwLtbz+iz4/QIPyQDFI+FJRJP7mbOEpDYdD8UokL
FKhEt0ks/0FDmFHYVvFLFASbKy9LJqxYfHL7rHAKOKfi5cJ/knzLT0x4RVLQ
uuVk6DhhCd/w122xFORwQ3Scf9Ew85us29YECoZurlX7SHhyw5PFLx5S8O++
t87yYzSM3tT6KpNKgd9hz9bjhAe5pWFBGRS8/ppyLYswc8fezdwsCtTb00+T
fR06Unu+W72hwPNuVfSScVIfkf+eFudT0KVhzTQjXHPkt/3KEgp+198/5kn4
Q+H1eTFlFBjdEsiGEc5fKFc9Xk2B0uOEkTuEX/ukX3RpoEBhBX8sifDTr9pa
9d8oSNusq/w/TlpfNqDTTsHG+TXecYTvROxLSu6hwLRuiLpMOGqgd784m4K9
kX+8yP8PuLrd6x8fLgW1AUYLtxIOTJks6RZSsP799LYFhH2mbvjsHKVg1Pfe
yx5yHk97+TXZ4xTENuxLeETYpeBp76IpCkK5/rG2hO1kdeJDZzLBWOCSKErY
6my5ufAfJsDU4awXJJ/mX6xEDkoxYcIkp9qM8JZ1VG7pAibwWLncblIPvRun
Tq5dxISr097NOUFYvf/PsvilTNheNk1zkNRT1eRmy19lJqRYDux3Jbz08aKb
7muYsKAm/3QT0YPkYd1fmzYyQWG5dcw9ohfR/IoXTwxIvNn7SCHR058F1s5S
xkxY8mtXgAFhfsPpeqY5E3p8FRTyiB7Za6dCdu1lwry4iZp+ot/O8Ei9dwdI
fN2mI1KEa7c+T73uyIQ0JeXV24jePz7SOzRyjAlzbp6w30P6oWCyUvLISSao
p1t6WA3SkPGOdUHdlwlhIdr/GnJpuLZGcW9rBBMejMrKppF+vHQtc9aWW0yY
/mfaNzcWDb5s/aLnd5jApmYdWMakwS3JZuWlx+R6a9zD86SfTebFTCrnMaHh
2vkf79rJvD21JCeqmAmmkV+jN7TRoFX34vhYKRNE7r9vT2qhQSmspvFTHRMW
HQs/4/SNzP+J6c+8mUz4WxdzzLeO9DerfSSonwmK7zJvl9US/dW9NorkM6Gj
SiN2dg0NwY8cmp7+ZMIha/x1oYKGKZPCqS5xFuTcf7Rq4j0Nf6PP2OzUYkHL
xjPqXlk0OFwwfWytx4J1r4sddDNJfzsv5TsZsqBD6qzBWAY578b6y4E7WeDo
5fjdMY3Uo0M1K/swC1w1/yxtSCT9psKYoRDKAmvVTXdkwmiwl8qzXH2dBQ5T
OXEHr9BQPBZ5TyeKBb5+8Yq3g4leP23asC+BBX+ho0LoT8Pv03ftwl6wIPml
kpbxKRomiiyzh5pYsMM+846ZDQ2/9r13qFBhQ+D1Sxr9ijSEtL/qNlrLhgJf
oVYF8UNJpxT7fHU2GEe1jCYQv1x5+ppd5iY2iMTy05fPocE6ap/NrX1scNxu
eCnvtxBe1/btPnKRDY0ruq4Ptwhhs1VbXUsIGzwrSlTWNgqhqr3WYm84G0oH
ovYfqif+P/DKbNttNviKNx+6UyYECTH/7aufsUFuvmhZ7CshnNgmafijiQ1e
09wSYq8KYbRWpNirgw03GqRnrQgWQrDViMFALxsafJa0ZvgLIcGpTa+Tx4b8
FEiOOyWEyqAU7VKRPljane7HPygEpWIdtUi1PvCIO9uYuFoIndpHF6uE9kGj
pX1Wz0cBuI1vlLp6vY/sm6ylOsUCGHovMaMvqg+Y3/6ZeSVXADN3FvLS7vXB
sz0Zsn+eCmD9IZlC5Vd9oK51crH3TQEEX/x0ULmjD9ZQAusj+wWwslL3zgp1
DlyOkV64sp0Pr29I3riykQPMp2UpK7/ywWBP30WWAQciPKstFGr4sKct9ljq
dg5kORgOcvL54McTaK84zAGdyLmy43f58Eky7ZtSGAeWmZvWS1rz4bSt9Fyl
Lg4Y/ZbbJygbBOeMDYkqFAe+tMHs9UWDcGDccsVqDgdif5v+cc0ZBIP7kRvV
hzhQu9cnITd5EGb1itsZzeyHWb8tbanAQUh0m5Vqp9YPq23myTlpDUL5uQnt
24H90OpSmjWcwIN3lfIldy73g9nYtcmfUTx4tlB/Z2IYuf/bR5PvoWSfLjh/
6HFMP3jeFyuoOs2DQ39GL75K6wdRfcHo7508EIbSlZ/q+qH95crOoFEuyMex
D85UHID60q0nONu5oHdlqayP0gBcqGk9k6PPBRtvu2+sVQPgmQmO3uu4ELv3
y+4yzQGwPpvMql/ABYk5xVtDTAfAdec+vRHmAPy9eltNxGcAPFJr3o0GDgD7
/FaRydoB6DBmDuPTfnh5OPnpiB8XBnBxSU9rH2i3rpgQvcSFDc91fG/X9EGR
1dNdi65wYblQTNywqA+qzV5+N47kwpVfgiKvpD5g6RZvinrMhTzIFN/l2gdy
C9o+q9Zy4e7ymS58ARtC6qTGjizmwYjY7/Nvx1hgaxhkWv2eB9wd9uN9gxRk
O/ynZDA5CNobc3e4FnfAmPi2GQUHBDBJQ3m/UwNYfd2ko5ggBMen99Vf7kwH
8U3/lhY/FMIHtYBzf73SoDStw8I+lej+YgN/Z3wKqPtdcLr/UgjG8wNcIt4/
BMmleTflK0h8OFP7YXwk1HhqsmSGhSDiLl758HcUGs9eHSO5i/iI0rn90cff
4NiZsUUvyV7q13O0LsT1Lb7qrHqym+yl7mH2ryedcnHJK7eim85kr5kvsyjU
IQ8nD6RxxMle+iVguxz7SBHmpS41FEsne9DiTuHfwlL0mkNXpWf+zycFmdmG
H3Hl+RKrHdlkT254cDTjw0eMMz/ifrWYhjjOvE6nqjL0/p54ewaZw6c1tvqI
tlXgmsMeS1LJ3H4RK6PXYV+JVLn+s609ZC85KLl/mKrEvQltJZeJb3TVvS2h
+VU4e3qG2XLiQ9UdoauavasRT55v+kB8b7Y4Lpwaq0bf5h1HHSeIj133uf9f
UA3+//dK+P/vlfh/7kEZ3w==
       "]]},
     Annotation[#, "Charting`Private`Tag$22278#2"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["x", TraditionalForm], 
    FormBox["y", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-1, 1}, {-0.9999998782112116, 0.9999998592131705}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8150497722938824`*^9, 3.816603310025377*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["5.5 Frobenius Method", "Section",
 CellChangeTimes->{{3.8150497820509586`*^9, 3.8150497927789946`*^9}}],

Cell[BoxData[
 RowBox[{"Clear", "[", 
  RowBox[{"a", ",", "c", ",", "m", ",", "s", ",", "y"}], "]"}]], "Input",
 CellChangeTimes->{{3.815049802794032*^9, 3.815049815476322*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ode1", "=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"x", "^", "2"}], 
     RowBox[{
      RowBox[{"y", "''"}], "[", "x", "]"}]}], "+", 
    RowBox[{"b", " ", "x", " ", 
     RowBox[{
      RowBox[{"y", "'"}], "[", "x", "]"}]}], "+", 
    RowBox[{"c", " ", 
     RowBox[{"y", "[", "x", "]"}]}]}], "\[Equal]", "0"}]}]], "Input",
 CellChangeTimes->{{3.8150498224297047`*^9, 3.8150498636934853`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"c", " ", 
    RowBox[{"y", "[", "x", "]"}]}], "+", 
   RowBox[{"b", " ", "x", " ", 
    RowBox[{
     SuperscriptBox["y", "\[Prime]",
      MultilineFunction->None], "[", "x", "]"}]}], "+", 
   RowBox[{
    SuperscriptBox["x", "2"], " ", 
    RowBox[{
     SuperscriptBox["y", "\[Prime]\[Prime]",
      MultilineFunction->None], "[", "x", "]"}]}]}], "\[Equal]", 
  "0"}]], "Output",
 CellChangeTimes->{3.815049864610587*^9, 3.8166033101045756`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DSolve", "[", 
  RowBox[{"ode1", ",", 
   RowBox[{"y", "[", "x", "]"}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.815049875300626*^9, 3.815049887236625*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"y", "[", "x", "]"}], "\[Rule]", 
    RowBox[{
     RowBox[{
      SuperscriptBox["x", 
       RowBox[{
        FractionBox["1", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           FractionBox[
            RowBox[{
             RowBox[{"-", "1"}], "+", "b"}], 
            SqrtBox["c"]]}], "-", 
          FractionBox[
           SqrtBox[
            RowBox[{"1", "-", 
             RowBox[{"2", " ", "b"}], "+", 
             SuperscriptBox["b", "2"], "-", 
             RowBox[{"4", " ", "c"}]}]], 
           SqrtBox["c"]]}], ")"}], " ", 
        SqrtBox["c"]}]], " ", 
      RowBox[{"C", "[", "1", "]"}]}], "+", 
     RowBox[{
      SuperscriptBox["x", 
       RowBox[{
        FractionBox["1", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           FractionBox[
            RowBox[{
             RowBox[{"-", "1"}], "+", "b"}], 
            SqrtBox["c"]]}], "+", 
          FractionBox[
           SqrtBox[
            RowBox[{"1", "-", 
             RowBox[{"2", " ", "b"}], "+", 
             SuperscriptBox["b", "2"], "-", 
             RowBox[{"4", " ", "c"}]}]], 
           SqrtBox["c"]]}], ")"}], " ", 
        SqrtBox["c"]}]], " ", 
      RowBox[{"C", "[", "2", "]"}]}]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.8150498882702065`*^9, 3.8166033102409267`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ode2", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"x", 
     RowBox[{"(", 
      RowBox[{"x", "-", "1"}], ")"}], 
     RowBox[{
      RowBox[{"y", "''"}], "[", "x", "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"3", "x"}], "-", "1"}], ")"}], 
     RowBox[{
      RowBox[{"y", "'"}], "[", "x", "]"}]}], "+", 
    RowBox[{"y", "[", "x", "]"}]}], "\[Equal]", "0"}]}]], "Input",
 CellChangeTimes->{{3.815049903194393*^9, 3.8150499457834635`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"y", "[", "x", "]"}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      RowBox[{"3", " ", "x"}]}], ")"}], " ", 
    RowBox[{
     SuperscriptBox["y", "\[Prime]",
      MultilineFunction->None], "[", "x", "]"}]}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "x"}], ")"}], " ", "x", " ", 
    RowBox[{
     SuperscriptBox["y", "\[Prime]\[Prime]",
      MultilineFunction->None], "[", "x", "]"}]}]}], "\[Equal]", 
  "0"}]], "Output",
 CellChangeTimes->{3.8150499464310465`*^9, 3.816603310418887*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DSolve", "[", 
  RowBox[{"ode2", ",", 
   RowBox[{"y", "[", "x", "]"}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.8150499527255898`*^9, 3.815049967172391*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"y", "[", "x", "]"}], "\[Rule]", 
    RowBox[{
     FractionBox[
      RowBox[{"C", "[", "1", "]"}], 
      RowBox[{"1", "-", "x"}]], "-", 
     FractionBox[
      RowBox[{
       RowBox[{"C", "[", "2", "]"}], " ", 
       RowBox[{"Log", "[", "x", "]"}]}], 
      RowBox[{
       RowBox[{"-", "1"}], "+", "x"}]]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.8150499682808747`*^9, 3.8166033106016064`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.815049974166402*^9, 3.8150499790122457`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"y", "[", "x", "]"}], "\[Rule]", 
    FractionBox[
     RowBox[{
      RowBox[{"C", "[", "1", "]"}], "+", 
      RowBox[{
       RowBox[{"C", "[", "2", "]"}], " ", 
       RowBox[{"Log", "[", "x", "]"}]}]}], 
     RowBox[{"1", "-", "x"}]]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.815049979748203*^9, 3.8166033108080845`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ser", "=", 
  RowBox[{"Sum", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"a", "[", "m", "]"}], 
     RowBox[{"x", "^", "m"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"m", ",", "s", ",", 
      RowBox[{"s", "+", "2"}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.815049985194425*^9, 3.8150500187842784`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["x", "s"], " ", 
   RowBox[{"a", "[", "s", "]"}]}], "+", 
  RowBox[{
   SuperscriptBox["x", 
    RowBox[{"1", "+", "s"}]], " ", 
   RowBox[{"a", "[", 
    RowBox[{"1", "+", "s"}], "]"}]}], "+", 
  RowBox[{
   SuperscriptBox["x", 
    RowBox[{"2", "+", "s"}]], " ", 
   RowBox[{"a", "[", 
    RowBox[{"2", "+", "s"}], "]"}]}]}]], "Output",
 CellChangeTimes->{3.8150500192755985`*^9, 3.8166033109415317`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"x", 
    RowBox[{"(", 
     RowBox[{"x", "-", "1"}], ")"}], 
    RowBox[{"D", "[", 
     RowBox[{"ser", ",", "x", ",", "x"}], "]"}]}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"3", "x"}], "-", "1"}], ")"}], 
    RowBox[{"D", "[", 
     RowBox[{"ser", ",", "x"}], "]"}]}], "+", "ser"}], "\[Equal]", 
  "0"}]], "Input",
 CellChangeTimes->{{3.8150500269177313`*^9, 3.815050071580733*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    SuperscriptBox["x", "s"], " ", 
    RowBox[{"a", "[", "s", "]"}]}], "+", 
   RowBox[{
    SuperscriptBox["x", 
     RowBox[{"1", "+", "s"}]], " ", 
    RowBox[{"a", "[", 
     RowBox[{"1", "+", "s"}], "]"}]}], "+", 
   RowBox[{
    SuperscriptBox["x", 
     RowBox[{"2", "+", "s"}]], " ", 
    RowBox[{"a", "[", 
     RowBox[{"2", "+", "s"}], "]"}]}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "x"}], ")"}], " ", "x", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "s"}], ")"}], " ", "s", " ", 
       SuperscriptBox["x", 
        RowBox[{
         RowBox[{"-", "2"}], "+", "s"}]], " ", 
       RowBox[{"a", "[", "s", "]"}]}], "+", 
      RowBox[{"s", " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", "s"}], ")"}], " ", 
       SuperscriptBox["x", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "s"}]], " ", 
       RowBox[{"a", "[", 
        RowBox[{"1", "+", "s"}], "]"}]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "+", "s"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"2", "+", "s"}], ")"}], " ", 
       SuperscriptBox["x", "s"], " ", 
       RowBox[{"a", "[", 
        RowBox[{"2", "+", "s"}], "]"}]}]}], ")"}]}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      RowBox[{"3", " ", "x"}]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"s", " ", 
       SuperscriptBox["x", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "s"}]], " ", 
       RowBox[{"a", "[", "s", "]"}]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "+", "s"}], ")"}], " ", 
       SuperscriptBox["x", "s"], " ", 
       RowBox[{"a", "[", 
        RowBox[{"1", "+", "s"}], "]"}]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"2", "+", "s"}], ")"}], " ", 
       SuperscriptBox["x", 
        RowBox[{"1", "+", "s"}]], " ", 
       RowBox[{"a", "[", 
        RowBox[{"2", "+", "s"}], "]"}]}]}], ")"}]}]}], "\[Equal]", 
  "0"}]], "Output",
 CellChangeTimes->{3.8150500725046806`*^9, 3.8166033109818883`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.815050094151605*^9, 3.8150501005114837`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["x", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "s"}]], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         SuperscriptBox["s", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "x"}], ")"}]}], "+", "x", "+", 
        RowBox[{"2", " ", "s", " ", "x"}]}], ")"}], " ", 
      RowBox[{"a", "[", "s", "]"}]}], "+", 
     RowBox[{"x", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "+", "s"}], ")"}], "2"]}], "+", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"2", "+", "s"}], ")"}], "2"], " ", "x"}]}], ")"}], " ", 
         RowBox[{"a", "[", 
          RowBox[{"1", "+", "s"}], "]"}]}], "+", 
        RowBox[{"x", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"2", "+", "s"}], ")"}], "2"]}], "+", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"3", "+", "s"}], ")"}], "2"], " ", "x"}]}], ")"}], " ", 
         RowBox[{"a", "[", 
          RowBox[{"2", "+", "s"}], "]"}]}]}], ")"}]}]}], ")"}]}], "\[Equal]", 
  "0"}]], "Output",
 CellChangeTimes->{3.8150501019933224`*^9, 3.8166033127114353`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"co", "=", 
  RowBox[{"Coefficient", "[", 
   RowBox[{
    RowBox[{"Expand", "[", 
     RowBox[{"%", "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", "2"}], "]"}], "]"}], "]"}], ",", "x"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.8150501099368625`*^9, 3.8150501491811876`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"a", "[", "s", "]"}], "+", 
  RowBox[{"2", " ", "s", " ", 
   RowBox[{"a", "[", "s", "]"}]}], "+", 
  RowBox[{
   SuperscriptBox["s", "2"], " ", 
   RowBox[{"a", "[", "s", "]"}]}], "-", 
  RowBox[{"a", "[", 
   RowBox[{"1", "+", "s"}], "]"}], "-", 
  RowBox[{"2", " ", "s", " ", 
   RowBox[{"a", "[", 
    RowBox[{"1", "+", "s"}], "]"}]}], "-", 
  RowBox[{
   SuperscriptBox["s", "2"], " ", 
   RowBox[{"a", "[", 
    RowBox[{"1", "+", "s"}], "]"}]}]}]], "Output",
 CellChangeTimes->{3.8150501501710343`*^9, 3.81660331299658*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{"%", "\[Equal]", "0"}], ",", 
   RowBox[{"a", "[", 
    RowBox[{"s", "+", "1"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8150501577842646`*^9, 3.81505017780121*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"a", "[", 
     RowBox[{"1", "+", "s"}], "]"}], "\[Rule]", 
    RowBox[{"a", "[", "s", "]"}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.8150501798285513`*^9, 3.816603313070798*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ode3", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"x", 
     RowBox[{"(", 
      RowBox[{"1", "-", "x"}], ")"}], 
     RowBox[{
      RowBox[{"y", "''"}], "[", "x", "]"}]}], "+", 
    RowBox[{"2", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"2", "x"}]}], ")"}], 
     RowBox[{
      RowBox[{"y", "'"}], "[", "x", "]"}]}], "-", 
    RowBox[{"2", 
     RowBox[{"y", "[", "x", "]"}]}]}], "\[Equal]", "0"}]}]], "Input",
 CellChangeTimes->{{3.8150501877069244`*^9, 3.815050231747083*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"-", "2"}], " ", 
    RowBox[{"y", "[", "x", "]"}]}], "+", 
   RowBox[{"2", " ", 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{"2", " ", "x"}]}], ")"}], " ", 
    RowBox[{
     SuperscriptBox["y", "\[Prime]",
      MultilineFunction->None], "[", "x", "]"}]}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "-", "x"}], ")"}], " ", "x", " ", 
    RowBox[{
     SuperscriptBox["y", "\[Prime]\[Prime]",
      MultilineFunction->None], "[", "x", "]"}]}]}], "\[Equal]", 
  "0"}]], "Output",
 CellChangeTimes->{3.815050232562138*^9, 3.8166033131148024`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DSolve", "[", 
  RowBox[{"ode3", ",", 
   RowBox[{"y", "[", "x", "]"}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.815050270130989*^9, 3.8150502807360854`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"y", "[", "x", "]"}], "\[Rule]", 
    RowBox[{
     FractionBox[
      RowBox[{"C", "[", "1", "]"}], 
      RowBox[{"x", "-", 
       SuperscriptBox["x", "2"]}]], "+", 
     FractionBox[
      RowBox[{"C", "[", "2", "]"}], 
      RowBox[{"1", "-", "x"}]]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.8150502817594786`*^9, 3.816603313311718*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["5.6 Bessel\[CloseCurlyQuote]s Equation, Bessel Functions", "Section",
 CellChangeTimes->{{3.8150502882851357`*^9, 3.8150503191437197`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BES", "=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"x", "^", "2"}], 
     RowBox[{
      RowBox[{"y", "''"}], "[", "x", "]"}]}], "+", 
    RowBox[{"x", " ", 
     RowBox[{
      RowBox[{"y", "'"}], "[", "x", "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"x", "^", "2"}], "-", 
       RowBox[{"\[Nu]", "^", "2"}]}], ")"}], 
     RowBox[{"y", "[", "x", "]"}]}]}], "\[Equal]", "0"}]}]], "Input",
 CellChangeTimes->{{3.815050323509134*^9, 3.8150503288170743`*^9}, {
  3.81505043484542*^9, 3.8150504750703516`*^9}, {3.815050522469008*^9, 
  3.8150505356887226`*^9}, {3.816604488893731*^9, 3.8166045025151944`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["x", "2"], "-", 
      SuperscriptBox["\[Nu]", "2"]}], ")"}], " ", 
    RowBox[{"y", "[", "x", "]"}]}], "+", 
   RowBox[{"x", " ", 
    RowBox[{
     SuperscriptBox["y", "\[Prime]",
      MultilineFunction->None], "[", "x", "]"}]}], "+", 
   RowBox[{
    SuperscriptBox["x", "2"], " ", 
    RowBox[{
     SuperscriptBox["y", "\[Prime]\[Prime]",
      MultilineFunction->None], "[", "x", "]"}]}]}], "\[Equal]", 
  "0"}]], "Output",
 CellChangeTimes->{3.815050538769517*^9, 3.816603313411632*^9, 
  3.8166045098596497`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sol", "=", 
  RowBox[{"DSolve", "[", 
   RowBox[{"BES", ",", 
    RowBox[{"y", "[", "x", "]"}], ",", "x"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.815050546202778*^9, 3.8150505653155513`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"y", "[", "x", "]"}], "\[Rule]", 
    RowBox[{
     RowBox[{
      RowBox[{"BesselJ", "[", 
       RowBox[{"\[Nu]", ",", "x"}], "]"}], " ", 
      RowBox[{"C", "[", "1", "]"}]}], "+", 
     RowBox[{
      RowBox[{"BesselY", "[", 
       RowBox[{"\[Nu]", ",", "x"}], "]"}], " ", 
      RowBox[{"C", "[", "2", "]"}]}]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.815050566140909*^9, 3.8166033138031425`*^9, 
  3.8166045129492745`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"BES", "[", 
   RowBox[{"[", "1", "]"}], "]"}], "/.", 
  RowBox[{"\[Nu]", "\[Rule]", "0"}]}]], "Input",
 CellChangeTimes->{{3.815050577568305*^9, 3.815050589005266*^9}, {
  3.8166045419616375`*^9, 3.8166045477223577`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["x", "2"], " ", 
   RowBox[{"y", "[", "x", "]"}]}], "+", 
  RowBox[{"x", " ", 
   RowBox[{
    SuperscriptBox["y", "\[Prime]",
     MultilineFunction->None], "[", "x", "]"}]}], "+", 
  RowBox[{
   SuperscriptBox["x", "2"], " ", 
   RowBox[{
    SuperscriptBox["y", "\[Prime]\[Prime]",
     MultilineFunction->None], "[", "x", "]"}]}]}]], "Output",
 CellChangeTimes->{
  3.8150505900439377`*^9, 3.816603313974075*^9, {3.816604529559101*^9, 
   3.8166045487798204`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Simplify", "[", "%", "]"}], "/", "x"}]], "Input",
 CellChangeTimes->{{3.815050594052601*^9, 3.815050607313388*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"x", " ", 
   RowBox[{"y", "[", "x", "]"}]}], "+", 
  RowBox[{
   SuperscriptBox["y", "\[Prime]",
    MultilineFunction->None], "[", "x", "]"}], "+", 
  RowBox[{"x", " ", 
   RowBox[{
    SuperscriptBox["y", "\[Prime]\[Prime]",
     MultilineFunction->None], "[", "x", "]"}]}]}]], "Output",
 CellChangeTimes->{3.8150506079502645`*^9, 3.81660331407279*^9, 
  3.81660456273709*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sol", "/.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"C", "[", "1", "]"}], "\[Rule]", "1"}], ",", 
    RowBox[{
     RowBox[{"C", "[", "2", "]"}], "\[Rule]", "0"}], ",", 
    RowBox[{"\[Nu]", "\[Rule]", "0"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.815050613470992*^9, 3.8150506470978885`*^9}, {
  3.816604576735544*^9, 3.816604581888167*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"y", "[", "x", "]"}], "\[Rule]", 
    RowBox[{"BesselJ", "[", 
     RowBox[{"0", ",", "x"}], "]"}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.815050647769993*^9, 3.816603314119654*^9, {3.816604571128378*^9, 
   3.816604583101626*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ser0", "=", 
  RowBox[{"Series", "[", 
   RowBox[{
    RowBox[{"%", "[", 
     RowBox[{"[", 
      RowBox[{"1", ",", "1", ",", "2"}], "]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", "12"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.815050653096497*^9, 3.8150506755132647`*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"1", "-", 
   FractionBox[
    SuperscriptBox["x", "2"], "4"], "+", 
   FractionBox[
    SuperscriptBox["x", "4"], "64"], "-", 
   FractionBox[
    SuperscriptBox["x", "6"], "2304"], "+", 
   FractionBox[
    SuperscriptBox["x", "8"], "147456"], "-", 
   FractionBox[
    SuperscriptBox["x", "10"], "14745600"], "+", 
   FractionBox[
    SuperscriptBox["x", "12"], "2123366400"], "+", 
   InterpretationBox[
    SuperscriptBox[
     RowBox[{"O", "[", "x", "]"}], "13"],
    SeriesData[$CellContext`x, 0, {}, 0, 13, 1],
    Editable->False]}],
  SeriesData[$CellContext`x, 0, {1, 0, 
    Rational[-1, 4], 0, 
    Rational[1, 64], 0, 
    Rational[-1, 2304], 0, 
    Rational[1, 147456], 0, 
    Rational[-1, 14745600], 0, 
    Rational[1, 2123366400]}, 0, 13, 1],
  Editable->False]], "Output",
 CellChangeTimes->{3.8150506781134777`*^9, 3.816603314322059*^9, 
  3.816604596031937*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"p0", "=", 
  RowBox[{"Normal", "[", "%", "]"}]}]], "Input",
 CellChangeTimes->{{3.8150506838193607`*^9, 3.815050693664576*^9}}],

Cell[BoxData[
 RowBox[{"1", "-", 
  FractionBox[
   SuperscriptBox["x", "2"], "4"], "+", 
  FractionBox[
   SuperscriptBox["x", "4"], "64"], "-", 
  FractionBox[
   SuperscriptBox["x", "6"], "2304"], "+", 
  FractionBox[
   SuperscriptBox["x", "8"], "147456"], "-", 
  FractionBox[
   SuperscriptBox["x", "10"], "14745600"], "+", 
  FractionBox[
   SuperscriptBox["x", "12"], "2123366400"]}]], "Output",
 CellChangeTimes->{3.815050694428093*^9, 3.816603314608757*^9, 
  3.81660460382207*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sol", "/.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"C", "[", "1", "]"}], "\[Rule]", "1"}], ",", 
    RowBox[{
     RowBox[{"C", "[", "2", "]"}], "\[Rule]", "0"}], ",", 
    RowBox[{"\[Nu]", "\[Rule]", "1"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.8150506997283707`*^9, 3.815050734632085*^9}, {
  3.816604635765787*^9, 3.8166046387209077`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"y", "[", "x", "]"}], "\[Rule]", 
    RowBox[{"BesselJ", "[", 
     RowBox[{"1", ",", "x"}], "]"}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.815050735444245*^9, 3.8166033151421013`*^9, 
  3.81660463951501*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ser1", "=", 
  RowBox[{"Series", "[", 
   RowBox[{
    RowBox[{"%", "[", 
     RowBox[{"[", 
      RowBox[{"1", ",", "1", ",", "2"}], "]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", "12"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.815050742775275*^9, 3.8150507763531046`*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   FractionBox["x", "2"], "-", 
   FractionBox[
    SuperscriptBox["x", "3"], "16"], "+", 
   FractionBox[
    SuperscriptBox["x", "5"], "384"], "-", 
   FractionBox[
    SuperscriptBox["x", "7"], "18432"], "+", 
   FractionBox[
    SuperscriptBox["x", "9"], "1474560"], "-", 
   FractionBox[
    SuperscriptBox["x", "11"], "176947200"], "+", 
   InterpretationBox[
    SuperscriptBox[
     RowBox[{"O", "[", "x", "]"}], "13"],
    SeriesData[$CellContext`x, 0, {}, 1, 13, 1],
    Editable->False]}],
  SeriesData[$CellContext`x, 0, {
    Rational[1, 2], 0, 
    Rational[-1, 16], 0, 
    Rational[1, 384], 0, 
    Rational[-1, 18432], 0, 
    Rational[1, 1474560], 0, 
    Rational[-1, 176947200]}, 1, 13, 1],
  Editable->False]], "Output",
 CellChangeTimes->{3.8150507781374846`*^9, 3.8166033152642655`*^9, 
  3.8166046460314093`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"p1", "=", 
  RowBox[{"Normal", "[", "%", "]"}]}]], "Input",
 CellChangeTimes->{{3.815050783937326*^9, 3.815050792261078*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["x", "2"], "-", 
  FractionBox[
   SuperscriptBox["x", "3"], "16"], "+", 
  FractionBox[
   SuperscriptBox["x", "5"], "384"], "-", 
  FractionBox[
   SuperscriptBox["x", "7"], "18432"], "+", 
  FractionBox[
   SuperscriptBox["x", "9"], "1474560"], "-", 
  FractionBox[
   SuperscriptBox["x", "11"], "176947200"]}]], "Output",
 CellChangeTimes->{3.815050792844537*^9, 3.8166033153259177`*^9, 
  3.816604654106964*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"p0", ",", "p1", ",", 
     RowBox[{"BesselJ", "[", 
      RowBox[{"0", ",", "x"}], "]"}], ",", 
     RowBox[{"BesselJ", "[", 
      RowBox[{"1", ",", "x"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "6"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8150508017948923`*^9, 3.8150508849418774`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
OJ5QWx2s0Yz+B9i4kaE=
       "]]},
     Annotation[#, "Charting`Private`Tag$28070#1"]& ], 
    TagBox[
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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

       "]]},
     Annotation[#, "Charting`Private`Tag$28070#2"]& ], 
    TagBox[
     {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
rRS9PlE1tbDAhM9ky4cT+0vR/wC6pYq2
       "]]},
     Annotation[#, "Charting`Private`Tag$28070#3"]& ], 
    TagBox[
     {RGBColor[0.922526, 0.385626, 0.209179], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
cHmSieJb5lw5xxRgtbKbOx0lKSQrNEjQZQlw5NNd14XyFLJqdjOcry7Aizlb
zv1SpFC8Gd3bTfz553rfv9Mo9NRJjpGvIcBLtBaZyDEo9NkjO5Y1XYBbV+ro
MCgKbe980vaG+Nx2DYUZbArdXfI+/fAMAW6PlG5arEkhj93m6K4WmU/2OF49
g0J2v/YtWj9TgFeU/L5pPpNCI+/bznCJ4361+e+ZQ6HnzSHuX7UFeJUU38F1
LoXe/bH9s3+WAH/Rqjb10qOQ0jzGr3bi1TueKofrU+jW1QfMitkC3Hn43nCM
AYVODNhvNpwjwBeictuSDSl09YR/ZzLx2quXK7KMKBThtr/vN3FXSWLBraUU
8l6Q7GalI8DJ3Kjkh8vJeJSn2TXidd0hwS9WUujCkV2JvcSpMz02166h0Euk
5h08l+yHsZNhkwmFWrw/Tj4l7t5hw/oCFNr5ykqsnzjNy1LUvZ5CsyPlfWfr
CrBpNPo6ZEahxM2BVtbEvVdXVIttpNDJdrnLAcSXny0skt9MoVLHZbvSic3r
Z19mWlIIWD4Rj4n7u9XCtawolJG3SKuaOFNa6eC8/yjkIOzVbyHepC3135Jt
FLLompf/nfi38diytTvI+rP2ZPYQZ+8c0NxoQ6Fl8iOT/7OF93eJbbspZJQb
I+gi/hPd+sNuD4XuiMdotxFfu1Zf52ZPIfGzJ9o+EW95/v6ptyOFlPkC5RLi
oXqcfcKJQlNr5pdkEuf0PImKcKaQb8ofXgjxVpkCr/OuFGqPLT24i/ifds7O
1P0Uatgpe2Q+cd7q9NVX3Sm0g7NvYJisl7VNwqw7HhSaNtfqxyviUe9I2Uee
FBq9b2sXSXzzbHBfqReFdFWnmZoS77juJ6j0oVDNgvHcUbI/oufuL+v8KOTH
fhB2j/g2zzGv+SiF3i57xrcntundcf6rP4XQjNs3JYgnZSyO9gZQaMrdaYN5
pB7uzgK7f4EU+jMQ9mI9sfgufT3FUApVmPFfe5L6KvCZNY0VRqEX979JDJP6
23OO/XdmBIUSrtiVhxIXvpB8szSKQrHbuS+CSf06zm5xcoin0MRG9ZIlpP4L
/T5lmSZSqLlh9Zss0h/iuKxl/gUKXdw7KTWF+KbDdft/KWS/uyKXvdYk+53i
vjs1k6zXUzCXIv1o+sU29WQ2hfK0FmtaqpF6NLLguV2jUN8UyUWxbNIPNfo7
luSR/vkYITdOkf6WGdham0+hK++P3LpJ8kGwi44rvkeh/rkTXhUqAjw/r746
6z6FjOd2HW1XFuAaVGzh9YhCnet0TKVIvqgFh2yQe0GhA/IZE2ySTwXdUiZm
H0i9vA45bk/ybmL1cMiCjxQyvcE4ZyAuwNtjup6r1JD1H33wdWySj4fmVq/q
4FBISjP6VCzJS7QvaVloE8mfrSkbfUne8jgaC592UajsudILW5LHutqKh7N/
Uki0X7W0/RcfB/mI7kR1U2hTTYGK208+1lLo0LPpp9DStd4vHUiee5jfmDMw
TCHPJ/cWUOQ8GCs21NSXYSHfB/ljt8l5sShzqEJWjoUUS1Qj+jh87Bzx0q9T
noW2B19NMarj47dbtlRen8ZCs++Oedwm501ch/sRNRYLUStvNTuT82q6fHaV
1FwW+jS//IzoCR+v3avo32HKQkFh6Xq/kvnYx7Req8ychdjnbrflXeDja3pX
3mdsZKEVk//W2Cfy8ZTfejNtLVkopCal+2ksH3+MNvvwaTsLqTSdWAsRfOz4
IFj7hTMLpe2MsT7lzccnJX98TD3FQhufexu9NSXnsdlqhcxwFpJWPTdUDHwc
EXneIuc0CzGL20rz1vJxtNSiysJoFqqt6dh+ZAUfJ8ocw1UJLPStsf5lzXw+
zlEQPRzJZqEdvrwbGUp8/J6hkrYXs9Cd1L+Loxt42MrGle9WzkK2tot9P9eT
+0rKI4bnGxbiiQr4+nU8zKV2JwVUsVAPfVG77B0Pt7AzYhJrWWjaGgfu7Wc8
3K8592R5O3n+mYTqNHJ/YukYu8wVY6P0b6Envu3hYXQ5alhWgo2eHHDx/kXu
W4emceO7JdnIWclye882Hi795/n8kQwbVZm9+f51M7nPfcpkmCqxUSfnjm/u
Kh4uDBCrdNJiI2llp34nNg9vfF+1IH0tG/WdbJjSyKnHJ3x2/5EPYqPAK0d3
s9fU4+kr9r/TDWGjlnkuwQnL6/Er0ZFM01A2Uq5+3Su2uB7Lx8ebB0ewkcyQ
aV2DDgmv/LcpP2LYSCFA/+7WafW4smvJ8ndX2CjjYaGjQwcXM92UAqJK2Uii
xEhBMYKLny2YYXm9jI0Gsdu3/mAudvq9QOvlKzYSfJqxlePPxbcjNlb+ectG
1aD8KdKDi9dcC2Xt/8RGYd5HKoutudi19VexaRsbhRgccdo8g4tlbozEOnWw
UfRiXbHvLC4u8JLZF0yzkZ6/t3WEMhcPjc2WKepko6lyDRO3Jbk4VsPedlYf
G9Xcsmh++4ODDemD+iYDbLRmzctZ679wMO/O8ck9g2ykba6j96yFg7WML9xK
GmajekMl/8xaDn4jdjWkYISNIvOKscx7DvZ4V2D9boyNRA/SOT6vOVgx6fmc
ryKyX37v8zkvOPih7bvhyUk2Sv61d9viJxz8fxTfO9g=
       "]]},
     Annotation[#, "Charting`Private`Tag$28070#4"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 6}, {-0.6534374263966929, 0.9999999999999962}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.815050863952718*^9, 3.8150508863011627`*^9}, 
   3.8166033167841825`*^9, 3.816604690927129*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"BesselJ", "[", 
      RowBox[{"0", ",", "x"}], "]"}], ",", 
     RowBox[{"BesselJ", "[", 
      RowBox[{"1", ",", "x"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "15"}], "}"}], ",", 
   RowBox[{"Ticks", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "5", ",", "10", ",", "15"}], "}"}], ",", 
      "Automatic"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.815050893155154*^9, 3.815050963597475*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
ajQpPMFdA5rQGGmVcONANRIu1V+22KEJhlSNhKyz1eigBHPmyB5NGPO8lP3f
/WrEquTpPndYE4Le9TxLmapGnRTX7NizmqD1pEG05UkN+t1SkLHuvCZ4Lwkp
NebWIFIQ94uEC5rwQ+qJbEp1DTrRnvgo1VMTes4En+iaqkH9oYzgogBNOMNd
+Ps6qkXfvupa9cdoQl/a3UtXOLVoLuPfwoZC4vpXF/Zcma5DX63NkiKKNYGj
p8njvlyH2Dx39gyVasL1sGP924TqUamD7OOH5ZrwK4m3wJNaj0Kktxj+rdeE
FRLvedVP1yPR266BDd2acJz84mh5Uz1aqZdHofRpQuajwIiLnfVobmihMWhA
E6L1mMMLX+tRBwqV3/hVEyTr3nc++VePni08//hoWhOM7Hgs1Tc0IC2Xdi7n
lVTwC/yy2SS8ASmsI2V+5KGC/2xC65O4BiRa6XRImo8Kty4fa2150oBmFb4n
09dQ4ctMemN9TgMq+bx6x6Z1BMufePizvQG9vnVoPEqKCvJRCWrkvgb0bFP8
vS8yVOgSfFevOdKAbsSoDscrUGE3hU6pXmpAe8wg9J86Fe6qGMFmOeL8Nhem
bUulgt33BL8NZDrSSmlqf6tFBW0HxnVeGh2JLNupnd1IBanViV+MDeno83vf
2kZDKkStemL21ZqO6k6Xeahtp0KvPO+O3BN0VCzGLR2MqJBMc++yOkNHie6x
5zbvpILe+aJ6dS86Oq36SiBhHxWKZWxWr4ygo4Dqk65qB6mw3HiHLPIfHcU6
i9PfHqaCis3I2NR9OipLuxJNP0aFNcE/PdSS6Ii5S3vymB2VOH9bU66l0dHI
l/59w/ZUkJnd7JORRUdr1faI/HWkQmfDl88+7+iIWvPbI+IMFWatcwcli+kI
zua0rHOhwt/m4atRH+jIPV3y7no3KsTtf7p3opqObpk1zJRcpILJNscgdj0d
JXwNstrtRQXVbuHNj5roqEbty1qHy1QQm6STo9voqLsm3nfCnwqyj87YV3TQ
0cxZy8/+V6nw5viSBL2Tjvj5uLbyXqNCUCKvRXoPHSm+zH8UF0yF1MZ9y1b9
dKS322VR/iahj2ufTtsgHVl+k7XNCqWCy4LooNoXOnIKby7Wu00Fo9kb4pbf
6MhfPUS2MpIKFa2ylTtG6SimdsvVA3cI/WcF54XG6SjVZbSr6z9C/2fMzKwJ
Oirhe7rt3F0qaMysH5KZoqPWlwefzt2ngkS/9ovj04R+u3mWgx9RIVCZMuHx
nY6WvxWeFEqgQoRWTrn1D0LP2xfw40QqhGi+J4vOEHpqKCqpPSfy++2MdCLB
UMcMfptMhUstW1J+EWx9LmzAOJUKO3q+VdFm6ciN39CUnk6FT7dv3tpA8M2M
yZRjmVR4W2H7hZfghD3J3MOvqLB1kHsim7g/d+TIGc9sor9Hp59SCa65zV/9
J5fopzdl2Z+op1ujTDUin8jj1OZ1CUS9M3UeYesKqPBHs/XrHaIf/vPkb8lF
BIsHXTlC9Ksg0LF7fSkVDuqFsCYJPbZkRmaUfCDul7/025bQy9LcWGB3ORX0
jaiL8YSeTqM/zrMqqNDSU9+S9X+9I9IaTlUT/siURf9H+BGjaUubqCX0KXi7
efcQoXe9YLR/AxValV42tRJ+lpwvn+BpokL+oU6nDb109C1TPVueSfiDziaf
ZhP6mncJZ7VR4QZvur1hO6HvWIyHXgcVavxn9IZbCT2pP3UOdBN6l8d45DUQ
ejZkxnX1UuH95+WBthpCT9cTMy4DVOj+XvqEXkFH8VlV+cFfqbCkdl50cwkd
/aDe03v7nQo7S9ZtH0+nI3Yj7JKYpcIq6f1snhQ6Kr84ZeUzT/R7p6F+IZHo
5625l94vQl9TNuf8XcJfQ67XJdw08J/uHrh+lY7Eut+UyK2iAWv9MUdnXzpa
DDpeH8hPg6fH+eIoHoQ/nwq+GgvRoNNvYqOOE6GfubtypSQNtBp8uoLM6Mh8
XFaHIkODg5PsbZsQHencqTMOlaPB84zb78u3Enq0kO13K9HAvncTxU2Djp7Y
dD6ka9IAKbBDl/noqM1lt2DbNhrs56gGKpQ3oFKBedktiAaxB+YMrxY0oJRX
KZoPTWjQ1z3Jm/+6AXlO/zWzMaNB4t9InnfxDUjI792N7gM0oJODov9ebEBm
YcoLw040qDSryfq4tgFpazB4zZxpUPBYMraNvwGtbQhc+9KFBlzJORk1f+rR
oBB743k3GhT/t6UKDdej6w9i3CZ9aSAV4z4YnlePilJ/D8zfpkFM0brdIbvq
kd4OnwWLKBo0F36Neb21Hr0fmBBMukODujOBRe8169Fbhd6tFndpcExlmM+Z
+P95HV9+59kTGlC9fVcYsupQUnSowe5sGqQIbtFvtalDET4icfEsGmi67586
blmL+CVup0+20+DilqrE/wxrUVgeV5kpmwZ3V8htTtOoRbemfnyd6KaBfuuj
kMs8tejaubZtJl9p0JZ5+MW7khrkbf94ZHSRBmPPZ2ULlWuQ3U7iLK+gBVYt
xeynnVXobxu/cKWSFjz1/110qbIKJTlPdVmQtcApYMGb+roKfQ0r9rPT0IJM
1XYJo6Aq5F1/IOfKJi24lS7kNSlfhSL3ByoUmWlBoHGga4ltJSqxaf+j60Ew
L89LUtknJOceXry+XAtcDnocv3qhDK1b7Za375g2NLs3erH9XqHUHUEB3221
4be7UWv2VBbaFBSz4569NvBaVJU6OWeh/d9z29mO2hD/89fs2cOZKOzz/NJp
N23QEPTd9Zv6Ei2mXDcNuKENlB0yXmodKajT6B4r/ZU2pFZsXWu28z4655ua
aJ6tDR/eHZr/o3UP/cx+7zyRS6wz7xx9te4uEldhL2ws0IZYvdwdE03/ob38
8qQP5dpw9yPE/BAPR2Vt6WdY7dogbfJ3tOraWWQhXKR9ma0N1zYqPkmMOY7Y
u+t/Sndpw0ZSrIGE6U40VzJ++2S/NtCVvmQ+eG+DtZN13oyOaYNFnu8j+3t+
uKzT5HL0pDZMf1p4GTd+FVustUIbvmtDOJePaoJyMD4b7tvqM68NA/ksw8P+
t/BceViC1KI2cE+YRG98EYZDfj06XfJLGzYrr6goarqNRXUztU781YaiWHHV
4YVI/My9ZP7fP234eOLcvxzlO/h/+zx1Sg==
       "]]},
     Annotation[#, "Charting`Private`Tag$28406#1"]& ], 
    TagBox[
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwdlnk8VN//x20JlWQny4xlxjZClpQ6byVlyRKVpZCKQhE+hBYkyRJJRUl7
lEqo7I7shsHYI2KoJEvKvv7u9/fPzOM5997zfr9fr9c5c8mu3gdPcbCxsc0S
H//7numrq1SISdqV8//fEbva0sSDDLt8UcmRW9q7ulwRiDS5ineFo5pCXut1
xO8BVq87ObsSUQ/p5K2mznC0aVwscb7zKWpVTLmo1JmIvhVbeE915qCiT7vg
fdtTZKww0jvZWY40Xn70GKTnoPlOvTt/OltQOvX+SvezclSxJ/058+kgCgo/
m/izoAVp3Mz6NVs7iPYnlcdWdregtK48dZmJQfQ2eO5G3GILunC2Nt9jxxAq
0e/gHDRoRer3fjVwtg2hvHOG25NLW9H9EdVpnTU/0O2Cbcr8pW3I59b7vffd
h9GBDXgF3nSgvp786LK4YTTRbJ1/jN6BzCifm37kDqPNjVGOrsMdiFLEtN/K
9gs9ra5hySl0op6hv2cbkn+hzOv8dy/d70TG23TurtSNIG9a6OLl8C4k9a3g
h6vaGAqo5zce3NWN2P6dT66zHkN/DlglGdh3oyFuFVONwDEE9u3bQvy60Vv1
+2+XP48hs0aqTEZ6N9p1Odg/+cg42qfLdbuEvwc5S+/gaAyfQHvHFG0+d/Yg
Jq3vZuroH9Re9I43wrYXVeoV/rRc/YNULh2ttPPsRZ8M7wKn4CTaqMLVuzG8
F90/ZPH3jN4karH6xFTI6kWul0oP6YVPIv4Abd+fa/vQ34Y0qRaxvyhexdGs
JLcPCXs5v1675x8acso9QJr6hlTWPqu2OvIPyUlW0e25+hE8/cFK8fyHRoP7
4hL4+5FX19nNakn/0OnX8Xur5PpRpdHFWKvv/9AXLGFuatqP/KVTzqVcn0Lf
I9UTC+70o+j8r9GsB1PoWuTA1ua0fvTYhpSu+n4K+Qast2pN70cNN9K/lXRN
oTrG5pa0gn6kMPPRiqU8jSZNuRdNvvaj1sYWLdWGaeR/PlPhl/QAGj4jaunf
P43kJ/bqVygOoBUuB8+SqWlU7ntu5w3aAFLZMfDMUnoGNfHsm+4yGEDh6RPC
/udm0LrYfxaRDgNIK3T9bLHALMorSnURTBxA+zdbCXErziL+nVtW05MHkNOn
21ss9WfRF8+vUsqPBlD0qOTpgePE/WUiJWOZA4hlp/xlTe4souZ3/r5SOYAS
NY2LLA7NodZlA62KyQG0pcd+387Tc+jqw7wjH2YGUEPE2VbVkDk0v8P6yO3F
AcTdlfSb58kcel8U2iG5hoVCLg9urhidQzv+5PlbirGQuNJsevbqHJLxCOXL
2sxCn5h82o8F55Ha4QrnJVkW+qOgZX5p2zw6tPmvgYsSC52sD72oFzGPGtLF
/M23sRD7f0k8lHvzSHq9cZ6EAQulyWQkCb+eRzyqYc/bEAt1nW96M9k0j0z4
p/yE9rHQAXGZ3szNC4j75K7MD7YsNPJZ88x99QXELpvDMXGEhaI8905HGS6g
H6psU6KOLFRe6rXBzX0B9dg+frjlOAvpniraScpdQIpRRYNXvViolb+pjr96
AT3I0O9X8WYhn3zWoeWuBaT946EnPs9Cr9fxneteWUCePjTV7AAW2vdReqF2
0yIavHPvGH8Qi8ihZmSewiJyiT612T6EhWRz7NKSTBfR5Wu3dPOusFCxo5fK
1WOLaNWhI5EexkIOa0I/nfdZRPdSzS/UX2WhJLv0Rou7i2j3r7DeO9dZSJOj
yGHnq0UU9a7pqPMNFmrMbPyhWryIWg56nRSNYSGe1ekVHtYiYgu8u/7ATRZ6
kcEbMzu1iDZec3jbEM9Cuw9Ki/1Yu4R2xnZ36N9ioW+LGs/aJJeQ5U63G0mJ
LHTxhdGWCtoSyt/pWvX1NgtJWNoVZcMSUqfsjxG8Q/g357nvsc0S2hj2skfn
LuGf2W3nS0FL6OMpb5m9ySwUN/3yt2fsEuJ46yyomcJCKo8KAx0eLaHl3tbb
fPdZqGZ/I6dJzhKyJVU8YxJ88u9AvF7VEhoJ098T+YDwO3V6M6VrCd2aOuKn
lEr4vZc3Q/j3Esows9XJJ9hgQkqbc2UJvdMPitZ5yEJfkjXKJgWW0ccDFP/H
BN9vzdwYoLiMMpXrIlcJduCnOi/oLyM5gZWF/WkstNnk6bvLFsso9Vhny0WC
v16VXuE4sYx+KkQIPCD4YWnygeuBxHUVq0/PCHaaF3q4LnYZ2fU/q75LsKx2
/Gj842XU4sxl5E9w/zk+A+GPy6j/lJCmAcFPXl2LSa5bRioH4hPGifquQ2w9
Un3L6AePzakYguVlL6o8+buM9GUP5wgSPGQ/G6S4dgWlPHsTHEHM9yLJt+7V
5hU0qnH9cz+hh1vTmLi6xgpKGtSKphJM5TtzOsdoBenbSHTZEfoNGw3l6dqv
oBuxZe/8Cb1fXXFeW3R2BWXz1W8KIfzwKOw+jMJXUP37WS6veyykOn3oZcXd
FSRYQY7dR/g3uoU5vS9zBf3+BpkbCH/fepjvbcArqHPutFsp4f+5FzVJVm0r
aIsZ/bM9kY8/kqVb7ZdXEKU/0sOKyFP2If2rvZtW0d72prLMOBbyTfjQcpyy
inbb0+omiTxOrck872G5ii4b6XHuimKhuT/3skKerKKzb+UzOon8F6gKra5+
XEU83cMSNy6xULDbTYsI+ipiSZS6KRL7ZaknYiz23ypSTlPOkCH2V+hgvkiT
HBsYrvKfE/Yk9A8N2LmJxgYa6Q8cpU+zkKGM9ikbPTaoSFK13XSKhTjssz50
mrHBKdrR0EInFopofGHT788Gx5K3hglaE/p7ngiRu8IGZT7m4f4HWGgvL/nZ
yRtswB2Hqj6bsBC3Uerf4YdsIDVDUZfZTZwfBYm3JqvZYAM/n8s3TRaKeX6l
iUOCHbimxHdGb2AhU+0zgiLy7OAXQhIp4iH2Y+XBQ1QaO3RpCHh1cRL1BxV7
zAzZwf9iV37X/AC6KNfwI+kMO2iK55X/GRpA5x6Lr1AK2eFm5cPYyLwBpKbB
YahfyQ5/R+SuX80eQCP491WzRnb4LWSedJY4v92/lfL6sNihUwXz8xLnu4vM
KZECPg7YYlL21OnaALJOzVYzc+SAwqH4qDiLASSg9sD72CkOcPs7fdtl3wBq
LIrI8fbmgO6EE8fIMIBMe45sS7rKAR9rDtp5aQ6g3ZIre3ozOSDO86iOstAA
0k42dfRe4oAnwdvWm7T2I7GkwRu3H3LC3wTDzCDjfiSu+jFi7iUn6LpzcJXu
7EeS5ZFXjr3nhK2OCb3/tPuRzB/l/6gVnBC5TtxQW74fKZr7uBQNc8KDxQcy
givf0FauZd3BrVxwbNjYTPL0N2TpLzqkReeC/TOih15T+9B1W5NdLTNrYPeN
j3NXHXqQ5IdGSQ52bkh5aORzE3rQOyHbWc113ODll5RymdKDOlqc3t+S5YbJ
qxwpAn+7kYK1v5z1fm6Qv/I6YPV6Nyo/8Ii7OYUbRnITvFSyvqBl4+lGhsFa
+Ln/j3zd707kp//EuS6cB1y2Ga2VobYho4mF4HODfGBK/243y1mHwgysj0tu
2wAHkx/c20a8J25/l/LhMt4I0hN7HNc8y8RGnY3L47UbYSDELedFzBtswca1
z7llI6z+3Mfo8XuLTxw89wV93wilD7c5rdmThY1DyFdC1wjAW61hJHEuG/vI
zjwzVBUAluO+4rilD7jS/dFYRYAAOHmIPYffRdhkSV/wYogARMRVyK8eKcaN
CW262qEC0McYPx1UWYy/FPCGPr8hAHcGdC48Si3B4+v8Ba+lCkDyVZktL0ww
Fn+/X8+4XABKKtl1JM0+Y6+5ydDaDZuAvicNaYZU4u3n3UR/CG6CYGcH33XZ
lZhnpDuTU3wTcIs/jfv4oxK/6Kno2CW3Cb5BW/AF6yrcV3pH7aPuJqjZ2qOa
o1CNLa/pdz1x3gQHR7gYJZ9rsJZg2JaQ7E3gJKbQGtdGx2wx05XJnwh2n4kb
46zHjZweDp+KNoH0yfJcka312HP64LXJqk3A5pLmVppQj593KfS4d28Cm87J
KE+TBiz6qDbSllMQsj0f9HG/Z+B5VYE+2iFB0P5654GvUjOeeSgZttVBEF6d
fW8madCMpzYqKug7C8Lhqeldzy2b8fg/fQ+jM4KgSb/70CmgGbOKTsw4XBIE
g4RhPs/yZkw3y+OPeiEIG9t2f2TaMnFNyefsuNeCIMoyPpPkxsSVWxpsb2cJ
gl/cmPq2C0xcKjRwP61AELS+D2bIPWDinB4+6keGIKR9evNf2Dcmvu/phFjT
gmD3ERaOuLbge72nWT8XBIHkF/xb3rcFJ1n6XRtbFQRdP4GRprAWfHNrVP0c
rxAceRnTVvO4BYcvZh/ZKCMElwbCGTq9LdgzZo2PgbEQdBW+d1qxbMUGmW8e
370rBI/VVyRGpdpwDynz0d4HQnD0ik9jJ7UNB999lTb1SAgsPHrOvdRqw3lh
L1MPvhIC6bOrh0f3tWEtu8fJ/MVC4PmDyiV5vg0rr0lKiBwQgutDG4xnS9pw
bXBivM4PITDXKXvNX9OG3f4k3BwaEYJ0T7cUnuY2/LwnLnb3lBD0POBkfz7Q
hkk516NWuIXhW0HGhQuc7VjUOSQ0QE0YLK9uC04ybMcf24KuKGoKw2S9+pWW
/e3Y1vTC5TYdYVi74UzzX8t2nKjz30UtJAzz0noHuo+14w3rvS+MWwtD42l+
b6ML7fhN2NnAh4eFoSR14XbS5XZsOusZYO4oDJv6Zv9VR7TjKNZp/9cnhUFw
bJdzS0I75ipw9XELFIZd9s8+X01vx8/Uj3uLXBSGHYklqd/ftOPdz53PVYYK
g0FX/WvlnHZ8Jf6ol1y0MLgHujvZFbfjhVOHT/elCsOGY0tkq6Z2nNJj6x73
RBgOn5ZMrGhtx9usbdwMXgqD8ldZXYmudhxgYHXyfpYwSHTySnv2t+NJQVOX
w+XCMCt4LOLVRDvu8pJr9qgRhgWl6FtB/9pxGfGueaVBGMKOaD2kzLbjhOBM
2YwOYVDU7CgQW2nHF9quxhf3CIOhHmp2ZO/ALupHV5v7haFydnniIlcH1mCt
/zY/IgxLO4PsDvN1YHGD7xb8f4j1h7dk8G/owGx3S0rlpoVhIlxj4/ONHXh4
4o663oIwlFX73RIV7MBNJufSzFaFQZMpv9VNuAN/embM78IlAs+EU+cSRTtw
2rLMZX9eEeg3P/MjVbwDn8tuOvZQSARSs1Qt9kt14MPrMhjZ4iIgaqnR8ku6
A+86FbqzWloE2HMzEk/LdmAKtnvbLScCu/eK3akkdeANEprSE1QRyD6z5dsy
uQNP+fLGcdJE4IFPe4CwfAf+2jCwJKYlAveuy7jyKHTgSkqhl5qeCCy9tkr/
QvCb0MSvYCAC6B7LPEqxAyd1e5gfMhQB94IQe2FKB76ovaf4jLEIHJadar1E
8Mmbm9Uum4nA0GnbikqCzYb/PUi0EgGrT+3qvwjW2t2wLv2QCNinDEj/Jlgy
9XlIkYMIrOMSTKYTzDFz8XeTswg81tN8cZ3gEctDjkMnRWA6V/+AHMEtr2j1
c2eI9RQPJ98n+ink5N6xwVsElm0Gbv4h+n16rO812Z9Yb5ObvgLBN/I+SeoG
iUCbwqPHOsS8Ppvio00vi8AZg0CGglwHtvN0X3C6KgIpHTx1k4ReUIU8/KJE
IFczLTWV0FNJVrz7epwIdOpmWyvKdGCBoD8mqYkiYHL692QM4cdcS23B+3si
sFCveL1ZsgP3qz1RrkoVgcCu05v/Ef7VRgalfHkiAnkuo/n/CH/f91vzjr8U
gejLYh4thP/J21WCON6IwMTlUP14Ih/u4912qp9E4MQXK6dnRJ4s9ufWoiKC
1zXXLRB5030as822TASuPi++osHTgbkPG4hfootA1TeBeV2ODjyeJRx1q0kE
puK429autuMO3rHZF20i8C7umlLeYjt+WfKws7FPBOjd272zp9rxTbGAfYOD
IrApwTd46Q+xn85b5M0Oi0Cdrq4mZawd71VcvUv6JwLD9s7tIt/b8VCsy2Hf
taJQz7H1nDuxH8+NqMlprBcFvFimvdjYjmf3zY+NCYjCdrFCS196O+bjTLx2
RlIUioqqsvk+t2ONoIoPLjRRGEp6+d//zoPCjvhQGS1RuOPPpn6HOC/2aB81
/6orChzZow+UnrbjwxNTg0dAFCatk+oX7rbjS6coQpY2oqAtL/fzwJV2zF3x
t2+9nSikL8nnSwUR+5mEX9OPikJyoGVGk287cV4e2W3sJgoXzrpLs061Y7r1
jfM7g0ThN+/boUJT4rzcNdqk+ohYv8n62f6N7fjxg/wHv56JwuWaLAWXte1Y
eT7CPT1DFPotN2YfXW3DBh+kV+VyiHk01FXWTLThEyqW6pJVosAWYeEiwmjD
70VzYnl+i4LD0YxDhhFt2GQi0OS7rhjcZOVfMPzWiqU0ZSJ5DMQgW3Ffpmpr
Kx73rSxXNRSDuNO4ea66FSfNCBj4monBNrZddgbvWnHf8iv1VWcxqNFLl/IM
acW+678KSdwQgx+Mj4KXBVrxfWXoM+8RA/Z0qpgupQV7ef6Q9OkXg9STVHq2
aAtGb2OP3P4uBm1pZe1Ca1vwkMaX5i8TYjCfU+wV85OJ1bf5VrhxiUN+5roe
s3QmrjB+nhFKEwe/2qs0NTkmHj3B4/fhiji8jNxRasRN/J+nGZXgCHGI+8Hd
sn24CU98CV1bf0Mcvhyqg/KKJvzXcv7BwG1xsLo7eMo2uAnP7hip5M8QB3OL
vSWx3xsxh3CD6JlmcTCy35R37QMDS1TGF0qTJaCw/STXCd16bKwgxnG9XAL8
/p1eetZVhQUZlJvvJyThI8+coRX9I5aKyrLS1ZWCzks7Mj8PRaJkVX0BIXdp
SOjyppm/z0eHzBgJpZ7SwKO0dEaQvQAJeh7f5OEjDakCYSdfWxegmNc3BD8H
SUP8c0Nei78F6LJyt7B3rDS0BF1wsNcsQiepIRL12dKQ28nvqPqyBGnKl8hd
XZKGjl5hPyHtz2h8t/UzdXYZOBotzdSx/4xeu36X714jA+7rlrbsuPwZKTzd
oKi5UQaebrBA4zWfkTjZifqNLAOsGY/OP/blaEVmVXXHPhkIujQqvvtCBaJL
Gur8uyUDTyTl0yZSq1CzTBaF654M3OUU3DRRVoU65KTFRVJlYPPOKKPqoSo0
oDK/oPtSBmyQrPKiajWa255dFlwoA28+PU4Nyq9GFEeyOcegDIx0mGQ9qqtB
4Q/YT2zSlgX4oq1tU1+Hoh5528rpy4JyzPq1k7/q0M1nvXu37pIFq/QajuM8
dJSSWaB0aL8sVMfrtn8yoqP3RefHk4/KgtTWymSdIjrq6xkIIl0jrn/5pub0
qB5tlypP2NIhCw683kIuexiIJa/Q96tbFm4H/pOyc2CgG6qRqs+/yYLNvp2n
FM4zUNd202rxX7Iw4LHNSj+NgQLtWxbZl2ThMOfkhPUMAzmYnd86IkACnuPr
5VXSGpG6pZzDPiES/JsblHXMaUQcNq2hz0VIMJm5MuFU3YheOeg0OkmS4IXv
q7y+sUY0d2b+dKs8CeQsDucUb29Cd6PC0op1SXBT6WvCQH0T8ojVqpLQJ0Fa
LM8j3d4mtCth8HfADhIslPXaHBtvQt/v7dXXBBLsmIzK28jTjLTTedtemJAg
2trEtlCpGbVU3eKNP0qCN5b6k69PNaOXdbs1Rp1I8KU0ZN03r2YUzPh32OQ4
CUqpFeGLfs2I3H7oOacbCZordL3HwpqRz5AEuuBNAn/eJ3c/pDYjfs6n/sfD
SZDed9WwntGMuOexzWQECXq3e/MutTajlfFerbDrJHidqJwh0N2MJrolJh/H
Ev0a+dp+/96MmnNune2/S4KXo4vdO5aaUW1GlrlPCgnGMxvo0exMVJbGUGVL
JUHxlgaPEm4myo7mHZF9QgIuH6dMhgATJbqGuTlnkuCE15faFHkmirZ7tHfi
LQn25463rFFionCLEoUr74n1eFvPH1JjIr/t86y0jySYg/cnHmkzkZeGWLl6
Pglk9o5lp2xjopMUnSelhSSAjLCYQAMmshU879yHSWARSf3Su4eJzHnid50r
J8GHsSETt31MZLTyRnqlkgQJl6xRiykT6YwM90jTSeBNu5xra81EouUudsfa
SLDJmvWK8xgT8edf1hvrIEHL6H1qhjMTcb9LFb30hQTrIqUVNVyZaDalqy21
jwTxeccfj7gx0Z/4mVy1ARI0vOWUlT7DRMPXhG8XD5KgxlJDdqsnE3Wdt7L+
Okz4w9eRzuvNRM3u5zS8fpMg+1eSFt2HiWqPxW5cGiPB15Uze875EnravB6P
+UOClFc/e6b9mKjApJax+R8JlJsbll3+Y6Ic9ONN5jQJ6D1cmVkBTPRahyt2
xxwJrr1M/z4QyERPVeU86xdIMBg6nzV7gYnuk8HUcZkEijKe6yeDCD/EnJR/
r5LAIDZlmRFM+LHhIk8IBxkMtlhE3gwh/OC8/5NvDRneZF9+pXWRiULm86rv
ryVD+Iq5RyHB/hPtL1T4yFClt7ZB8RLhz/d/EYXryVD9hNriT/DJnk0nTTeS
YeNL29B0go8yt+zp3kQGaezSXUKwbc0BOQ9hMij9ZzqUR7B5iSf7gigZGMYG
T+8QbJR7o/+GBBlan8SKHyF456t0LCFFhouDJWZLRH3dR1Vpr2TIoKp7Ga4R
rH5n8JI+mQwRiemLk0T/lBj2Y3XyZFj6iMJ3EywTJmtgTyHDfc4LXwKIed/5
8cj1KpEhft278NuEHrvcJtceVyXD25/T6+4QejXadY8N0cggIfEhOITQ85hZ
RetpDTIcv/lfmzGh9+jONwWjWmQQDZ2QmfVnoosadx756JAhKHjVOZbwK1XE
3fPCdjKoY1LfKcJfNR4r6yUDMuxa/4n6+hwTFS1s0wtFZBCBX6GtXkzU/Y2P
M8qIDH8Hfl1sP81EHi3/htftI8NLxxDaOyJfC5VfG+NNyBBQqsXrdZKJJF6/
u3/PggyLetbO94h8ZqTeC91sTax3o3CYi8jvtvhQt0c2ZBDityg64sBEdv4H
tdLtyECyzXR8a0vk022HuKojGQp9cvXfE/kPtFdYeXeMDJLOrmHJFkx0d9dM
3SdXMli8HfCW2E/oqfkta/spMmwPVFHKMWKiT/K1d0rdySBbzHdWw5CJ2nnu
H6/2IoNOyZbPvfpMJNy6c749gAwpoV8fLCkz0fMqyjf7IDIo3npcVq7IRFvz
N1b1hhD9J1LxOTITHXw4kPA9lAxrfP74XhBnolvu15Smo8ngKDb8zWYNE5Ec
zvEHxZHhxJzGkgkbE703PzK1FE+wLJsJZZE4nzSVy7jukMFe4cTTW3+I826p
4YjwIzKYsTU/0ibOs7TxjzuTnxDz+3ZEH2trRuoDafJSz8lQnpHEfbaxGR2o
9pmQf0WGXk3hQVTejGIThK9vzSXDZxXN1E8ZzYhX8eingzVkYPt24Oc/n2bk
IYFMM+vIIEDz9Vnv0YzoG+T6OBvIkNvvf2/jCeL5mZ9rPjaT4WzNs4l2W6Kf
Wr9DYt1k2GfqKndSr5l4X4iZ6hklA/d6Hi/5ySbk63wuSnuCuP5Vn/dDfxNq
tbGWipskgwpX1OXNzU0oyUDMaNcMGb7qvHH2fteExPif3X68Soa9Hvf51M80
IansQq1TgnIw6eQvRepsRBdfPKwuEZYDj31DcaqVjag3JdRBVEwOphBb+sbs
RpQWbhxes1kO3Fr6TF2jGxHJtoWprCgH2ppbSrV3NCLF2V8+43pycPbhmOjr
OwykvlMiK/CYHOjrFm0tVW9AufJnFjlc5OCMcyK3tEgD2sZXsO+mqxyI2P8X
dnCxHu3utOt/7i4HPidblXbX1KPD55M3tZyXA4UtzUf1j9WjKy/E/NUi5aD+
AWNddhgdNW8Q1R94JwcFeYlOMu9qkW+fYIUpmzwgxqcap8eVqLb6aMlrDnlg
v1e2AqGVSCbrZR7fGnmwLd/wnM+lEtGvbH9D55WHJkyatZWtRHJk1zumQvIg
Gz45RU+tQMwT2e6mFHk48KvT1u12OdL4Zbne1Fweaj2TJrN8ytDEv9hDJsny
8OPCk7HV0Ty0b0v1fROaApTW/bcLM+6g0n87FmcbFeDUEf+ppZE3+ElDnqsN
UwG+bL+dZhn8Fke82Ep/16oAjjJ6YWd432GTI6opp7oUYCbv4fIEJQu3FUrq
tQ4owNqcj89Sst7jkbB533dTCiCUG8MzN5CDRQXyRk5KKsLZM+fWP1bLw/PD
WgfLpBTh/samjXw+efjr53cFm2UVIUjvh5l5bh5+4vcyqkVeEfQ+CG2y08/H
ap13KEBThBMX3Kyv7inAu9P8XTeDInybKYrvtSzC59S0upmnFGHFSUPysDHG
/81KLjifVgSt3VO3D97A+GI5p+S4hyLEj86uE27AOMau3Z7PRxFy6c5bfZXK
cEbEhS+7gxXhZYjpbGdmGWZ9Le3KvakIz8r5fBvffMaH48w67+QpQkj+VyHp
uxX4mJ32rHyhIvjP01xv5lbgk/LSYjnFiiDnn2P/tbkC+xWMH278rAihZYPJ
G9ZV4oTvtzq4GxRhmAd9LLtUiek7u9oD+xVhdGOz1N6jVXjn+Mk2e14K3Knt
9cxeqsaiRfueFq+jQBBz8WmNUA0ev67iI8tPgasKL+sKVWpwGvnPuu+CFBjV
NfPXs6vBK7Yhe3ykKPBx3zeN69k1GBfdyoncQoHrLxbCTx+rxclR/qG/NCkQ
yLfQAb612OfQEQtzbQp07B71moqsxaQJqZFN+hTQ+xW2MJpVi0PlMsgPd1Og
O5P6m8RWhw1vlCbkHqKAlVOVyZWUOix5+ImTqB0FVPztfdje1OG/chFqQQ4U
UCvvdHEsrcNPi01qdzlTQKuR3ySNVYc5/rSt1p2mwNtvv4cOKdNxxeHf5/pD
KHApK/q/4Cw6TpVvNNhzmQIRKknRNzEd+/95z/cylAIrZuVKIU10rBAd8NLz
GgV2ra7P7x2n44gS9r6ZmxRgX7DYWq1aj/cqiB/Y8JQCu9Msv4mk1eMPY1Xk
k88pYHcnstAtsx4r5PnNFL6kwEHX0FcJ+fWYy7Tp0elMCpjpDsZ4t9Tjcu/I
vxUfKODRQBk/wtWAdxVN3QuuoUCcRqpurUsDfhfx1ItZRwFrjkDL554NWNrC
ylCpgQI8c8v5dgENeKk/c6S9mQIGEhm2pjENuJD7xE7NbgqMtHgkW+Y2YN2D
TNbPUQpMSl616V5swC83X8nbNUHM7ya7QY+LgUW+q8XemaSA3FWHaM/1DDwV
GKWzZ4YCe/u7ch2lGDjnIYpKW6XAWX/h9XbbGVjOfezoNDsV7Cz3q/gaMvAt
jQea5lxUIC8ufjmxn4F9Kma653mosNz+rYtxiIG3/HpLOyRIhQt7AxhF5xg4
LceR440wFZz2r5245c/A/Bd5OznEqHCV8fAS8fKNx/lPhb7fTAXRssxW0jUG
duoSPLRWhgoHh24n2UYzMONJmbITiQo8s64fneMZ+I22VOs6RSr8nZ1Yt5TM
wFIrdemuVCpEn2k1iHvIwDE1gRcLlKnQ0jBcMf2EgT0cWhXd1alAp5szzF8z
cLd82EKJBhU0L/5nvuMdA5uMqTcJb6XCoHHEZvYcBlYKjb5QrkeFpm0uLwQL
GLh4x4s15tupcJ8nYeZZMQNbzeLEdgMqDBnwnFpTxsBDOd2yzogKsbdu/9Gt
YOAL56bfDBsS85D2p2yrZuD1KgLbfY2oIGF33ZmvjoEff1epWTSmgtLs8p43
9Qxce9RlgN+cCuK5xZ4uzQx8VDzkXLIFFWTCO7J9Wxj4T+udRbI1FVR46zcf
amPgiPj3UZk2VPjGgTPXdjCwuFm9iM5hQo+dciejOwl9uH88LbWjws9bWft6
uxgYytk09jtS4XSrlz1bNwO3XdpcwjxGBdna16n/CD6tr2vq6EIFMck1Ink9
DLw0ZdU55EqFUlPXatOvDJzw3vPkuVNUcH7x78M7ghW8Iidn3amgq6nznUVw
PvXJ5TAPKqx5Nub4k2DzwaJ1685SwdRCXaaY4P60juQkbyr8FrHRPE6wv8Ok
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
jUI3vy9AR/8HDlDvFw==
       "]]},
     Annotation[#, "Charting`Private`Tag$28406#2"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 15}, {-0.4027589422918457, 0.9999999999999766}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{{{0, 
      FormBox["0", TraditionalForm]}, {5, 
      FormBox["5", TraditionalForm]}, {10, 
      FormBox["10", TraditionalForm]}, {15, 
      FormBox["15", TraditionalForm]}}, Automatic}]], "Output",
 CellChangeTimes->{3.815050965740396*^9, 3.8166033171575127`*^9, 
  3.8166047021498404`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"x01appr", "=", 
  RowBox[{"NSolve", "[", 
   RowBox[{
    RowBox[{"p0", "\[Equal]", "0"}], ",", "x"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.815050974524597*^9, 3.815050994071415*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{
      RowBox[{"-", "6.7814330376576235`"}], "-", 
      RowBox[{"5.600403886277976`", " ", "\[ImaginaryI]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{
      RowBox[{"-", "6.7814330376576235`"}], "+", 
      RowBox[{"5.600403886277976`", " ", "\[ImaginaryI]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{
      RowBox[{"-", "6.545852400617695`"}], "-", 
      RowBox[{"1.7248354800069867`", " ", "\[ImaginaryI]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{
      RowBox[{"-", "6.545852400617695`"}], "+", 
      RowBox[{"1.7248354800069867`", " ", "\[ImaginaryI]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"-", "5.405916775429825`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"-", "2.404826536856482`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "2.404826536856482`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "5.405916775429826`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"6.545852400617717`", "\[VeryThinSpace]", "-", 
      RowBox[{"1.7248354800069832`", " ", "\[ImaginaryI]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"6.545852400617717`", "\[VeryThinSpace]", "+", 
      RowBox[{"1.7248354800069832`", " ", "\[ImaginaryI]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"6.7814330376576235`", "\[VeryThinSpace]", "-", 
      RowBox[{"5.600403886277977`", " ", "\[ImaginaryI]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"6.7814330376576235`", "\[VeryThinSpace]", "+", 
      RowBox[{"5.600403886277977`", " ", "\[ImaginaryI]"}]}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.815050995235817*^9, 3.8166033178980618`*^9, 
  3.8166047174358425`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"x01", "=", 
  RowBox[{"SetPrecision", "[", 
   RowBox[{
    RowBox[{"FindRoot", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"BesselJ", "[", 
        RowBox[{"0", ",", "x"}], "]"}], "\[Equal]", "0"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "1"}], "}"}]}], "]"}], ",", "10"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.815051011527336*^9, 3.815051067002967*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"x", "\[Rule]", "2.40482555769577288629079703241586685181`10."}], 
  "}"}]], "Output",
 CellChangeTimes->{3.8150510700428715`*^9, 3.816603318445057*^9, 
  3.816604734832156*^9}]
}, Open  ]]
}, Open  ]],

Cell["--------------------TheEnd--------------------", "Section",
 CellChangeTimes->{{3.8150510895983334`*^9, 3.8150511139345846`*^9}}]
}, Open  ]]
},
WindowSize->{1366, 685},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
Magnification->1.25,
FrontEndVersion->"11.0 for Microsoft Windows (64-bit) (September 21, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 157, 2, 101, "Chapter"],
Cell[740, 26, 73, 1, 37, "Input"],
Cell[CellGroupData[{
Cell[838, 31, 144, 3, 37, "Input"],
Cell[985, 36, 133, 2, 37, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1155, 43, 209, 5, 37, "Input"],
Cell[1367, 50, 1037, 34, 57, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2441, 89, 277, 8, 37, "Input"],
Cell[2721, 99, 622, 19, 57, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3380, 123, 277, 8, 37, "Input"],
Cell[3660, 133, 583, 18, 57, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4280, 156, 124, 2, 37, "Input"],
Cell[4407, 160, 748, 18, 37, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5192, 183, 272, 7, 37, "Input"],
Cell[5467, 192, 903, 28, 57, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6407, 225, 148, 1, 86, "Section"],
Cell[6558, 228, 126, 2, 37, "Input"],
Cell[CellGroupData[{
Cell[6709, 234, 581, 17, 37, "Input"],
Cell[7293, 253, 549, 17, 41, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7879, 275, 487, 13, 37, "Input"],
Cell[8369, 290, 1946, 55, 88, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[10352, 350, 333, 9, 37, "Input"],
Cell[10688, 361, 827, 26, 57, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[11552, 392, 154, 3, 37, "Input"],
Cell[11709, 397, 470, 15, 57, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[12216, 417, 329, 9, 37, "Input"],
Cell[12548, 428, 20167, 345, 306, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[32752, 778, 146, 3, 37, "Input"],
Cell[32901, 783, 113, 1, 37, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[33051, 789, 183, 4, 37, "Input"],
Cell[33237, 795, 1271, 33, 62, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[34545, 833, 239, 7, 37, "Input"],
Cell[34787, 842, 1254, 34, 62, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[36090, 882, 111, 1, 86, "Section"],
Cell[CellGroupData[{
Cell[36226, 887, 153, 3, 37, "Input"],
Cell[36382, 892, 284, 9, 53, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[36703, 906, 505, 17, 37, "Input"],
Cell[37211, 925, 437, 15, 61, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[37685, 945, 124, 2, 37, "Input"],
Cell[37812, 949, 96, 1, 37, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[37945, 955, 126, 2, 37, "Input"],
Cell[38074, 959, 94, 1, 37, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[38205, 965, 121, 2, 37, "Input"],
Cell[38329, 969, 366, 12, 53, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[38732, 986, 129, 2, 37, "Input"],
Cell[38864, 990, 254, 8, 53, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[39155, 1003, 159, 3, 37, "Input"],
Cell[39317, 1008, 268, 8, 53, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[39622, 1021, 156, 3, 37, "Input"],
Cell[39781, 1026, 251, 8, 57, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[40069, 1039, 355, 9, 37, "Input"],
Cell[40427, 1050, 753, 25, 53, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[41217, 1080, 843, 24, 37, "Input"],
Cell[42063, 1106, 29865, 515, 314, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[71977, 1627, 138, 1, 86, "Section"],
Cell[72118, 1630, 179, 3, 37, "Input"],
Cell[CellGroupData[{
Cell[72322, 1637, 530, 17, 37, "Input"],
Cell[72855, 1656, 609, 19, 41, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[73501, 1680, 180, 4, 37, "Input"],
Cell[73684, 1686, 551, 17, 41, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[74272, 1708, 435, 12, 37, "Input"],
Cell[74710, 1722, 431, 13, 53, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[75178, 1740, 406, 11, 37, "Input"],
Cell[75587, 1753, 455, 14, 53, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[76079, 1772, 338, 10, 37, "Input"],
Cell[76420, 1784, 457, 15, 37, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[76914, 1804, 513, 16, 37, "Input"],
Cell[77430, 1822, 2268, 74, 69, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[79735, 1901, 155, 3, 37, "Input"],
Cell[79893, 1906, 2187, 68, 89, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[82117, 1979, 376, 11, 37, "Input"],
Cell[82496, 1992, 715, 23, 37, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[83248, 2020, 235, 6, 37, "Input"],
Cell[83486, 2028, 732, 23, 60, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[84255, 2056, 293, 8, 37, "Input"],
Cell[84551, 2066, 574, 18, 56, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[85174, 2090, 229, 3, 86, "Section"],
Cell[CellGroupData[{
Cell[85428, 2097, 657, 19, 37, "Input"],
Cell[86088, 2118, 1476, 41, 93, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[87601, 2164, 169, 4, 37, "Input"],
Cell[87773, 2170, 150, 3, 37, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[87960, 2178, 694, 21, 37, "Input"],
Cell[88657, 2201, 823, 25, 62, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[89517, 2231, 148, 3, 37, "Input"],
Cell[89668, 2236, 461, 11, 37, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[90166, 2252, 323, 9, 37, "Input"],
Cell[90492, 2263, 223, 5, 37, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[90752, 2273, 437, 13, 37, "Input"],
Cell[91192, 2288, 654, 20, 41, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[91883, 2313, 257, 7, 37, "Input"],
Cell[92143, 2322, 345, 10, 41, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[92525, 2337, 128, 2, 37, "Input"],
Cell[92656, 2341, 221, 5, 37, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[92914, 2351, 375, 11, 37, "Input"],
Cell[93292, 2364, 20112, 347, 306, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[113453, 2717, 109, 1, 86, "Section"],
Cell[113565, 2720, 177, 3, 37, "Input"],
Cell[CellGroupData[{
Cell[113767, 2727, 430, 13, 37, "Input"],
Cell[114200, 2742, 495, 15, 37, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[114732, 2762, 190, 4, 37, "Input"],
Cell[114925, 2768, 1416, 46, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[116378, 2819, 495, 16, 37, "Input"],
Cell[116876, 2837, 617, 20, 37, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[117530, 2862, 192, 4, 37, "Input"],
Cell[117725, 2868, 478, 15, 53, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[118240, 2888, 129, 2, 37, "Input"],
Cell[118372, 2892, 401, 12, 53, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[118810, 2909, 338, 10, 37, "Input"],
Cell[119151, 2921, 459, 15, 37, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[119647, 2941, 455, 15, 37, "Input"],
Cell[120105, 2958, 2176, 72, 69, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[122318, 3035, 133, 2, 37, "Input"],
Cell[122454, 3039, 1514, 48, 41, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[124005, 3092, 307, 9, 37, "Input"],
Cell[124315, 3103, 563, 17, 37, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[124915, 3125, 233, 6, 37, "Input"],
Cell[125151, 3133, 255, 7, 37, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[125443, 3145, 521, 17, 37, "Input"],
Cell[125967, 3164, 628, 20, 37, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[126632, 3189, 192, 4, 37, "Input"],
Cell[126827, 3195, 419, 13, 55, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[127295, 3214, 145, 1, 86, "Section"],
Cell[CellGroupData[{
Cell[127465, 3219, 674, 19, 37, "Input"],
Cell[128142, 3240, 621, 20, 41, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[128800, 3265, 218, 5, 37, "Input"],
Cell[129021, 3272, 507, 15, 37, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[129565, 3292, 256, 6, 37, "Input"],
Cell[129824, 3300, 521, 16, 37, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[130382, 3321, 150, 3, 37, "Input"],
Cell[130535, 3326, 413, 12, 37, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[130985, 3343, 385, 10, 37, "Input"],
Cell[131373, 3355, 312, 9, 37, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[131722, 3369, 332, 9, 37, "Input"],
Cell[132057, 3380, 928, 29, 57, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[133022, 3414, 151, 3, 37, "Input"],
Cell[133176, 3419, 491, 15, 57, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[133704, 3439, 387, 10, 37, "Input"],
Cell[134094, 3451, 285, 8, 37, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[134416, 3464, 332, 9, 37, "Input"],
Cell[134751, 3475, 881, 28, 57, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[135669, 3508, 149, 3, 37, "Input"],
Cell[135821, 3513, 454, 14, 57, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[136312, 3532, 408, 11, 37, "Input"],
Cell[136723, 3545, 30870, 527, 284, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[167630, 4077, 570, 17, 37, "Input"],
Cell[168203, 4096, 33137, 561, 284, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[201377, 4662, 211, 5, 37, "Input"],
Cell[201591, 4669, 2007, 51, 62, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[203635, 4725, 401, 11, 37, "Input"],
Cell[204039, 4738, 216, 5, 37, "Output"]
}, Open  ]]
}, Open  ]],
Cell[204282, 4747, 135, 1, 86, "Section"]
}, Open  ]]
}
]
*)

